// Code generated by protoc-gen-go.
// source: github.com/vjurenka/hs-proto-go/pegasus/game/game.proto
// DO NOT EDIT!

/*
Package game is a generated protocol buffer package.

It is generated from these files:
	github.com/vjurenka/hs-proto-go/pegasus/game/game.proto

It has these top-level messages:
	Tag
	Entity
	SubOption
	Option
	Player
	Handshake
	Ping
	GetGameState
	ChooseOption
	ChooseEntities
	MouseInfo
	UserUI
	Concede
	InviteToSpectate
	RemoveSpectators
	Pong
	GameSetup
	DebugMessage
	AllOptions
	NAckOption
	EntityChoices
	EntitiesChosen
	HistoryBlock
	HistoryMeta
	PowerHistoryCreateGame
	PowerHistoryEntity
	PowerHistoryHide
	PowerHistoryTagChange
	PowerHistoryMetaData
	PowerHistoryStart
	PowerHistoryEnd
	PowerHistoryData
	PowerHistory
	TurnTimer
	GameCanceled
	SpectatorHandshake
	ServerResult
	SpectatorChange
	SpectatorRemoved
	SpectatorNotify
*/
package game

import proto "github.com/golang/protobuf/proto"
import math "math"
import shared "github.com/vjurenka/hs-proto-go/pegasus/shared"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Option_Type int32

const (
	Option_PASS     Option_Type = 1
	Option_END_TURN Option_Type = 2
	Option_POWER    Option_Type = 3
)

var Option_Type_name = map[int32]string{
	1: "PASS",
	2: "END_TURN",
	3: "POWER",
}
var Option_Type_value = map[string]int32{
	"PASS":     1,
	"END_TURN": 2,
	"POWER":    3,
}

func (x Option_Type) Enum() *Option_Type {
	p := new(Option_Type)
	*p = x
	return p
}
func (x Option_Type) String() string {
	return proto.EnumName(Option_Type_name, int32(x))
}
func (x *Option_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Option_Type_value, data, "Option_Type")
	if err != nil {
		return err
	}
	*x = Option_Type(value)
	return nil
}

type Handshake_PacketID int32

const (
	Handshake_ID Handshake_PacketID = 168
)

var Handshake_PacketID_name = map[int32]string{
	168: "ID",
}
var Handshake_PacketID_value = map[string]int32{
	"ID": 168,
}

func (x Handshake_PacketID) Enum() *Handshake_PacketID {
	p := new(Handshake_PacketID)
	*p = x
	return p
}
func (x Handshake_PacketID) String() string {
	return proto.EnumName(Handshake_PacketID_name, int32(x))
}
func (x *Handshake_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Handshake_PacketID_value, data, "Handshake_PacketID")
	if err != nil {
		return err
	}
	*x = Handshake_PacketID(value)
	return nil
}

type Ping_PacketID int32

const (
	Ping_ID Ping_PacketID = 115
)

var Ping_PacketID_name = map[int32]string{
	115: "ID",
}
var Ping_PacketID_value = map[string]int32{
	"ID": 115,
}

func (x Ping_PacketID) Enum() *Ping_PacketID {
	p := new(Ping_PacketID)
	*p = x
	return p
}
func (x Ping_PacketID) String() string {
	return proto.EnumName(Ping_PacketID_name, int32(x))
}
func (x *Ping_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Ping_PacketID_value, data, "Ping_PacketID")
	if err != nil {
		return err
	}
	*x = Ping_PacketID(value)
	return nil
}

type GetGameState_PacketID int32

const (
	GetGameState_ID GetGameState_PacketID = 1
)

var GetGameState_PacketID_name = map[int32]string{
	1: "ID",
}
var GetGameState_PacketID_value = map[string]int32{
	"ID": 1,
}

func (x GetGameState_PacketID) Enum() *GetGameState_PacketID {
	p := new(GetGameState_PacketID)
	*p = x
	return p
}
func (x GetGameState_PacketID) String() string {
	return proto.EnumName(GetGameState_PacketID_name, int32(x))
}
func (x *GetGameState_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetGameState_PacketID_value, data, "GetGameState_PacketID")
	if err != nil {
		return err
	}
	*x = GetGameState_PacketID(value)
	return nil
}

type ChooseOption_PacketID int32

const (
	ChooseOption_ID ChooseOption_PacketID = 2
)

var ChooseOption_PacketID_name = map[int32]string{
	2: "ID",
}
var ChooseOption_PacketID_value = map[string]int32{
	"ID": 2,
}

func (x ChooseOption_PacketID) Enum() *ChooseOption_PacketID {
	p := new(ChooseOption_PacketID)
	*p = x
	return p
}
func (x ChooseOption_PacketID) String() string {
	return proto.EnumName(ChooseOption_PacketID_name, int32(x))
}
func (x *ChooseOption_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChooseOption_PacketID_value, data, "ChooseOption_PacketID")
	if err != nil {
		return err
	}
	*x = ChooseOption_PacketID(value)
	return nil
}

type ChooseEntities_PacketID int32

const (
	ChooseEntities_ID ChooseEntities_PacketID = 3
)

var ChooseEntities_PacketID_name = map[int32]string{
	3: "ID",
}
var ChooseEntities_PacketID_value = map[string]int32{
	"ID": 3,
}

func (x ChooseEntities_PacketID) Enum() *ChooseEntities_PacketID {
	p := new(ChooseEntities_PacketID)
	*p = x
	return p
}
func (x ChooseEntities_PacketID) String() string {
	return proto.EnumName(ChooseEntities_PacketID_name, int32(x))
}
func (x *ChooseEntities_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChooseEntities_PacketID_value, data, "ChooseEntities_PacketID")
	if err != nil {
		return err
	}
	*x = ChooseEntities_PacketID(value)
	return nil
}

type UserUI_PacketID int32

const (
	UserUI_ID UserUI_PacketID = 15
)

var UserUI_PacketID_name = map[int32]string{
	15: "ID",
}
var UserUI_PacketID_value = map[string]int32{
	"ID": 15,
}

func (x UserUI_PacketID) Enum() *UserUI_PacketID {
	p := new(UserUI_PacketID)
	*p = x
	return p
}
func (x UserUI_PacketID) String() string {
	return proto.EnumName(UserUI_PacketID_name, int32(x))
}
func (x *UserUI_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserUI_PacketID_value, data, "UserUI_PacketID")
	if err != nil {
		return err
	}
	*x = UserUI_PacketID(value)
	return nil
}

type Concede_PacketID int32

const (
	Concede_ID Concede_PacketID = 11
)

var Concede_PacketID_name = map[int32]string{
	11: "ID",
}
var Concede_PacketID_value = map[string]int32{
	"ID": 11,
}

func (x Concede_PacketID) Enum() *Concede_PacketID {
	p := new(Concede_PacketID)
	*p = x
	return p
}
func (x Concede_PacketID) String() string {
	return proto.EnumName(Concede_PacketID_name, int32(x))
}
func (x *Concede_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Concede_PacketID_value, data, "Concede_PacketID")
	if err != nil {
		return err
	}
	*x = Concede_PacketID(value)
	return nil
}

type InviteToSpectate_PacketID int32

const (
	InviteToSpectate_ID InviteToSpectate_PacketID = 25
)

var InviteToSpectate_PacketID_name = map[int32]string{
	25: "ID",
}
var InviteToSpectate_PacketID_value = map[string]int32{
	"ID": 25,
}

func (x InviteToSpectate_PacketID) Enum() *InviteToSpectate_PacketID {
	p := new(InviteToSpectate_PacketID)
	*p = x
	return p
}
func (x InviteToSpectate_PacketID) String() string {
	return proto.EnumName(InviteToSpectate_PacketID_name, int32(x))
}
func (x *InviteToSpectate_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InviteToSpectate_PacketID_value, data, "InviteToSpectate_PacketID")
	if err != nil {
		return err
	}
	*x = InviteToSpectate_PacketID(value)
	return nil
}

type RemoveSpectators_PacketID int32

const (
	RemoveSpectators_ID RemoveSpectators_PacketID = 26
)

var RemoveSpectators_PacketID_name = map[int32]string{
	26: "ID",
}
var RemoveSpectators_PacketID_value = map[string]int32{
	"ID": 26,
}

func (x RemoveSpectators_PacketID) Enum() *RemoveSpectators_PacketID {
	p := new(RemoveSpectators_PacketID)
	*p = x
	return p
}
func (x RemoveSpectators_PacketID) String() string {
	return proto.EnumName(RemoveSpectators_PacketID_name, int32(x))
}
func (x *RemoveSpectators_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RemoveSpectators_PacketID_value, data, "RemoveSpectators_PacketID")
	if err != nil {
		return err
	}
	*x = RemoveSpectators_PacketID(value)
	return nil
}

type Pong_PacketID int32

const (
	Pong_ID Pong_PacketID = 116
)

var Pong_PacketID_name = map[int32]string{
	116: "ID",
}
var Pong_PacketID_value = map[string]int32{
	"ID": 116,
}

func (x Pong_PacketID) Enum() *Pong_PacketID {
	p := new(Pong_PacketID)
	*p = x
	return p
}
func (x Pong_PacketID) String() string {
	return proto.EnumName(Pong_PacketID_name, int32(x))
}
func (x *Pong_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Pong_PacketID_value, data, "Pong_PacketID")
	if err != nil {
		return err
	}
	*x = Pong_PacketID(value)
	return nil
}

type GameSetup_PacketID int32

const (
	GameSetup_ID GameSetup_PacketID = 16
)

var GameSetup_PacketID_name = map[int32]string{
	16: "ID",
}
var GameSetup_PacketID_value = map[string]int32{
	"ID": 16,
}

func (x GameSetup_PacketID) Enum() *GameSetup_PacketID {
	p := new(GameSetup_PacketID)
	*p = x
	return p
}
func (x GameSetup_PacketID) String() string {
	return proto.EnumName(GameSetup_PacketID_name, int32(x))
}
func (x *GameSetup_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameSetup_PacketID_value, data, "GameSetup_PacketID")
	if err != nil {
		return err
	}
	*x = GameSetup_PacketID(value)
	return nil
}

type DebugMessage_PacketID int32

const (
	DebugMessage_ID DebugMessage_PacketID = 5
)

var DebugMessage_PacketID_name = map[int32]string{
	5: "ID",
}
var DebugMessage_PacketID_value = map[string]int32{
	"ID": 5,
}

func (x DebugMessage_PacketID) Enum() *DebugMessage_PacketID {
	p := new(DebugMessage_PacketID)
	*p = x
	return p
}
func (x DebugMessage_PacketID) String() string {
	return proto.EnumName(DebugMessage_PacketID_name, int32(x))
}
func (x *DebugMessage_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DebugMessage_PacketID_value, data, "DebugMessage_PacketID")
	if err != nil {
		return err
	}
	*x = DebugMessage_PacketID(value)
	return nil
}

type AllOptions_PacketID int32

const (
	AllOptions_ID AllOptions_PacketID = 14
)

var AllOptions_PacketID_name = map[int32]string{
	14: "ID",
}
var AllOptions_PacketID_value = map[string]int32{
	"ID": 14,
}

func (x AllOptions_PacketID) Enum() *AllOptions_PacketID {
	p := new(AllOptions_PacketID)
	*p = x
	return p
}
func (x AllOptions_PacketID) String() string {
	return proto.EnumName(AllOptions_PacketID_name, int32(x))
}
func (x *AllOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AllOptions_PacketID_value, data, "AllOptions_PacketID")
	if err != nil {
		return err
	}
	*x = AllOptions_PacketID(value)
	return nil
}

type NAckOption_PacketID int32

const (
	NAckOption_ID NAckOption_PacketID = 10
)

var NAckOption_PacketID_name = map[int32]string{
	10: "ID",
}
var NAckOption_PacketID_value = map[string]int32{
	"ID": 10,
}

func (x NAckOption_PacketID) Enum() *NAckOption_PacketID {
	p := new(NAckOption_PacketID)
	*p = x
	return p
}
func (x NAckOption_PacketID) String() string {
	return proto.EnumName(NAckOption_PacketID_name, int32(x))
}
func (x *NAckOption_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NAckOption_PacketID_value, data, "NAckOption_PacketID")
	if err != nil {
		return err
	}
	*x = NAckOption_PacketID(value)
	return nil
}

type EntityChoices_PacketID int32

const (
	EntityChoices_ID EntityChoices_PacketID = 17
)

var EntityChoices_PacketID_name = map[int32]string{
	17: "ID",
}
var EntityChoices_PacketID_value = map[string]int32{
	"ID": 17,
}

func (x EntityChoices_PacketID) Enum() *EntityChoices_PacketID {
	p := new(EntityChoices_PacketID)
	*p = x
	return p
}
func (x EntityChoices_PacketID) String() string {
	return proto.EnumName(EntityChoices_PacketID_name, int32(x))
}
func (x *EntityChoices_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EntityChoices_PacketID_value, data, "EntityChoices_PacketID")
	if err != nil {
		return err
	}
	*x = EntityChoices_PacketID(value)
	return nil
}

type EntitiesChosen_PacketID int32

const (
	EntitiesChosen_ID EntitiesChosen_PacketID = 13
)

var EntitiesChosen_PacketID_name = map[int32]string{
	13: "ID",
}
var EntitiesChosen_PacketID_value = map[string]int32{
	"ID": 13,
}

func (x EntitiesChosen_PacketID) Enum() *EntitiesChosen_PacketID {
	p := new(EntitiesChosen_PacketID)
	*p = x
	return p
}
func (x EntitiesChosen_PacketID) String() string {
	return proto.EnumName(EntitiesChosen_PacketID_name, int32(x))
}
func (x *EntitiesChosen_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EntitiesChosen_PacketID_value, data, "EntitiesChosen_PacketID")
	if err != nil {
		return err
	}
	*x = EntitiesChosen_PacketID(value)
	return nil
}

type HistoryBlock_Type int32

const (
	HistoryBlock_ATTACK  HistoryBlock_Type = 1
	HistoryBlock_JOUST   HistoryBlock_Type = 2
	HistoryBlock_POWER   HistoryBlock_Type = 3
	HistoryBlock_TRIGGER HistoryBlock_Type = 5
	HistoryBlock_DEATHS  HistoryBlock_Type = 6
	HistoryBlock_PLAY    HistoryBlock_Type = 7
	HistoryBlock_FATIGUE HistoryBlock_Type = 8
)

var HistoryBlock_Type_name = map[int32]string{
	1: "ATTACK",
	2: "JOUST",
	3: "POWER",
	5: "TRIGGER",
	6: "DEATHS",
	7: "PLAY",
	8: "FATIGUE",
}
var HistoryBlock_Type_value = map[string]int32{
	"ATTACK":  1,
	"JOUST":   2,
	"POWER":   3,
	"TRIGGER": 5,
	"DEATHS":  6,
	"PLAY":    7,
	"FATIGUE": 8,
}

func (x HistoryBlock_Type) Enum() *HistoryBlock_Type {
	p := new(HistoryBlock_Type)
	*p = x
	return p
}
func (x HistoryBlock_Type) String() string {
	return proto.EnumName(HistoryBlock_Type_name, int32(x))
}
func (x *HistoryBlock_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HistoryBlock_Type_value, data, "HistoryBlock_Type")
	if err != nil {
		return err
	}
	*x = HistoryBlock_Type(value)
	return nil
}

type HistoryMeta_Type int32

const (
	HistoryMeta_TARGET  HistoryMeta_Type = 0
	HistoryMeta_DAMAGE  HistoryMeta_Type = 1
	HistoryMeta_HEALING HistoryMeta_Type = 2
	HistoryMeta_JOUST   HistoryMeta_Type = 3
)

var HistoryMeta_Type_name = map[int32]string{
	0: "TARGET",
	1: "DAMAGE",
	2: "HEALING",
	3: "JOUST",
}
var HistoryMeta_Type_value = map[string]int32{
	"TARGET":  0,
	"DAMAGE":  1,
	"HEALING": 2,
	"JOUST":   3,
}

func (x HistoryMeta_Type) Enum() *HistoryMeta_Type {
	p := new(HistoryMeta_Type)
	*p = x
	return p
}
func (x HistoryMeta_Type) String() string {
	return proto.EnumName(HistoryMeta_Type_name, int32(x))
}
func (x *HistoryMeta_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HistoryMeta_Type_value, data, "HistoryMeta_Type")
	if err != nil {
		return err
	}
	*x = HistoryMeta_Type(value)
	return nil
}

type PowerHistory_PacketID int32

const (
	PowerHistory_ID PowerHistory_PacketID = 19
)

var PowerHistory_PacketID_name = map[int32]string{
	19: "ID",
}
var PowerHistory_PacketID_value = map[string]int32{
	"ID": 19,
}

func (x PowerHistory_PacketID) Enum() *PowerHistory_PacketID {
	p := new(PowerHistory_PacketID)
	*p = x
	return p
}
func (x PowerHistory_PacketID) String() string {
	return proto.EnumName(PowerHistory_PacketID_name, int32(x))
}
func (x *PowerHistory_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PowerHistory_PacketID_value, data, "PowerHistory_PacketID")
	if err != nil {
		return err
	}
	*x = PowerHistory_PacketID(value)
	return nil
}

type TurnTimer_PacketID int32

const (
	TurnTimer_ID TurnTimer_PacketID = 9
)

var TurnTimer_PacketID_name = map[int32]string{
	9: "ID",
}
var TurnTimer_PacketID_value = map[string]int32{
	"ID": 9,
}

func (x TurnTimer_PacketID) Enum() *TurnTimer_PacketID {
	p := new(TurnTimer_PacketID)
	*p = x
	return p
}
func (x TurnTimer_PacketID) String() string {
	return proto.EnumName(TurnTimer_PacketID_name, int32(x))
}
func (x *TurnTimer_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TurnTimer_PacketID_value, data, "TurnTimer_PacketID")
	if err != nil {
		return err
	}
	*x = TurnTimer_PacketID(value)
	return nil
}

type GameCanceled_Reason int32

const (
	GameCanceled_OPPONENT_TIMEOUT GameCanceled_Reason = 1
)

var GameCanceled_Reason_name = map[int32]string{
	1: "OPPONENT_TIMEOUT",
}
var GameCanceled_Reason_value = map[string]int32{
	"OPPONENT_TIMEOUT": 1,
}

func (x GameCanceled_Reason) Enum() *GameCanceled_Reason {
	p := new(GameCanceled_Reason)
	*p = x
	return p
}
func (x GameCanceled_Reason) String() string {
	return proto.EnumName(GameCanceled_Reason_name, int32(x))
}
func (x *GameCanceled_Reason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameCanceled_Reason_value, data, "GameCanceled_Reason")
	if err != nil {
		return err
	}
	*x = GameCanceled_Reason(value)
	return nil
}

type GameCanceled_PacketID int32

const (
	GameCanceled_ID GameCanceled_PacketID = 12
)

var GameCanceled_PacketID_name = map[int32]string{
	12: "ID",
}
var GameCanceled_PacketID_value = map[string]int32{
	"ID": 12,
}

func (x GameCanceled_PacketID) Enum() *GameCanceled_PacketID {
	p := new(GameCanceled_PacketID)
	*p = x
	return p
}
func (x GameCanceled_PacketID) String() string {
	return proto.EnumName(GameCanceled_PacketID_name, int32(x))
}
func (x *GameCanceled_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameCanceled_PacketID_value, data, "GameCanceled_PacketID")
	if err != nil {
		return err
	}
	*x = GameCanceled_PacketID(value)
	return nil
}

type SpectatorHandshake_PacketID int32

const (
	SpectatorHandshake_ID SpectatorHandshake_PacketID = 22
)

var SpectatorHandshake_PacketID_name = map[int32]string{
	22: "ID",
}
var SpectatorHandshake_PacketID_value = map[string]int32{
	"ID": 22,
}

func (x SpectatorHandshake_PacketID) Enum() *SpectatorHandshake_PacketID {
	p := new(SpectatorHandshake_PacketID)
	*p = x
	return p
}
func (x SpectatorHandshake_PacketID) String() string {
	return proto.EnumName(SpectatorHandshake_PacketID_name, int32(x))
}
func (x *SpectatorHandshake_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpectatorHandshake_PacketID_value, data, "SpectatorHandshake_PacketID")
	if err != nil {
		return err
	}
	*x = SpectatorHandshake_PacketID(value)
	return nil
}

type ServerResult_Code int32

const (
	ServerResult_RESULT_OK         ServerResult_Code = 0
	ServerResult_RESULT_RETRY      ServerResult_Code = 1
	ServerResult_RESULT_NOT_EXISTS ServerResult_Code = 2
)

var ServerResult_Code_name = map[int32]string{
	0: "RESULT_OK",
	1: "RESULT_RETRY",
	2: "RESULT_NOT_EXISTS",
}
var ServerResult_Code_value = map[string]int32{
	"RESULT_OK":         0,
	"RESULT_RETRY":      1,
	"RESULT_NOT_EXISTS": 2,
}

func (x ServerResult_Code) Enum() *ServerResult_Code {
	p := new(ServerResult_Code)
	*p = x
	return p
}
func (x ServerResult_Code) String() string {
	return proto.EnumName(ServerResult_Code_name, int32(x))
}
func (x *ServerResult_Code) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResult_Code_value, data, "ServerResult_Code")
	if err != nil {
		return err
	}
	*x = ServerResult_Code(value)
	return nil
}

type ServerResult_Constants int32

const (
	ServerResult_DEFAULT_RETRY_SECONDS ServerResult_Constants = 2
)

var ServerResult_Constants_name = map[int32]string{
	2: "DEFAULT_RETRY_SECONDS",
}
var ServerResult_Constants_value = map[string]int32{
	"DEFAULT_RETRY_SECONDS": 2,
}

func (x ServerResult_Constants) Enum() *ServerResult_Constants {
	p := new(ServerResult_Constants)
	*p = x
	return p
}
func (x ServerResult_Constants) String() string {
	return proto.EnumName(ServerResult_Constants_name, int32(x))
}
func (x *ServerResult_Constants) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResult_Constants_value, data, "ServerResult_Constants")
	if err != nil {
		return err
	}
	*x = ServerResult_Constants(value)
	return nil
}

type ServerResult_PacketID int32

const (
	ServerResult_ID ServerResult_PacketID = 23
)

var ServerResult_PacketID_name = map[int32]string{
	23: "ID",
}
var ServerResult_PacketID_value = map[string]int32{
	"ID": 23,
}

func (x ServerResult_PacketID) Enum() *ServerResult_PacketID {
	p := new(ServerResult_PacketID)
	*p = x
	return p
}
func (x ServerResult_PacketID) String() string {
	return proto.EnumName(ServerResult_PacketID_name, int32(x))
}
func (x *ServerResult_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerResult_PacketID_value, data, "ServerResult_PacketID")
	if err != nil {
		return err
	}
	*x = ServerResult_PacketID(value)
	return nil
}

type SpectatorRemoved_SpectatorRemovedReason int32

const (
	SpectatorRemoved_SPECTATOR_REMOVED_REASON_KICKED   SpectatorRemoved_SpectatorRemovedReason = 0
	SpectatorRemoved_SPECTATOR_REMOVED_REASON_GAMEOVER SpectatorRemoved_SpectatorRemovedReason = 1
)

var SpectatorRemoved_SpectatorRemovedReason_name = map[int32]string{
	0: "SPECTATOR_REMOVED_REASON_KICKED",
	1: "SPECTATOR_REMOVED_REASON_GAMEOVER",
}
var SpectatorRemoved_SpectatorRemovedReason_value = map[string]int32{
	"SPECTATOR_REMOVED_REASON_KICKED":   0,
	"SPECTATOR_REMOVED_REASON_GAMEOVER": 1,
}

func (x SpectatorRemoved_SpectatorRemovedReason) Enum() *SpectatorRemoved_SpectatorRemovedReason {
	p := new(SpectatorRemoved_SpectatorRemovedReason)
	*p = x
	return p
}
func (x SpectatorRemoved_SpectatorRemovedReason) String() string {
	return proto.EnumName(SpectatorRemoved_SpectatorRemovedReason_name, int32(x))
}
func (x *SpectatorRemoved_SpectatorRemovedReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpectatorRemoved_SpectatorRemovedReason_value, data, "SpectatorRemoved_SpectatorRemovedReason")
	if err != nil {
		return err
	}
	*x = SpectatorRemoved_SpectatorRemovedReason(value)
	return nil
}

type SpectatorNotify_PacketID int32

const (
	SpectatorNotify_ID SpectatorNotify_PacketID = 24
)

var SpectatorNotify_PacketID_name = map[int32]string{
	24: "ID",
}
var SpectatorNotify_PacketID_value = map[string]int32{
	"ID": 24,
}

func (x SpectatorNotify_PacketID) Enum() *SpectatorNotify_PacketID {
	p := new(SpectatorNotify_PacketID)
	*p = x
	return p
}
func (x SpectatorNotify_PacketID) String() string {
	return proto.EnumName(SpectatorNotify_PacketID_name, int32(x))
}
func (x *SpectatorNotify_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SpectatorNotify_PacketID_value, data, "SpectatorNotify_PacketID")
	if err != nil {
		return err
	}
	*x = SpectatorNotify_PacketID(value)
	return nil
}

type Tag struct {
	Name             *int32 `protobuf:"varint,1,req,name=name" json:"name,omitempty"`
	Value            *int32 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}

func (m *Tag) GetName() int32 {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return 0
}

func (m *Tag) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type Entity struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Tags             []*Tag `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}

func (m *Entity) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Entity) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type SubOption struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Targets          []int32 `protobuf:"varint,3,rep,packed,name=targets" json:"targets,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SubOption) Reset()         { *m = SubOption{} }
func (m *SubOption) String() string { return proto.CompactTextString(m) }
func (*SubOption) ProtoMessage()    {}

func (m *SubOption) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SubOption) GetTargets() []int32 {
	if m != nil {
		return m.Targets
	}
	return nil
}

type Option struct {
	Type             *Option_Type `protobuf:"varint,1,req,name=type,enum=game.Option_Type" json:"type,omitempty"`
	MainOption       *SubOption   `protobuf:"bytes,2,opt,name=main_option" json:"main_option,omitempty"`
	SubOptions       []*SubOption `protobuf:"bytes,3,rep,name=sub_options" json:"sub_options,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}

func (m *Option) GetType() Option_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Option_PASS
}

func (m *Option) GetMainOption() *SubOption {
	if m != nil {
		return m.MainOption
	}
	return nil
}

func (m *Option) GetSubOptions() []*SubOption {
	if m != nil {
		return m.SubOptions
	}
	return nil
}

type Player struct {
	Id               *int32         `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	GameAccountId    *shared.BnetId `protobuf:"bytes,2,req,name=game_account_id" json:"game_account_id,omitempty"`
	CardBack         *int32         `protobuf:"varint,3,req,name=card_back" json:"card_back,omitempty"`
	Entity           *Entity        `protobuf:"bytes,4,req,name=entity" json:"entity,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}

func (m *Player) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Player) GetGameAccountId() *shared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *Player) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

func (m *Player) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type Handshake struct {
	GameHandle       *int32           `protobuf:"varint,1,req,name=game_handle" json:"game_handle,omitempty"`
	Password         *string          `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	ClientHandle     *int64           `protobuf:"varint,3,req,name=client_handle" json:"client_handle,omitempty"`
	Mission          *int32           `protobuf:"varint,4,opt,name=mission" json:"mission,omitempty"`
	Version          *string          `protobuf:"bytes,5,req,name=version" json:"version,omitempty"`
	Platform         *shared.Platform `protobuf:"bytes,7,req,name=platform" json:"platform,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Handshake) Reset()         { *m = Handshake{} }
func (m *Handshake) String() string { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()    {}

func (m *Handshake) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *Handshake) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *Handshake) GetClientHandle() int64 {
	if m != nil && m.ClientHandle != nil {
		return *m.ClientHandle
	}
	return 0
}

func (m *Handshake) GetMission() int32 {
	if m != nil && m.Mission != nil {
		return *m.Mission
	}
	return 0
}

func (m *Handshake) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Handshake) GetPlatform() *shared.Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

type Ping struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}

type GetGameState struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetGameState) Reset()         { *m = GetGameState{} }
func (m *GetGameState) String() string { return proto.CompactTextString(m) }
func (*GetGameState) ProtoMessage()    {}

type ChooseOption struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Index            *int32 `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	Target           *int32 `protobuf:"varint,3,req,name=target" json:"target,omitempty"`
	SubOption        *int32 `protobuf:"varint,4,opt,name=sub_option" json:"sub_option,omitempty"`
	Position         *int32 `protobuf:"varint,5,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChooseOption) Reset()         { *m = ChooseOption{} }
func (m *ChooseOption) String() string { return proto.CompactTextString(m) }
func (*ChooseOption) ProtoMessage()    {}

func (m *ChooseOption) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChooseOption) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ChooseOption) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func (m *ChooseOption) GetSubOption() int32 {
	if m != nil && m.SubOption != nil {
		return *m.SubOption
	}
	return 0
}

func (m *ChooseOption) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

type ChooseEntities struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Entities         []int32 `protobuf:"varint,2,rep,packed,name=entities" json:"entities,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChooseEntities) Reset()         { *m = ChooseEntities{} }
func (m *ChooseEntities) String() string { return proto.CompactTextString(m) }
func (*ChooseEntities) ProtoMessage()    {}

func (m *ChooseEntities) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChooseEntities) GetEntities() []int32 {
	if m != nil {
		return m.Entities
	}
	return nil
}

type MouseInfo struct {
	ArrowOrigin      *int32 `protobuf:"varint,1,req,name=arrow_origin" json:"arrow_origin,omitempty"`
	HeldCard         *int32 `protobuf:"varint,2,req,name=held_card" json:"held_card,omitempty"`
	OverCard         *int32 `protobuf:"varint,3,req,name=over_card" json:"over_card,omitempty"`
	X                *int32 `protobuf:"varint,4,req,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,5,req,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MouseInfo) Reset()         { *m = MouseInfo{} }
func (m *MouseInfo) String() string { return proto.CompactTextString(m) }
func (*MouseInfo) ProtoMessage()    {}

func (m *MouseInfo) GetArrowOrigin() int32 {
	if m != nil && m.ArrowOrigin != nil {
		return *m.ArrowOrigin
	}
	return 0
}

func (m *MouseInfo) GetHeldCard() int32 {
	if m != nil && m.HeldCard != nil {
		return *m.HeldCard
	}
	return 0
}

func (m *MouseInfo) GetOverCard() int32 {
	if m != nil && m.OverCard != nil {
		return *m.OverCard
	}
	return 0
}

func (m *MouseInfo) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *MouseInfo) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type UserUI struct {
	MouseInfo        *MouseInfo `protobuf:"bytes,1,opt,name=mouse_info" json:"mouse_info,omitempty"`
	Emote            *int32     `protobuf:"varint,2,opt,name=emote" json:"emote,omitempty"`
	PlayerId         *int32     `protobuf:"varint,3,opt,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *UserUI) Reset()         { *m = UserUI{} }
func (m *UserUI) String() string { return proto.CompactTextString(m) }
func (*UserUI) ProtoMessage()    {}

func (m *UserUI) GetMouseInfo() *MouseInfo {
	if m != nil {
		return m.MouseInfo
	}
	return nil
}

func (m *UserUI) GetEmote() int32 {
	if m != nil && m.Emote != nil {
		return *m.Emote
	}
	return 0
}

func (m *UserUI) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type Concede struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Concede) Reset()         { *m = Concede{} }
func (m *Concede) String() string { return proto.CompactTextString(m) }
func (*Concede) ProtoMessage()    {}

type InviteToSpectate struct {
	TargetBnetAccountId *shared.BnetId `protobuf:"bytes,1,opt,name=target_bnet_account_id" json:"target_bnet_account_id,omitempty"`
	TargetGameAccountId *shared.BnetId `protobuf:"bytes,2,req,name=target_game_account_id" json:"target_game_account_id,omitempty"`
	XXX_unrecognized    []byte         `json:"-"`
}

func (m *InviteToSpectate) Reset()         { *m = InviteToSpectate{} }
func (m *InviteToSpectate) String() string { return proto.CompactTextString(m) }
func (*InviteToSpectate) ProtoMessage()    {}

func (m *InviteToSpectate) GetTargetBnetAccountId() *shared.BnetId {
	if m != nil {
		return m.TargetBnetAccountId
	}
	return nil
}

func (m *InviteToSpectate) GetTargetGameAccountId() *shared.BnetId {
	if m != nil {
		return m.TargetGameAccountId
	}
	return nil
}

type RemoveSpectators struct {
	TargetGameaccountIds        []*shared.BnetId `protobuf:"bytes,1,rep,name=target_gameaccount_ids" json:"target_gameaccount_ids,omitempty"`
	KickAllSpectators           *bool            `protobuf:"varint,2,opt,name=kick_all_spectators,def=0" json:"kick_all_spectators,omitempty"`
	RegenerateSpectatorPassword *bool            `protobuf:"varint,3,opt,name=regenerate_spectator_password,def=0" json:"regenerate_spectator_password,omitempty"`
	XXX_unrecognized            []byte           `json:"-"`
}

func (m *RemoveSpectators) Reset()         { *m = RemoveSpectators{} }
func (m *RemoveSpectators) String() string { return proto.CompactTextString(m) }
func (*RemoveSpectators) ProtoMessage()    {}

const Default_RemoveSpectators_KickAllSpectators bool = false
const Default_RemoveSpectators_RegenerateSpectatorPassword bool = false

func (m *RemoveSpectators) GetTargetGameaccountIds() []*shared.BnetId {
	if m != nil {
		return m.TargetGameaccountIds
	}
	return nil
}

func (m *RemoveSpectators) GetKickAllSpectators() bool {
	if m != nil && m.KickAllSpectators != nil {
		return *m.KickAllSpectators
	}
	return Default_RemoveSpectators_KickAllSpectators
}

func (m *RemoveSpectators) GetRegenerateSpectatorPassword() bool {
	if m != nil && m.RegenerateSpectatorPassword != nil {
		return *m.RegenerateSpectatorPassword
	}
	return Default_RemoveSpectators_RegenerateSpectatorPassword
}

type Pong struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}

type GameSetup struct {
	Board                       *int32 `protobuf:"varint,1,req,name=board" json:"board,omitempty"`
	MaxSecretsPerPlayer         *int32 `protobuf:"varint,2,req,name=max_secrets_per_player" json:"max_secrets_per_player,omitempty"`
	MaxFriendlyMinionsPerPlayer *int32 `protobuf:"varint,3,req,name=max_friendly_minions_per_player" json:"max_friendly_minions_per_player,omitempty"`
	KeepAliveFrequency          *int32 `protobuf:"varint,4,opt,name=keep_alive_frequency" json:"keep_alive_frequency,omitempty"`
	XXX_unrecognized            []byte `json:"-"`
}

func (m *GameSetup) Reset()         { *m = GameSetup{} }
func (m *GameSetup) String() string { return proto.CompactTextString(m) }
func (*GameSetup) ProtoMessage()    {}

func (m *GameSetup) GetBoard() int32 {
	if m != nil && m.Board != nil {
		return *m.Board
	}
	return 0
}

func (m *GameSetup) GetMaxSecretsPerPlayer() int32 {
	if m != nil && m.MaxSecretsPerPlayer != nil {
		return *m.MaxSecretsPerPlayer
	}
	return 0
}

func (m *GameSetup) GetMaxFriendlyMinionsPerPlayer() int32 {
	if m != nil && m.MaxFriendlyMinionsPerPlayer != nil {
		return *m.MaxFriendlyMinionsPerPlayer
	}
	return 0
}

func (m *GameSetup) GetKeepAliveFrequency() int32 {
	if m != nil && m.KeepAliveFrequency != nil {
		return *m.KeepAliveFrequency
	}
	return 0
}

type DebugMessage struct {
	Message          *string `protobuf:"bytes,1,req,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DebugMessage) Reset()         { *m = DebugMessage{} }
func (m *DebugMessage) String() string { return proto.CompactTextString(m) }
func (*DebugMessage) ProtoMessage()    {}

func (m *DebugMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type AllOptions struct {
	Id               *int32    `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Options          []*Option `protobuf:"bytes,2,rep,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *AllOptions) Reset()         { *m = AllOptions{} }
func (m *AllOptions) String() string { return proto.CompactTextString(m) }
func (*AllOptions) ProtoMessage()    {}

func (m *AllOptions) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AllOptions) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type NAckOption struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NAckOption) Reset()         { *m = NAckOption{} }
func (m *NAckOption) String() string { return proto.CompactTextString(m) }
func (*NAckOption) ProtoMessage()    {}

func (m *NAckOption) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type EntityChoices struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ChoiceType       *int32  `protobuf:"varint,2,req,name=choice_type" json:"choice_type,omitempty"`
	CountMin         *int32  `protobuf:"varint,4,req,name=count_min" json:"count_min,omitempty"`
	CountMax         *int32  `protobuf:"varint,5,req,name=count_max" json:"count_max,omitempty"`
	Entities         []int32 `protobuf:"varint,6,rep,packed,name=entities" json:"entities,omitempty"`
	Source           *int32  `protobuf:"varint,7,opt,name=source" json:"source,omitempty"`
	PlayerId         *int32  `protobuf:"varint,8,req,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EntityChoices) Reset()         { *m = EntityChoices{} }
func (m *EntityChoices) String() string { return proto.CompactTextString(m) }
func (*EntityChoices) ProtoMessage()    {}

func (m *EntityChoices) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *EntityChoices) GetChoiceType() int32 {
	if m != nil && m.ChoiceType != nil {
		return *m.ChoiceType
	}
	return 0
}

func (m *EntityChoices) GetCountMin() int32 {
	if m != nil && m.CountMin != nil {
		return *m.CountMin
	}
	return 0
}

func (m *EntityChoices) GetCountMax() int32 {
	if m != nil && m.CountMax != nil {
		return *m.CountMax
	}
	return 0
}

func (m *EntityChoices) GetEntities() []int32 {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *EntityChoices) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *EntityChoices) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type EntitiesChosen struct {
	ChooseEntities   *ChooseEntities `protobuf:"bytes,3,req,name=choose_entities" json:"choose_entities,omitempty"`
	PlayerId         *int32          `protobuf:"varint,4,req,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *EntitiesChosen) Reset()         { *m = EntitiesChosen{} }
func (m *EntitiesChosen) String() string { return proto.CompactTextString(m) }
func (*EntitiesChosen) ProtoMessage()    {}

func (m *EntitiesChosen) GetChooseEntities() *ChooseEntities {
	if m != nil {
		return m.ChooseEntities
	}
	return nil
}

func (m *EntitiesChosen) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type HistoryBlock struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *HistoryBlock) Reset()         { *m = HistoryBlock{} }
func (m *HistoryBlock) String() string { return proto.CompactTextString(m) }
func (*HistoryBlock) ProtoMessage()    {}

type HistoryMeta struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *HistoryMeta) Reset()         { *m = HistoryMeta{} }
func (m *HistoryMeta) String() string { return proto.CompactTextString(m) }
func (*HistoryMeta) ProtoMessage()    {}

type PowerHistoryCreateGame struct {
	GameEntity       *Entity   `protobuf:"bytes,1,req,name=game_entity" json:"game_entity,omitempty"`
	Players          []*Player `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *PowerHistoryCreateGame) Reset()         { *m = PowerHistoryCreateGame{} }
func (m *PowerHistoryCreateGame) String() string { return proto.CompactTextString(m) }
func (*PowerHistoryCreateGame) ProtoMessage()    {}

func (m *PowerHistoryCreateGame) GetGameEntity() *Entity {
	if m != nil {
		return m.GameEntity
	}
	return nil
}

func (m *PowerHistoryCreateGame) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type PowerHistoryEntity struct {
	Entity           *int32  `protobuf:"varint,1,req,name=entity" json:"entity,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Tags             []*Tag  `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PowerHistoryEntity) Reset()         { *m = PowerHistoryEntity{} }
func (m *PowerHistoryEntity) String() string { return proto.CompactTextString(m) }
func (*PowerHistoryEntity) ProtoMessage()    {}

func (m *PowerHistoryEntity) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *PowerHistoryEntity) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PowerHistoryEntity) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type PowerHistoryHide struct {
	Entity           *int32 `protobuf:"varint,1,req,name=entity" json:"entity,omitempty"`
	Zone             *int32 `protobuf:"varint,2,req,name=zone" json:"zone,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PowerHistoryHide) Reset()         { *m = PowerHistoryHide{} }
func (m *PowerHistoryHide) String() string { return proto.CompactTextString(m) }
func (*PowerHistoryHide) ProtoMessage()    {}

func (m *PowerHistoryHide) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *PowerHistoryHide) GetZone() int32 {
	if m != nil && m.Zone != nil {
		return *m.Zone
	}
	return 0
}

type PowerHistoryTagChange struct {
	Entity           *int32 `protobuf:"varint,1,req,name=entity" json:"entity,omitempty"`
	Tag              *int32 `protobuf:"varint,2,req,name=tag" json:"tag,omitempty"`
	Value            *int32 `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PowerHistoryTagChange) Reset()         { *m = PowerHistoryTagChange{} }
func (m *PowerHistoryTagChange) String() string { return proto.CompactTextString(m) }
func (*PowerHistoryTagChange) ProtoMessage()    {}

func (m *PowerHistoryTagChange) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *PowerHistoryTagChange) GetTag() int32 {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return 0
}

func (m *PowerHistoryTagChange) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type PowerHistoryMetaData struct {
	Info             []int32           `protobuf:"varint,2,rep,packed,name=info" json:"info,omitempty"`
	Type             *HistoryMeta_Type `protobuf:"varint,3,opt,name=type,enum=game.HistoryMeta_Type,def=0" json:"type,omitempty"`
	Data             *int32            `protobuf:"varint,4,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PowerHistoryMetaData) Reset()         { *m = PowerHistoryMetaData{} }
func (m *PowerHistoryMetaData) String() string { return proto.CompactTextString(m) }
func (*PowerHistoryMetaData) ProtoMessage()    {}

const Default_PowerHistoryMetaData_Type HistoryMeta_Type = HistoryMeta_TARGET

func (m *PowerHistoryMetaData) GetInfo() []int32 {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *PowerHistoryMetaData) GetType() HistoryMeta_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_PowerHistoryMetaData_Type
}

func (m *PowerHistoryMetaData) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

type PowerHistoryStart struct {
	Type             *HistoryBlock_Type `protobuf:"varint,1,req,name=type,enum=game.HistoryBlock_Type" json:"type,omitempty"`
	Index            *int32             `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	Source           *int32             `protobuf:"varint,3,req,name=source" json:"source,omitempty"`
	Target           *int32             `protobuf:"varint,4,req,name=target" json:"target,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *PowerHistoryStart) Reset()         { *m = PowerHistoryStart{} }
func (m *PowerHistoryStart) String() string { return proto.CompactTextString(m) }
func (*PowerHistoryStart) ProtoMessage()    {}

func (m *PowerHistoryStart) GetType() HistoryBlock_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return HistoryBlock_ATTACK
}

func (m *PowerHistoryStart) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *PowerHistoryStart) GetSource() int32 {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return 0
}

func (m *PowerHistoryStart) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

type PowerHistoryEnd struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PowerHistoryEnd) Reset()         { *m = PowerHistoryEnd{} }
func (m *PowerHistoryEnd) String() string { return proto.CompactTextString(m) }
func (*PowerHistoryEnd) ProtoMessage()    {}

type PowerHistoryData struct {
	FullEntity       *PowerHistoryEntity     `protobuf:"bytes,1,opt,name=full_entity" json:"full_entity,omitempty"`
	ShowEntity       *PowerHistoryEntity     `protobuf:"bytes,2,opt,name=show_entity" json:"show_entity,omitempty"`
	HideEntity       *PowerHistoryHide       `protobuf:"bytes,3,opt,name=hide_entity" json:"hide_entity,omitempty"`
	TagChange        *PowerHistoryTagChange  `protobuf:"bytes,4,opt,name=tag_change" json:"tag_change,omitempty"`
	CreateGame       *PowerHistoryCreateGame `protobuf:"bytes,5,opt,name=create_game" json:"create_game,omitempty"`
	PowerStart       *PowerHistoryStart      `protobuf:"bytes,6,opt,name=power_start" json:"power_start,omitempty"`
	PowerEnd         *PowerHistoryEnd        `protobuf:"bytes,7,opt,name=power_end" json:"power_end,omitempty"`
	MetaData         *PowerHistoryMetaData   `protobuf:"bytes,8,opt,name=meta_data" json:"meta_data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *PowerHistoryData) Reset()         { *m = PowerHistoryData{} }
func (m *PowerHistoryData) String() string { return proto.CompactTextString(m) }
func (*PowerHistoryData) ProtoMessage()    {}

func (m *PowerHistoryData) GetFullEntity() *PowerHistoryEntity {
	if m != nil {
		return m.FullEntity
	}
	return nil
}

func (m *PowerHistoryData) GetShowEntity() *PowerHistoryEntity {
	if m != nil {
		return m.ShowEntity
	}
	return nil
}

func (m *PowerHistoryData) GetHideEntity() *PowerHistoryHide {
	if m != nil {
		return m.HideEntity
	}
	return nil
}

func (m *PowerHistoryData) GetTagChange() *PowerHistoryTagChange {
	if m != nil {
		return m.TagChange
	}
	return nil
}

func (m *PowerHistoryData) GetCreateGame() *PowerHistoryCreateGame {
	if m != nil {
		return m.CreateGame
	}
	return nil
}

func (m *PowerHistoryData) GetPowerStart() *PowerHistoryStart {
	if m != nil {
		return m.PowerStart
	}
	return nil
}

func (m *PowerHistoryData) GetPowerEnd() *PowerHistoryEnd {
	if m != nil {
		return m.PowerEnd
	}
	return nil
}

func (m *PowerHistoryData) GetMetaData() *PowerHistoryMetaData {
	if m != nil {
		return m.MetaData
	}
	return nil
}

type PowerHistory struct {
	List             []*PowerHistoryData `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *PowerHistory) Reset()         { *m = PowerHistory{} }
func (m *PowerHistory) String() string { return proto.CompactTextString(m) }
func (*PowerHistory) ProtoMessage()    {}

func (m *PowerHistory) GetList() []*PowerHistoryData {
	if m != nil {
		return m.List
	}
	return nil
}

type TurnTimer struct {
	Seconds          *int32 `protobuf:"varint,1,req,name=seconds" json:"seconds,omitempty"`
	Turn             *int32 `protobuf:"varint,2,req,name=turn" json:"turn,omitempty"`
	Show             *bool  `protobuf:"varint,3,req,name=show" json:"show,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TurnTimer) Reset()         { *m = TurnTimer{} }
func (m *TurnTimer) String() string { return proto.CompactTextString(m) }
func (*TurnTimer) ProtoMessage()    {}

func (m *TurnTimer) GetSeconds() int32 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *TurnTimer) GetTurn() int32 {
	if m != nil && m.Turn != nil {
		return *m.Turn
	}
	return 0
}

func (m *TurnTimer) GetShow() bool {
	if m != nil && m.Show != nil {
		return *m.Show
	}
	return false
}

type GameCanceled struct {
	Reason           *GameCanceled_Reason `protobuf:"varint,1,req,name=reason,enum=game.GameCanceled_Reason" json:"reason,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GameCanceled) Reset()         { *m = GameCanceled{} }
func (m *GameCanceled) String() string { return proto.CompactTextString(m) }
func (*GameCanceled) ProtoMessage()    {}

func (m *GameCanceled) GetReason() GameCanceled_Reason {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return GameCanceled_OPPONENT_TIMEOUT
}

type SpectatorHandshake struct {
	GameHandle       *int32           `protobuf:"varint,1,req,name=game_handle" json:"game_handle,omitempty"`
	Password         *string          `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	Version          *string          `protobuf:"bytes,3,req,name=version" json:"version,omitempty"`
	Platform         *shared.Platform `protobuf:"bytes,4,req,name=platform" json:"platform,omitempty"`
	GameAccountId    *shared.BnetId   `protobuf:"bytes,5,req,name=game_account_id" json:"game_account_id,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SpectatorHandshake) Reset()         { *m = SpectatorHandshake{} }
func (m *SpectatorHandshake) String() string { return proto.CompactTextString(m) }
func (*SpectatorHandshake) ProtoMessage()    {}

func (m *SpectatorHandshake) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *SpectatorHandshake) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *SpectatorHandshake) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *SpectatorHandshake) GetPlatform() *shared.Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *SpectatorHandshake) GetGameAccountId() *shared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

type ServerResult struct {
	ResultCode        *int32   `protobuf:"varint,1,req,name=result_code" json:"result_code,omitempty"`
	RetryDelaySeconds *float32 `protobuf:"fixed32,2,opt,name=retry_delay_seconds" json:"retry_delay_seconds,omitempty"`
	XXX_unrecognized  []byte   `json:"-"`
}

func (m *ServerResult) Reset()         { *m = ServerResult{} }
func (m *ServerResult) String() string { return proto.CompactTextString(m) }
func (*ServerResult) ProtoMessage()    {}

func (m *ServerResult) GetResultCode() int32 {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return 0
}

func (m *ServerResult) GetRetryDelaySeconds() float32 {
	if m != nil && m.RetryDelaySeconds != nil {
		return *m.RetryDelaySeconds
	}
	return 0
}

type SpectatorChange struct {
	GameAccountId    *shared.BnetId `protobuf:"bytes,1,req,name=game_account_id" json:"game_account_id,omitempty"`
	IsRemoved        *bool          `protobuf:"varint,2,req,name=is_removed" json:"is_removed,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SpectatorChange) Reset()         { *m = SpectatorChange{} }
func (m *SpectatorChange) String() string { return proto.CompactTextString(m) }
func (*SpectatorChange) ProtoMessage()    {}

func (m *SpectatorChange) GetGameAccountId() *shared.BnetId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *SpectatorChange) GetIsRemoved() bool {
	if m != nil && m.IsRemoved != nil {
		return *m.IsRemoved
	}
	return false
}

type SpectatorRemoved struct {
	ReasonCode       *int32         `protobuf:"varint,1,req,name=reason_code" json:"reason_code,omitempty"`
	RemovedBy        *shared.BnetId `protobuf:"bytes,2,opt,name=removed_by" json:"removed_by,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SpectatorRemoved) Reset()         { *m = SpectatorRemoved{} }
func (m *SpectatorRemoved) String() string { return proto.CompactTextString(m) }
func (*SpectatorRemoved) ProtoMessage()    {}

func (m *SpectatorRemoved) GetReasonCode() int32 {
	if m != nil && m.ReasonCode != nil {
		return *m.ReasonCode
	}
	return 0
}

func (m *SpectatorRemoved) GetRemovedBy() *shared.BnetId {
	if m != nil {
		return m.RemovedBy
	}
	return nil
}

type SpectatorNotify struct {
	PlayerId                *int32             `protobuf:"varint,1,req,name=player_id" json:"player_id,omitempty"`
	ChooseOption            *ChooseOption      `protobuf:"bytes,2,opt,name=choose_option" json:"choose_option,omitempty"`
	SpectatorChange         []*SpectatorChange `protobuf:"bytes,4,rep,name=spectator_change" json:"spectator_change,omitempty"`
	SpectatorPasswordUpdate *string            `protobuf:"bytes,5,opt,name=spectator_password_update" json:"spectator_password_update,omitempty"`
	SpectatorRemoved        *SpectatorRemoved  `protobuf:"bytes,6,opt,name=spectator_removed" json:"spectator_removed,omitempty"`
	XXX_unrecognized        []byte             `json:"-"`
}

func (m *SpectatorNotify) Reset()         { *m = SpectatorNotify{} }
func (m *SpectatorNotify) String() string { return proto.CompactTextString(m) }
func (*SpectatorNotify) ProtoMessage()    {}

func (m *SpectatorNotify) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *SpectatorNotify) GetChooseOption() *ChooseOption {
	if m != nil {
		return m.ChooseOption
	}
	return nil
}

func (m *SpectatorNotify) GetSpectatorChange() []*SpectatorChange {
	if m != nil {
		return m.SpectatorChange
	}
	return nil
}

func (m *SpectatorNotify) GetSpectatorPasswordUpdate() string {
	if m != nil && m.SpectatorPasswordUpdate != nil {
		return *m.SpectatorPasswordUpdate
	}
	return ""
}

func (m *SpectatorNotify) GetSpectatorRemoved() *SpectatorRemoved {
	if m != nil {
		return m.SpectatorRemoved
	}
	return nil
}

func init() {
	proto.RegisterEnum("game.Option_Type", Option_Type_name, Option_Type_value)
	proto.RegisterEnum("game.Handshake_PacketID", Handshake_PacketID_name, Handshake_PacketID_value)
	proto.RegisterEnum("game.Ping_PacketID", Ping_PacketID_name, Ping_PacketID_value)
	proto.RegisterEnum("game.GetGameState_PacketID", GetGameState_PacketID_name, GetGameState_PacketID_value)
	proto.RegisterEnum("game.ChooseOption_PacketID", ChooseOption_PacketID_name, ChooseOption_PacketID_value)
	proto.RegisterEnum("game.ChooseEntities_PacketID", ChooseEntities_PacketID_name, ChooseEntities_PacketID_value)
	proto.RegisterEnum("game.UserUI_PacketID", UserUI_PacketID_name, UserUI_PacketID_value)
	proto.RegisterEnum("game.Concede_PacketID", Concede_PacketID_name, Concede_PacketID_value)
	proto.RegisterEnum("game.InviteToSpectate_PacketID", InviteToSpectate_PacketID_name, InviteToSpectate_PacketID_value)
	proto.RegisterEnum("game.RemoveSpectators_PacketID", RemoveSpectators_PacketID_name, RemoveSpectators_PacketID_value)
	proto.RegisterEnum("game.Pong_PacketID", Pong_PacketID_name, Pong_PacketID_value)
	proto.RegisterEnum("game.GameSetup_PacketID", GameSetup_PacketID_name, GameSetup_PacketID_value)
	proto.RegisterEnum("game.DebugMessage_PacketID", DebugMessage_PacketID_name, DebugMessage_PacketID_value)
	proto.RegisterEnum("game.AllOptions_PacketID", AllOptions_PacketID_name, AllOptions_PacketID_value)
	proto.RegisterEnum("game.NAckOption_PacketID", NAckOption_PacketID_name, NAckOption_PacketID_value)
	proto.RegisterEnum("game.EntityChoices_PacketID", EntityChoices_PacketID_name, EntityChoices_PacketID_value)
	proto.RegisterEnum("game.EntitiesChosen_PacketID", EntitiesChosen_PacketID_name, EntitiesChosen_PacketID_value)
	proto.RegisterEnum("game.HistoryBlock_Type", HistoryBlock_Type_name, HistoryBlock_Type_value)
	proto.RegisterEnum("game.HistoryMeta_Type", HistoryMeta_Type_name, HistoryMeta_Type_value)
	proto.RegisterEnum("game.PowerHistory_PacketID", PowerHistory_PacketID_name, PowerHistory_PacketID_value)
	proto.RegisterEnum("game.TurnTimer_PacketID", TurnTimer_PacketID_name, TurnTimer_PacketID_value)
	proto.RegisterEnum("game.GameCanceled_Reason", GameCanceled_Reason_name, GameCanceled_Reason_value)
	proto.RegisterEnum("game.GameCanceled_PacketID", GameCanceled_PacketID_name, GameCanceled_PacketID_value)
	proto.RegisterEnum("game.SpectatorHandshake_PacketID", SpectatorHandshake_PacketID_name, SpectatorHandshake_PacketID_value)
	proto.RegisterEnum("game.ServerResult_Code", ServerResult_Code_name, ServerResult_Code_value)
	proto.RegisterEnum("game.ServerResult_Constants", ServerResult_Constants_name, ServerResult_Constants_value)
	proto.RegisterEnum("game.ServerResult_PacketID", ServerResult_PacketID_name, ServerResult_PacketID_value)
	proto.RegisterEnum("game.SpectatorRemoved_SpectatorRemovedReason", SpectatorRemoved_SpectatorRemovedReason_name, SpectatorRemoved_SpectatorRemovedReason_value)
	proto.RegisterEnum("game.SpectatorNotify_PacketID", SpectatorNotify_PacketID_name, SpectatorNotify_PacketID_value)
}
