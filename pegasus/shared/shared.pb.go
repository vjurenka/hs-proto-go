// Code generated by protoc-gen-go.
// source: github.com/vjurenka/hs-proto-go/pegasus/shared/shared.proto
// DO NOT EDIT!

/*
Package shared is a generated protocol buffer package.

It is generated from these files:
	github.com/vjurenka/hs-proto-go/pegasus/shared/shared.proto

It has these top-level messages:
	CardDef
	DeckCardData
	BoosterInfo
	Date
	CardStack
	BnetId
	ProfileNoticeMedal
	ProfileNoticeRewardBooster
	ProfileNoticeRewardCard
	ProfileNoticeDisconnectedGameResult
	ProfileNoticePreconDeck
	ProfileNoticeRewardDust
	ProfileNoticeRewardMount
	ProfileNoticeRewardForge
	ProfileNoticeRewardGold
	ProfileNoticePurchase
	ProfileNoticeCardBack
	ProfileNoticeBonusStars
	ProfileNoticeRewardCard2X
	ProfileNoticeAdventureProgress
	ProfileNoticeLevelUp
	ProfileNoticeAccountLicense
	PlayQueueInfo
	Platform
	DeckInfo
	AdventureProgress
	FavoriteHero
	AccountLicenseInfo
	RewardBag
	RewardChest
	LocalizedStringValue
	LocalizedString
	GameSetupRule
	Vector2
	ScenarioDbRecord
	TavernBrawlSpec
	TavernBrawlPlayerRecord
*/
package shared

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GameType int32

const (
	GameType_GT_UNKNOWN     GameType = 0
	GameType_GT_VS_AI       GameType = 1
	GameType_GT_VS_FRIEND   GameType = 2
	GameType_GT_TUTORIAL    GameType = 4
	GameType_GT_ARENA       GameType = 5
	GameType_GT_TEST        GameType = 6
	GameType_GT_RANKED      GameType = 7
	GameType_GT_UNRANKED    GameType = 8
	GameType_GT_TAVERNBRAWL GameType = 16
	GameType_GT_TB_2P_COOP  GameType = 18
	GameType_GT_LAST        GameType = 17
)

var GameType_name = map[int32]string{
	0:  "GT_UNKNOWN",
	1:  "GT_VS_AI",
	2:  "GT_VS_FRIEND",
	4:  "GT_TUTORIAL",
	5:  "GT_ARENA",
	6:  "GT_TEST",
	7:  "GT_RANKED",
	8:  "GT_UNRANKED",
	16: "GT_TAVERNBRAWL",
	18: "GT_TB_2P_COOP",
	17: "GT_LAST",
}
var GameType_value = map[string]int32{
	"GT_UNKNOWN":     0,
	"GT_VS_AI":       1,
	"GT_VS_FRIEND":   2,
	"GT_TUTORIAL":    4,
	"GT_ARENA":       5,
	"GT_TEST":        6,
	"GT_RANKED":      7,
	"GT_UNRANKED":    8,
	"GT_TAVERNBRAWL": 16,
	"GT_TB_2P_COOP":  18,
	"GT_LAST":        17,
}

func (x GameType) Enum() *GameType {
	p := new(GameType)
	*p = x
	return p
}
func (x GameType) String() string {
	return proto.EnumName(GameType_name, int32(x))
}
func (x *GameType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameType_value, data, "GameType")
	if err != nil {
		return err
	}
	*x = GameType(value)
	return nil
}

type BnetGameType int32

const (
	BnetGameType_BGT_UNKNOWN             BnetGameType = 0
	BnetGameType_BGT_FRIENDS             BnetGameType = 1
	BnetGameType_BGT_RANKED              BnetGameType = 2
	BnetGameType_BGT_ARENA               BnetGameType = 3
	BnetGameType_BGT_VS_AI               BnetGameType = 4
	BnetGameType_BGT_TUTORIAL            BnetGameType = 5
	BnetGameType_BGT_ASYNC               BnetGameType = 6
	BnetGameType_BGT_NEWBIE              BnetGameType = 9
	BnetGameType_BGT_NORMAL              BnetGameType = 10
	BnetGameType_BGT_TEST1               BnetGameType = 11
	BnetGameType_BGT_TEST2               BnetGameType = 12
	BnetGameType_BGT_TEST3               BnetGameType = 13
	BnetGameType_BGT_TAVERNBRAWL_PVP     BnetGameType = 16
	BnetGameType_BGT_TAVERNBRAWL_2P_COOP BnetGameType = 18
	BnetGameType_BGT_LAST                BnetGameType = 19
)

var BnetGameType_name = map[int32]string{
	0:  "BGT_UNKNOWN",
	1:  "BGT_FRIENDS",
	2:  "BGT_RANKED",
	3:  "BGT_ARENA",
	4:  "BGT_VS_AI",
	5:  "BGT_TUTORIAL",
	6:  "BGT_ASYNC",
	9:  "BGT_NEWBIE",
	10: "BGT_NORMAL",
	11: "BGT_TEST1",
	12: "BGT_TEST2",
	13: "BGT_TEST3",
	16: "BGT_TAVERNBRAWL_PVP",
	18: "BGT_TAVERNBRAWL_2P_COOP",
	19: "BGT_LAST",
}
var BnetGameType_value = map[string]int32{
	"BGT_UNKNOWN":             0,
	"BGT_FRIENDS":             1,
	"BGT_RANKED":              2,
	"BGT_ARENA":               3,
	"BGT_VS_AI":               4,
	"BGT_TUTORIAL":            5,
	"BGT_ASYNC":               6,
	"BGT_NEWBIE":              9,
	"BGT_NORMAL":              10,
	"BGT_TEST1":               11,
	"BGT_TEST2":               12,
	"BGT_TEST3":               13,
	"BGT_TAVERNBRAWL_PVP":     16,
	"BGT_TAVERNBRAWL_2P_COOP": 18,
	"BGT_LAST":                19,
}

func (x BnetGameType) Enum() *BnetGameType {
	p := new(BnetGameType)
	*p = x
	return p
}
func (x BnetGameType) String() string {
	return proto.EnumName(BnetGameType_name, int32(x))
}
func (x *BnetGameType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BnetGameType_value, data, "BnetGameType")
	if err != nil {
		return err
	}
	*x = BnetGameType(value)
	return nil
}

type DeckType int32

const (
	DeckType_NORMAL_DECK       DeckType = 1
	DeckType_AI_DECK           DeckType = 2
	DeckType_DRAFT_DECK        DeckType = 4
	DeckType_PRECON_DECK       DeckType = 5
	DeckType_TAVERN_BRAWL_DECK DeckType = 6
)

var DeckType_name = map[int32]string{
	1: "NORMAL_DECK",
	2: "AI_DECK",
	4: "DRAFT_DECK",
	5: "PRECON_DECK",
	6: "TAVERN_BRAWL_DECK",
}
var DeckType_value = map[string]int32{
	"NORMAL_DECK":       1,
	"AI_DECK":           2,
	"DRAFT_DECK":        4,
	"PRECON_DECK":       5,
	"TAVERN_BRAWL_DECK": 6,
}

func (x DeckType) Enum() *DeckType {
	p := new(DeckType)
	*p = x
	return p
}
func (x DeckType) String() string {
	return proto.EnumName(DeckType_name, int32(x))
}
func (x *DeckType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckType_value, data, "DeckType")
	if err != nil {
		return err
	}
	*x = DeckType(value)
	return nil
}

type RuleType int32

const (
	RuleType_RULE_NONE        RuleType = 0
	RuleType_RULE_CHOOSE_HERO RuleType = 1
	RuleType_RULE_CHOOSE_DECK RuleType = 2
)

var RuleType_name = map[int32]string{
	0: "RULE_NONE",
	1: "RULE_CHOOSE_HERO",
	2: "RULE_CHOOSE_DECK",
}
var RuleType_value = map[string]int32{
	"RULE_NONE":        0,
	"RULE_CHOOSE_HERO": 1,
	"RULE_CHOOSE_DECK": 2,
}

func (x RuleType) Enum() *RuleType {
	p := new(RuleType)
	*p = x
	return p
}
func (x RuleType) String() string {
	return proto.EnumName(RuleType_name, int32(x))
}
func (x *RuleType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RuleType_value, data, "RuleType")
	if err != nil {
		return err
	}
	*x = RuleType(value)
	return nil
}

type RewardType int32

const (
	RewardType_REWARD_UNKNOWN                     RewardType = 0
	RewardType_REWARD_NONE                        RewardType = 1
	RewardType_REWARD_ADVENTURE_PROGRESS          RewardType = 2
	RewardType_REWARD_ARCANE_DUST                 RewardType = 3
	RewardType_REWARD_BASIC_CARD                  RewardType = 4
	RewardType_REWARD_BOOSTER_PACKS               RewardType = 5
	RewardType_REWARD_CARD_BACK                   RewardType = 6
	RewardType_REWARD_CARD_ID                     RewardType = 7
	RewardType_REWARD_CARD_ID_2X                  RewardType = 8
	RewardType_REWARD_CARD_SET                    RewardType = 9
	RewardType_DEPRECATED_REWARD_CRAFTABLE_GOLDEN RewardType = 10
	RewardType_REWARD_GOLD                        RewardType = 11
	RewardType_REWARD_GOLD_HERO                   RewardType = 12
	RewardType_REWARD_FORGE_TICKETS               RewardType = 13
	RewardType_REWARD_HERO                        RewardType = 14
	RewardType_REWARD_EXTERNAL_GAME_MOUNT         RewardType = 15
)

var RewardType_name = map[int32]string{
	0:  "REWARD_UNKNOWN",
	1:  "REWARD_NONE",
	2:  "REWARD_ADVENTURE_PROGRESS",
	3:  "REWARD_ARCANE_DUST",
	4:  "REWARD_BASIC_CARD",
	5:  "REWARD_BOOSTER_PACKS",
	6:  "REWARD_CARD_BACK",
	7:  "REWARD_CARD_ID",
	8:  "REWARD_CARD_ID_2X",
	9:  "REWARD_CARD_SET",
	10: "DEPRECATED_REWARD_CRAFTABLE_GOLDEN",
	11: "REWARD_GOLD",
	12: "REWARD_GOLD_HERO",
	13: "REWARD_FORGE_TICKETS",
	14: "REWARD_HERO",
	15: "REWARD_EXTERNAL_GAME_MOUNT",
}
var RewardType_value = map[string]int32{
	"REWARD_UNKNOWN":                     0,
	"REWARD_NONE":                        1,
	"REWARD_ADVENTURE_PROGRESS":          2,
	"REWARD_ARCANE_DUST":                 3,
	"REWARD_BASIC_CARD":                  4,
	"REWARD_BOOSTER_PACKS":               5,
	"REWARD_CARD_BACK":                   6,
	"REWARD_CARD_ID":                     7,
	"REWARD_CARD_ID_2X":                  8,
	"REWARD_CARD_SET":                    9,
	"DEPRECATED_REWARD_CRAFTABLE_GOLDEN": 10,
	"REWARD_GOLD":                        11,
	"REWARD_GOLD_HERO":                   12,
	"REWARD_FORGE_TICKETS":               13,
	"REWARD_HERO":                        14,
	"REWARD_EXTERNAL_GAME_MOUNT":         15,
}

func (x RewardType) Enum() *RewardType {
	p := new(RewardType)
	*p = x
	return p
}
func (x RewardType) String() string {
	return proto.EnumName(RewardType_name, int32(x))
}
func (x *RewardType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RewardType_value, data, "RewardType")
	if err != nil {
		return err
	}
	*x = RewardType(value)
	return nil
}

type RewardTrigger int32

const (
	RewardTrigger_REWARD_TRIGGER_UNKNOWN     RewardTrigger = 0
	RewardTrigger_REWARD_TRIGGER_NONE        RewardTrigger = 1
	RewardTrigger_REWARD_TRIGGER_WIN_GAME    RewardTrigger = 2
	RewardTrigger_REWARD_TRIGGER_FINISH_GAME RewardTrigger = 3
)

var RewardTrigger_name = map[int32]string{
	0: "REWARD_TRIGGER_UNKNOWN",
	1: "REWARD_TRIGGER_NONE",
	2: "REWARD_TRIGGER_WIN_GAME",
	3: "REWARD_TRIGGER_FINISH_GAME",
}
var RewardTrigger_value = map[string]int32{
	"REWARD_TRIGGER_UNKNOWN":     0,
	"REWARD_TRIGGER_NONE":        1,
	"REWARD_TRIGGER_WIN_GAME":    2,
	"REWARD_TRIGGER_FINISH_GAME": 3,
}

func (x RewardTrigger) Enum() *RewardTrigger {
	p := new(RewardTrigger)
	*p = x
	return p
}
func (x RewardTrigger) String() string {
	return proto.EnumName(RewardTrigger_name, int32(x))
}
func (x *RewardTrigger) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RewardTrigger_value, data, "RewardTrigger")
	if err != nil {
		return err
	}
	*x = RewardTrigger(value)
	return nil
}

type DatabaseResult int32

const (
	DatabaseResult_DB_E_SQL_EX     DatabaseResult = -1
	DatabaseResult_DB_E_UNKNOWN    DatabaseResult = 0
	DatabaseResult_DB_E_SUCCESS    DatabaseResult = 1
	DatabaseResult_DB_E_NOT_OWNED  DatabaseResult = 2
	DatabaseResult_DB_E_CONSTRAINT DatabaseResult = 3
	DatabaseResult_DB_E_NOT_FOUND  DatabaseResult = 4
	DatabaseResult_DB_E_EXCEPTION  DatabaseResult = 9
	DatabaseResult_DB_E_BAD_PARAM  DatabaseResult = 11
)

var DatabaseResult_name = map[int32]string{
	-1: "DB_E_SQL_EX",
	0:  "DB_E_UNKNOWN",
	1:  "DB_E_SUCCESS",
	2:  "DB_E_NOT_OWNED",
	3:  "DB_E_CONSTRAINT",
	4:  "DB_E_NOT_FOUND",
	9:  "DB_E_EXCEPTION",
	11: "DB_E_BAD_PARAM",
}
var DatabaseResult_value = map[string]int32{
	"DB_E_SQL_EX":     -1,
	"DB_E_UNKNOWN":    0,
	"DB_E_SUCCESS":    1,
	"DB_E_NOT_OWNED":  2,
	"DB_E_CONSTRAINT": 3,
	"DB_E_NOT_FOUND":  4,
	"DB_E_EXCEPTION":  9,
	"DB_E_BAD_PARAM":  11,
}

func (x DatabaseResult) Enum() *DatabaseResult {
	p := new(DatabaseResult)
	*p = x
	return p
}
func (x DatabaseResult) String() string {
	return proto.EnumName(DatabaseResult_name, int32(x))
}
func (x *DatabaseResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DatabaseResult_value, data, "DatabaseResult")
	if err != nil {
		return err
	}
	*x = DatabaseResult(value)
	return nil
}

type BattlePayProvider int32

const (
	BattlePayProvider_BP_PROVIDER_BLIZZARD    BattlePayProvider = 1
	BattlePayProvider_BP_PROVIDER_APPLE       BattlePayProvider = 2
	BattlePayProvider_BP_PROVIDER_GOOGLE_PLAY BattlePayProvider = 3
	BattlePayProvider_BP_PROVIDER_AMAZON      BattlePayProvider = 4
)

var BattlePayProvider_name = map[int32]string{
	1: "BP_PROVIDER_BLIZZARD",
	2: "BP_PROVIDER_APPLE",
	3: "BP_PROVIDER_GOOGLE_PLAY",
	4: "BP_PROVIDER_AMAZON",
}
var BattlePayProvider_value = map[string]int32{
	"BP_PROVIDER_BLIZZARD":    1,
	"BP_PROVIDER_APPLE":       2,
	"BP_PROVIDER_GOOGLE_PLAY": 3,
	"BP_PROVIDER_AMAZON":      4,
}

func (x BattlePayProvider) Enum() *BattlePayProvider {
	p := new(BattlePayProvider)
	*p = x
	return p
}
func (x BattlePayProvider) String() string {
	return proto.EnumName(BattlePayProvider_name, int32(x))
}
func (x *BattlePayProvider) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BattlePayProvider_value, data, "BattlePayProvider")
	if err != nil {
		return err
	}
	*x = BattlePayProvider(value)
	return nil
}

type AssetType int32

const (
	AssetType_ASSET_TYPE_SCENARIO AssetType = 1
)

var AssetType_name = map[int32]string{
	1: "ASSET_TYPE_SCENARIO",
}
var AssetType_value = map[string]int32{
	"ASSET_TYPE_SCENARIO": 1,
}

func (x AssetType) Enum() *AssetType {
	p := new(AssetType)
	*p = x
	return p
}
func (x AssetType) String() string {
	return proto.EnumName(AssetType_name, int32(x))
}
func (x *AssetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AssetType_value, data, "AssetType")
	if err != nil {
		return err
	}
	*x = AssetType(value)
	return nil
}

type DatabaseAction int32

const (
	DatabaseAction_DB_A_UNKNOWN      DatabaseAction = 0
	DatabaseAction_DB_A_GET_DECK     DatabaseAction = 1
	DatabaseAction_DB_A_CREATE_DECK  DatabaseAction = 2
	DatabaseAction_DB_A_RENAME_DECK  DatabaseAction = 3
	DatabaseAction_DB_A_DELETE_DECK  DatabaseAction = 4
	DatabaseAction_DB_A_SET_DECK     DatabaseAction = 5
	DatabaseAction_DB_A_OPEN_BOOSTER DatabaseAction = 6
	DatabaseAction_DB_A_GAMES_INFO   DatabaseAction = 7
)

var DatabaseAction_name = map[int32]string{
	0: "DB_A_UNKNOWN",
	1: "DB_A_GET_DECK",
	2: "DB_A_CREATE_DECK",
	3: "DB_A_RENAME_DECK",
	4: "DB_A_DELETE_DECK",
	5: "DB_A_SET_DECK",
	6: "DB_A_OPEN_BOOSTER",
	7: "DB_A_GAMES_INFO",
}
var DatabaseAction_value = map[string]int32{
	"DB_A_UNKNOWN":      0,
	"DB_A_GET_DECK":     1,
	"DB_A_CREATE_DECK":  2,
	"DB_A_RENAME_DECK":  3,
	"DB_A_DELETE_DECK":  4,
	"DB_A_SET_DECK":     5,
	"DB_A_OPEN_BOOSTER": 6,
	"DB_A_GAMES_INFO":   7,
}

func (x DatabaseAction) Enum() *DatabaseAction {
	p := new(DatabaseAction)
	*p = x
	return p
}
func (x DatabaseAction) String() string {
	return proto.EnumName(DatabaseAction_name, int32(x))
}
func (x *DatabaseAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DatabaseAction_value, data, "DatabaseAction")
	if err != nil {
		return err
	}
	*x = DatabaseAction(value)
	return nil
}

type ProfileNoticeMedal_NoticeID int32

const (
	ProfileNoticeMedal_ID ProfileNoticeMedal_NoticeID = 1
)

var ProfileNoticeMedal_NoticeID_name = map[int32]string{
	1: "ID",
}
var ProfileNoticeMedal_NoticeID_value = map[string]int32{
	"ID": 1,
}

func (x ProfileNoticeMedal_NoticeID) Enum() *ProfileNoticeMedal_NoticeID {
	p := new(ProfileNoticeMedal_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeMedal_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeMedal_NoticeID_name, int32(x))
}
func (x *ProfileNoticeMedal_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeMedal_NoticeID_value, data, "ProfileNoticeMedal_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeMedal_NoticeID(value)
	return nil
}

type ProfileNoticeRewardBooster_NoticeID int32

const (
	ProfileNoticeRewardBooster_ID ProfileNoticeRewardBooster_NoticeID = 2
)

var ProfileNoticeRewardBooster_NoticeID_name = map[int32]string{
	2: "ID",
}
var ProfileNoticeRewardBooster_NoticeID_value = map[string]int32{
	"ID": 2,
}

func (x ProfileNoticeRewardBooster_NoticeID) Enum() *ProfileNoticeRewardBooster_NoticeID {
	p := new(ProfileNoticeRewardBooster_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardBooster_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardBooster_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardBooster_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardBooster_NoticeID_value, data, "ProfileNoticeRewardBooster_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardBooster_NoticeID(value)
	return nil
}

type ProfileNoticeRewardCard_NoticeID int32

const (
	ProfileNoticeRewardCard_ID ProfileNoticeRewardCard_NoticeID = 3
)

var ProfileNoticeRewardCard_NoticeID_name = map[int32]string{
	3: "ID",
}
var ProfileNoticeRewardCard_NoticeID_value = map[string]int32{
	"ID": 3,
}

func (x ProfileNoticeRewardCard_NoticeID) Enum() *ProfileNoticeRewardCard_NoticeID {
	p := new(ProfileNoticeRewardCard_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardCard_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardCard_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardCard_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardCard_NoticeID_value, data, "ProfileNoticeRewardCard_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardCard_NoticeID(value)
	return nil
}

type ProfileNoticeDisconnectedGameResult_GameResult int32

const (
	ProfileNoticeDisconnectedGameResult_GR_UNKNOWN ProfileNoticeDisconnectedGameResult_GameResult = 0
	ProfileNoticeDisconnectedGameResult_GR_PLAYING ProfileNoticeDisconnectedGameResult_GameResult = 1
	ProfileNoticeDisconnectedGameResult_GR_WINNER  ProfileNoticeDisconnectedGameResult_GameResult = 2
	ProfileNoticeDisconnectedGameResult_GR_TIE     ProfileNoticeDisconnectedGameResult_GameResult = 3
)

var ProfileNoticeDisconnectedGameResult_GameResult_name = map[int32]string{
	0: "GR_UNKNOWN",
	1: "GR_PLAYING",
	2: "GR_WINNER",
	3: "GR_TIE",
}
var ProfileNoticeDisconnectedGameResult_GameResult_value = map[string]int32{
	"GR_UNKNOWN": 0,
	"GR_PLAYING": 1,
	"GR_WINNER":  2,
	"GR_TIE":     3,
}

func (x ProfileNoticeDisconnectedGameResult_GameResult) Enum() *ProfileNoticeDisconnectedGameResult_GameResult {
	p := new(ProfileNoticeDisconnectedGameResult_GameResult)
	*p = x
	return p
}
func (x ProfileNoticeDisconnectedGameResult_GameResult) String() string {
	return proto.EnumName(ProfileNoticeDisconnectedGameResult_GameResult_name, int32(x))
}
func (x *ProfileNoticeDisconnectedGameResult_GameResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeDisconnectedGameResult_GameResult_value, data, "ProfileNoticeDisconnectedGameResult_GameResult")
	if err != nil {
		return err
	}
	*x = ProfileNoticeDisconnectedGameResult_GameResult(value)
	return nil
}

type ProfileNoticeDisconnectedGameResult_PlayerResult int32

const (
	ProfileNoticeDisconnectedGameResult_PR_UNKNOWN      ProfileNoticeDisconnectedGameResult_PlayerResult = 0
	ProfileNoticeDisconnectedGameResult_PR_WON          ProfileNoticeDisconnectedGameResult_PlayerResult = 1
	ProfileNoticeDisconnectedGameResult_PR_LOST         ProfileNoticeDisconnectedGameResult_PlayerResult = 2
	ProfileNoticeDisconnectedGameResult_PR_DISCONNECTED ProfileNoticeDisconnectedGameResult_PlayerResult = 3
	ProfileNoticeDisconnectedGameResult_PR_QUIT         ProfileNoticeDisconnectedGameResult_PlayerResult = 4
)

var ProfileNoticeDisconnectedGameResult_PlayerResult_name = map[int32]string{
	0: "PR_UNKNOWN",
	1: "PR_WON",
	2: "PR_LOST",
	3: "PR_DISCONNECTED",
	4: "PR_QUIT",
}
var ProfileNoticeDisconnectedGameResult_PlayerResult_value = map[string]int32{
	"PR_UNKNOWN":      0,
	"PR_WON":          1,
	"PR_LOST":         2,
	"PR_DISCONNECTED": 3,
	"PR_QUIT":         4,
}

func (x ProfileNoticeDisconnectedGameResult_PlayerResult) Enum() *ProfileNoticeDisconnectedGameResult_PlayerResult {
	p := new(ProfileNoticeDisconnectedGameResult_PlayerResult)
	*p = x
	return p
}
func (x ProfileNoticeDisconnectedGameResult_PlayerResult) String() string {
	return proto.EnumName(ProfileNoticeDisconnectedGameResult_PlayerResult_name, int32(x))
}
func (x *ProfileNoticeDisconnectedGameResult_PlayerResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeDisconnectedGameResult_PlayerResult_value, data, "ProfileNoticeDisconnectedGameResult_PlayerResult")
	if err != nil {
		return err
	}
	*x = ProfileNoticeDisconnectedGameResult_PlayerResult(value)
	return nil
}

type ProfileNoticeDisconnectedGameResult_NoticeID int32

const (
	ProfileNoticeDisconnectedGameResult_ID ProfileNoticeDisconnectedGameResult_NoticeID = 4
)

var ProfileNoticeDisconnectedGameResult_NoticeID_name = map[int32]string{
	4: "ID",
}
var ProfileNoticeDisconnectedGameResult_NoticeID_value = map[string]int32{
	"ID": 4,
}

func (x ProfileNoticeDisconnectedGameResult_NoticeID) Enum() *ProfileNoticeDisconnectedGameResult_NoticeID {
	p := new(ProfileNoticeDisconnectedGameResult_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeDisconnectedGameResult_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeDisconnectedGameResult_NoticeID_name, int32(x))
}
func (x *ProfileNoticeDisconnectedGameResult_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeDisconnectedGameResult_NoticeID_value, data, "ProfileNoticeDisconnectedGameResult_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeDisconnectedGameResult_NoticeID(value)
	return nil
}

type ProfileNoticePreconDeck_NoticeID int32

const (
	ProfileNoticePreconDeck_ID ProfileNoticePreconDeck_NoticeID = 5
)

var ProfileNoticePreconDeck_NoticeID_name = map[int32]string{
	5: "ID",
}
var ProfileNoticePreconDeck_NoticeID_value = map[string]int32{
	"ID": 5,
}

func (x ProfileNoticePreconDeck_NoticeID) Enum() *ProfileNoticePreconDeck_NoticeID {
	p := new(ProfileNoticePreconDeck_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticePreconDeck_NoticeID) String() string {
	return proto.EnumName(ProfileNoticePreconDeck_NoticeID_name, int32(x))
}
func (x *ProfileNoticePreconDeck_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticePreconDeck_NoticeID_value, data, "ProfileNoticePreconDeck_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticePreconDeck_NoticeID(value)
	return nil
}

type ProfileNoticeRewardDust_NoticeID int32

const (
	ProfileNoticeRewardDust_ID ProfileNoticeRewardDust_NoticeID = 6
)

var ProfileNoticeRewardDust_NoticeID_name = map[int32]string{
	6: "ID",
}
var ProfileNoticeRewardDust_NoticeID_value = map[string]int32{
	"ID": 6,
}

func (x ProfileNoticeRewardDust_NoticeID) Enum() *ProfileNoticeRewardDust_NoticeID {
	p := new(ProfileNoticeRewardDust_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardDust_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardDust_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardDust_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardDust_NoticeID_value, data, "ProfileNoticeRewardDust_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardDust_NoticeID(value)
	return nil
}

type ProfileNoticeRewardMount_NoticeID int32

const (
	ProfileNoticeRewardMount_ID ProfileNoticeRewardMount_NoticeID = 7
)

var ProfileNoticeRewardMount_NoticeID_name = map[int32]string{
	7: "ID",
}
var ProfileNoticeRewardMount_NoticeID_value = map[string]int32{
	"ID": 7,
}

func (x ProfileNoticeRewardMount_NoticeID) Enum() *ProfileNoticeRewardMount_NoticeID {
	p := new(ProfileNoticeRewardMount_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardMount_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardMount_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardMount_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardMount_NoticeID_value, data, "ProfileNoticeRewardMount_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardMount_NoticeID(value)
	return nil
}

type ProfileNoticeRewardForge_NoticeID int32

const (
	ProfileNoticeRewardForge_ID ProfileNoticeRewardForge_NoticeID = 8
)

var ProfileNoticeRewardForge_NoticeID_name = map[int32]string{
	8: "ID",
}
var ProfileNoticeRewardForge_NoticeID_value = map[string]int32{
	"ID": 8,
}

func (x ProfileNoticeRewardForge_NoticeID) Enum() *ProfileNoticeRewardForge_NoticeID {
	p := new(ProfileNoticeRewardForge_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardForge_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardForge_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardForge_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardForge_NoticeID_value, data, "ProfileNoticeRewardForge_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardForge_NoticeID(value)
	return nil
}

type ProfileNoticeRewardGold_NoticeID int32

const (
	ProfileNoticeRewardGold_ID ProfileNoticeRewardGold_NoticeID = 9
)

var ProfileNoticeRewardGold_NoticeID_name = map[int32]string{
	9: "ID",
}
var ProfileNoticeRewardGold_NoticeID_value = map[string]int32{
	"ID": 9,
}

func (x ProfileNoticeRewardGold_NoticeID) Enum() *ProfileNoticeRewardGold_NoticeID {
	p := new(ProfileNoticeRewardGold_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardGold_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardGold_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardGold_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardGold_NoticeID_value, data, "ProfileNoticeRewardGold_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardGold_NoticeID(value)
	return nil
}

type ProfileNoticePurchase_NoticeID int32

const (
	ProfileNoticePurchase_ID ProfileNoticePurchase_NoticeID = 10
)

var ProfileNoticePurchase_NoticeID_name = map[int32]string{
	10: "ID",
}
var ProfileNoticePurchase_NoticeID_value = map[string]int32{
	"ID": 10,
}

func (x ProfileNoticePurchase_NoticeID) Enum() *ProfileNoticePurchase_NoticeID {
	p := new(ProfileNoticePurchase_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticePurchase_NoticeID) String() string {
	return proto.EnumName(ProfileNoticePurchase_NoticeID_name, int32(x))
}
func (x *ProfileNoticePurchase_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticePurchase_NoticeID_value, data, "ProfileNoticePurchase_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticePurchase_NoticeID(value)
	return nil
}

type ProfileNoticeCardBack_NoticeID int32

const (
	ProfileNoticeCardBack_ID ProfileNoticeCardBack_NoticeID = 11
)

var ProfileNoticeCardBack_NoticeID_name = map[int32]string{
	11: "ID",
}
var ProfileNoticeCardBack_NoticeID_value = map[string]int32{
	"ID": 11,
}

func (x ProfileNoticeCardBack_NoticeID) Enum() *ProfileNoticeCardBack_NoticeID {
	p := new(ProfileNoticeCardBack_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeCardBack_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeCardBack_NoticeID_name, int32(x))
}
func (x *ProfileNoticeCardBack_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeCardBack_NoticeID_value, data, "ProfileNoticeCardBack_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeCardBack_NoticeID(value)
	return nil
}

type ProfileNoticeBonusStars_NoticeID int32

const (
	ProfileNoticeBonusStars_ID ProfileNoticeBonusStars_NoticeID = 12
)

var ProfileNoticeBonusStars_NoticeID_name = map[int32]string{
	12: "ID",
}
var ProfileNoticeBonusStars_NoticeID_value = map[string]int32{
	"ID": 12,
}

func (x ProfileNoticeBonusStars_NoticeID) Enum() *ProfileNoticeBonusStars_NoticeID {
	p := new(ProfileNoticeBonusStars_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeBonusStars_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeBonusStars_NoticeID_name, int32(x))
}
func (x *ProfileNoticeBonusStars_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeBonusStars_NoticeID_value, data, "ProfileNoticeBonusStars_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeBonusStars_NoticeID(value)
	return nil
}

type ProfileNoticeRewardCard2X_NoticeID int32

const (
	ProfileNoticeRewardCard2X_ID ProfileNoticeRewardCard2X_NoticeID = 13
)

var ProfileNoticeRewardCard2X_NoticeID_name = map[int32]string{
	13: "ID",
}
var ProfileNoticeRewardCard2X_NoticeID_value = map[string]int32{
	"ID": 13,
}

func (x ProfileNoticeRewardCard2X_NoticeID) Enum() *ProfileNoticeRewardCard2X_NoticeID {
	p := new(ProfileNoticeRewardCard2X_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeRewardCard2X_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeRewardCard2X_NoticeID_name, int32(x))
}
func (x *ProfileNoticeRewardCard2X_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeRewardCard2X_NoticeID_value, data, "ProfileNoticeRewardCard2X_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeRewardCard2X_NoticeID(value)
	return nil
}

type ProfileNoticeAdventureProgress_NoticeID int32

const (
	ProfileNoticeAdventureProgress_ID ProfileNoticeAdventureProgress_NoticeID = 14
)

var ProfileNoticeAdventureProgress_NoticeID_name = map[int32]string{
	14: "ID",
}
var ProfileNoticeAdventureProgress_NoticeID_value = map[string]int32{
	"ID": 14,
}

func (x ProfileNoticeAdventureProgress_NoticeID) Enum() *ProfileNoticeAdventureProgress_NoticeID {
	p := new(ProfileNoticeAdventureProgress_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeAdventureProgress_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeAdventureProgress_NoticeID_name, int32(x))
}
func (x *ProfileNoticeAdventureProgress_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeAdventureProgress_NoticeID_value, data, "ProfileNoticeAdventureProgress_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeAdventureProgress_NoticeID(value)
	return nil
}

type ProfileNoticeLevelUp_NoticeID int32

const (
	ProfileNoticeLevelUp_ID ProfileNoticeLevelUp_NoticeID = 15
)

var ProfileNoticeLevelUp_NoticeID_name = map[int32]string{
	15: "ID",
}
var ProfileNoticeLevelUp_NoticeID_value = map[string]int32{
	"ID": 15,
}

func (x ProfileNoticeLevelUp_NoticeID) Enum() *ProfileNoticeLevelUp_NoticeID {
	p := new(ProfileNoticeLevelUp_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeLevelUp_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeLevelUp_NoticeID_name, int32(x))
}
func (x *ProfileNoticeLevelUp_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeLevelUp_NoticeID_value, data, "ProfileNoticeLevelUp_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeLevelUp_NoticeID(value)
	return nil
}

type ProfileNoticeAccountLicense_NoticeID int32

const (
	ProfileNoticeAccountLicense_ID ProfileNoticeAccountLicense_NoticeID = 16
)

var ProfileNoticeAccountLicense_NoticeID_name = map[int32]string{
	16: "ID",
}
var ProfileNoticeAccountLicense_NoticeID_value = map[string]int32{
	"ID": 16,
}

func (x ProfileNoticeAccountLicense_NoticeID) Enum() *ProfileNoticeAccountLicense_NoticeID {
	p := new(ProfileNoticeAccountLicense_NoticeID)
	*p = x
	return p
}
func (x ProfileNoticeAccountLicense_NoticeID) String() string {
	return proto.EnumName(ProfileNoticeAccountLicense_NoticeID_name, int32(x))
}
func (x *ProfileNoticeAccountLicense_NoticeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNoticeAccountLicense_NoticeID_value, data, "ProfileNoticeAccountLicense_NoticeID")
	if err != nil {
		return err
	}
	*x = ProfileNoticeAccountLicense_NoticeID(value)
	return nil
}

type DeckInfo_ValidityFlags int32

const (
	DeckInfo_UNLOCKED_HERO_CLASS DeckInfo_ValidityFlags = 1
	DeckInfo_OWNS_CARDS          DeckInfo_ValidityFlags = 2
	DeckInfo_HAS_30_CARDS        DeckInfo_ValidityFlags = 4
	DeckInfo_OBEYS_MAXES         DeckInfo_ValidityFlags = 8
	DeckInfo_CLASS_MATCHES       DeckInfo_ValidityFlags = 16
	DeckInfo_OWNS_CARD_BACK      DeckInfo_ValidityFlags = 32
	DeckInfo_OWNS_HERO           DeckInfo_ValidityFlags = 64
)

var DeckInfo_ValidityFlags_name = map[int32]string{
	1:  "UNLOCKED_HERO_CLASS",
	2:  "OWNS_CARDS",
	4:  "HAS_30_CARDS",
	8:  "OBEYS_MAXES",
	16: "CLASS_MATCHES",
	32: "OWNS_CARD_BACK",
	64: "OWNS_HERO",
}
var DeckInfo_ValidityFlags_value = map[string]int32{
	"UNLOCKED_HERO_CLASS": 1,
	"OWNS_CARDS":          2,
	"HAS_30_CARDS":        4,
	"OBEYS_MAXES":         8,
	"CLASS_MATCHES":       16,
	"OWNS_CARD_BACK":      32,
	"OWNS_HERO":           64,
}

func (x DeckInfo_ValidityFlags) Enum() *DeckInfo_ValidityFlags {
	p := new(DeckInfo_ValidityFlags)
	*p = x
	return p
}
func (x DeckInfo_ValidityFlags) String() string {
	return proto.EnumName(DeckInfo_ValidityFlags_name, int32(x))
}
func (x *DeckInfo_ValidityFlags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckInfo_ValidityFlags_value, data, "DeckInfo_ValidityFlags")
	if err != nil {
		return err
	}
	*x = DeckInfo_ValidityFlags(value)
	return nil
}

type AdventureProgress_Flags int32

const (
	AdventureProgress_OWNED                            AdventureProgress_Flags = 1
	AdventureProgress_DEFEAT_HEROIC_MISSION_1          AdventureProgress_Flags = 2
	AdventureProgress_DEFEAT_HEROIC_MISSION_2          AdventureProgress_Flags = 4
	AdventureProgress_DEFEAT_HEROIC_MISSION_3          AdventureProgress_Flags = 8
	AdventureProgress_DEFEAT_HEROIC_MISSION_4          AdventureProgress_Flags = 16
	AdventureProgress_DEFEAT_CLASS_CHALLENGE_MISSION_1 AdventureProgress_Flags = 256
	AdventureProgress_DEFEAT_CLASS_CHALLENGE_MISSION_2 AdventureProgress_Flags = 512
)

var AdventureProgress_Flags_name = map[int32]string{
	1:   "OWNED",
	2:   "DEFEAT_HEROIC_MISSION_1",
	4:   "DEFEAT_HEROIC_MISSION_2",
	8:   "DEFEAT_HEROIC_MISSION_3",
	16:  "DEFEAT_HEROIC_MISSION_4",
	256: "DEFEAT_CLASS_CHALLENGE_MISSION_1",
	512: "DEFEAT_CLASS_CHALLENGE_MISSION_2",
}
var AdventureProgress_Flags_value = map[string]int32{
	"OWNED":                            1,
	"DEFEAT_HEROIC_MISSION_1":          2,
	"DEFEAT_HEROIC_MISSION_2":          4,
	"DEFEAT_HEROIC_MISSION_3":          8,
	"DEFEAT_HEROIC_MISSION_4":          16,
	"DEFEAT_CLASS_CHALLENGE_MISSION_1": 256,
	"DEFEAT_CLASS_CHALLENGE_MISSION_2": 512,
}

func (x AdventureProgress_Flags) Enum() *AdventureProgress_Flags {
	p := new(AdventureProgress_Flags)
	*p = x
	return p
}
func (x AdventureProgress_Flags) String() string {
	return proto.EnumName(AdventureProgress_Flags_name, int32(x))
}
func (x *AdventureProgress_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureProgress_Flags_value, data, "AdventureProgress_Flags")
	if err != nil {
		return err
	}
	*x = AdventureProgress_Flags(value)
	return nil
}

type AccountLicenseInfo_Flags int32

const (
	AccountLicenseInfo_OWNED AccountLicenseInfo_Flags = 1
)

var AccountLicenseInfo_Flags_name = map[int32]string{
	1: "OWNED",
}
var AccountLicenseInfo_Flags_value = map[string]int32{
	"OWNED": 1,
}

func (x AccountLicenseInfo_Flags) Enum() *AccountLicenseInfo_Flags {
	p := new(AccountLicenseInfo_Flags)
	*p = x
	return p
}
func (x AccountLicenseInfo_Flags) String() string {
	return proto.EnumName(AccountLicenseInfo_Flags_name, int32(x))
}
func (x *AccountLicenseInfo_Flags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountLicenseInfo_Flags_value, data, "AccountLicenseInfo_Flags")
	if err != nil {
		return err
	}
	*x = AccountLicenseInfo_Flags(value)
	return nil
}

type CardDef struct {
	Asset            *int32 `protobuf:"varint,1,req,name=asset" json:"asset,omitempty"`
	Premium          *int32 `protobuf:"varint,2,opt,name=premium" json:"premium,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardDef) Reset()         { *m = CardDef{} }
func (m *CardDef) String() string { return proto.CompactTextString(m) }
func (*CardDef) ProtoMessage()    {}

func (m *CardDef) GetAsset() int32 {
	if m != nil && m.Asset != nil {
		return *m.Asset
	}
	return 0
}

func (m *CardDef) GetPremium() int32 {
	if m != nil && m.Premium != nil {
		return *m.Premium
	}
	return 0
}

type DeckCardData struct {
	Def              *CardDef `protobuf:"bytes,1,req,name=def" json:"def,omitempty"`
	Handle           *int32   `protobuf:"varint,2,req,name=handle,def=0" json:"handle,omitempty"`
	Qty              *int32   `protobuf:"varint,3,opt,name=qty" json:"qty,omitempty"`
	Prev             *int32   `protobuf:"varint,5,req,name=prev,def=0" json:"prev,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DeckCardData) Reset()         { *m = DeckCardData{} }
func (m *DeckCardData) String() string { return proto.CompactTextString(m) }
func (*DeckCardData) ProtoMessage()    {}

const Default_DeckCardData_Handle int32 = 0
const Default_DeckCardData_Prev int32 = 0

func (m *DeckCardData) GetDef() *CardDef {
	if m != nil {
		return m.Def
	}
	return nil
}

func (m *DeckCardData) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return Default_DeckCardData_Handle
}

func (m *DeckCardData) GetQty() int32 {
	if m != nil && m.Qty != nil {
		return *m.Qty
	}
	return 0
}

func (m *DeckCardData) GetPrev() int32 {
	if m != nil && m.Prev != nil {
		return *m.Prev
	}
	return Default_DeckCardData_Prev
}

type BoosterInfo struct {
	Type             *int32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Count            *int32 `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BoosterInfo) Reset()         { *m = BoosterInfo{} }
func (m *BoosterInfo) String() string { return proto.CompactTextString(m) }
func (*BoosterInfo) ProtoMessage()    {}

func (m *BoosterInfo) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *BoosterInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type Date struct {
	Year             *int32 `protobuf:"varint,1,req,name=year" json:"year,omitempty"`
	Month            *int32 `protobuf:"varint,2,req,name=month" json:"month,omitempty"`
	Day              *int32 `protobuf:"varint,3,req,name=day" json:"day,omitempty"`
	Hours            *int32 `protobuf:"varint,4,req,name=hours" json:"hours,omitempty"`
	Min              *int32 `protobuf:"varint,5,req,name=min" json:"min,omitempty"`
	Sec              *int32 `protobuf:"varint,6,req,name=sec" json:"sec,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}

func (m *Date) GetYear() int32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *Date) GetMonth() int32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *Date) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *Date) GetHours() int32 {
	if m != nil && m.Hours != nil {
		return *m.Hours
	}
	return 0
}

func (m *Date) GetMin() int32 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return 0
}

func (m *Date) GetSec() int32 {
	if m != nil && m.Sec != nil {
		return *m.Sec
	}
	return 0
}

type CardStack struct {
	CardDef          *CardDef `protobuf:"bytes,1,req,name=card_def" json:"card_def,omitempty"`
	LatestInsertDate *Date    `protobuf:"bytes,2,req,name=latest_insert_date" json:"latest_insert_date,omitempty"`
	Count            *int32   `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	NumSeen          *int32   `protobuf:"varint,4,req,name=num_seen" json:"num_seen,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CardStack) Reset()         { *m = CardStack{} }
func (m *CardStack) String() string { return proto.CompactTextString(m) }
func (*CardStack) ProtoMessage()    {}

func (m *CardStack) GetCardDef() *CardDef {
	if m != nil {
		return m.CardDef
	}
	return nil
}

func (m *CardStack) GetLatestInsertDate() *Date {
	if m != nil {
		return m.LatestInsertDate
	}
	return nil
}

func (m *CardStack) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CardStack) GetNumSeen() int32 {
	if m != nil && m.NumSeen != nil {
		return *m.NumSeen
	}
	return 0
}

type BnetId struct {
	Hi               *uint64 `protobuf:"varint,1,req,name=hi" json:"hi,omitempty"`
	Lo               *uint64 `protobuf:"varint,2,req,name=lo" json:"lo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BnetId) Reset()         { *m = BnetId{} }
func (m *BnetId) String() string { return proto.CompactTextString(m) }
func (*BnetId) ProtoMessage()    {}

func (m *BnetId) GetHi() uint64 {
	if m != nil && m.Hi != nil {
		return *m.Hi
	}
	return 0
}

func (m *BnetId) GetLo() uint64 {
	if m != nil && m.Lo != nil {
		return *m.Lo
	}
	return 0
}

type ProfileNoticeMedal struct {
	StarLevel        *int32       `protobuf:"varint,1,req,name=star_level" json:"star_level,omitempty"`
	LegendRank       *int32       `protobuf:"varint,2,opt,name=legend_rank" json:"legend_rank,omitempty"`
	BestStarLevel    *int32       `protobuf:"varint,3,opt,name=best_star_level" json:"best_star_level,omitempty"`
	Chest            *RewardChest `protobuf:"bytes,4,opt,name=chest" json:"chest,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ProfileNoticeMedal) Reset()         { *m = ProfileNoticeMedal{} }
func (m *ProfileNoticeMedal) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeMedal) ProtoMessage()    {}

func (m *ProfileNoticeMedal) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *ProfileNoticeMedal) GetLegendRank() int32 {
	if m != nil && m.LegendRank != nil {
		return *m.LegendRank
	}
	return 0
}

func (m *ProfileNoticeMedal) GetBestStarLevel() int32 {
	if m != nil && m.BestStarLevel != nil {
		return *m.BestStarLevel
	}
	return 0
}

func (m *ProfileNoticeMedal) GetChest() *RewardChest {
	if m != nil {
		return m.Chest
	}
	return nil
}

type ProfileNoticeRewardBooster struct {
	BoosterType      *int32 `protobuf:"varint,1,req,name=booster_type" json:"booster_type,omitempty"`
	BoosterCount     *int32 `protobuf:"varint,2,req,name=booster_count" json:"booster_count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardBooster) Reset()         { *m = ProfileNoticeRewardBooster{} }
func (m *ProfileNoticeRewardBooster) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardBooster) ProtoMessage()    {}

func (m *ProfileNoticeRewardBooster) GetBoosterType() int32 {
	if m != nil && m.BoosterType != nil {
		return *m.BoosterType
	}
	return 0
}

func (m *ProfileNoticeRewardBooster) GetBoosterCount() int32 {
	if m != nil && m.BoosterCount != nil {
		return *m.BoosterCount
	}
	return 0
}

type ProfileNoticeRewardCard struct {
	Card             *CardDef `protobuf:"bytes,1,req,name=card" json:"card,omitempty"`
	Quantity         *int32   `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProfileNoticeRewardCard) Reset()         { *m = ProfileNoticeRewardCard{} }
func (m *ProfileNoticeRewardCard) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardCard) ProtoMessage()    {}

func (m *ProfileNoticeRewardCard) GetCard() *CardDef {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *ProfileNoticeRewardCard) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

type ProfileNoticeDisconnectedGameResult struct {
	GameType         *GameType                                         `protobuf:"varint,8,opt,name=game_type,enum=shared.GameType,def=0" json:"game_type,omitempty"`
	MissionId        *int32                                            `protobuf:"varint,9,opt,name=mission_id" json:"mission_id,omitempty"`
	GameResult       *ProfileNoticeDisconnectedGameResult_GameResult   `protobuf:"varint,10,opt,name=game_result,enum=shared.ProfileNoticeDisconnectedGameResult_GameResult,def=0" json:"game_result,omitempty"`
	YourResult       *ProfileNoticeDisconnectedGameResult_PlayerResult `protobuf:"varint,11,opt,name=your_result,enum=shared.ProfileNoticeDisconnectedGameResult_PlayerResult,def=0" json:"your_result,omitempty"`
	OpponentResult   *ProfileNoticeDisconnectedGameResult_PlayerResult `protobuf:"varint,12,opt,name=opponent_result,enum=shared.ProfileNoticeDisconnectedGameResult_PlayerResult,def=0" json:"opponent_result,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *ProfileNoticeDisconnectedGameResult) Reset()         { *m = ProfileNoticeDisconnectedGameResult{} }
func (m *ProfileNoticeDisconnectedGameResult) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeDisconnectedGameResult) ProtoMessage()    {}

const Default_ProfileNoticeDisconnectedGameResult_GameType GameType = GameType_GT_UNKNOWN
const Default_ProfileNoticeDisconnectedGameResult_GameResult ProfileNoticeDisconnectedGameResult_GameResult = ProfileNoticeDisconnectedGameResult_GR_UNKNOWN
const Default_ProfileNoticeDisconnectedGameResult_YourResult ProfileNoticeDisconnectedGameResult_PlayerResult = ProfileNoticeDisconnectedGameResult_PR_UNKNOWN
const Default_ProfileNoticeDisconnectedGameResult_OpponentResult ProfileNoticeDisconnectedGameResult_PlayerResult = ProfileNoticeDisconnectedGameResult_PR_UNKNOWN

func (m *ProfileNoticeDisconnectedGameResult) GetGameType() GameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return Default_ProfileNoticeDisconnectedGameResult_GameType
}

func (m *ProfileNoticeDisconnectedGameResult) GetMissionId() int32 {
	if m != nil && m.MissionId != nil {
		return *m.MissionId
	}
	return 0
}

func (m *ProfileNoticeDisconnectedGameResult) GetGameResult() ProfileNoticeDisconnectedGameResult_GameResult {
	if m != nil && m.GameResult != nil {
		return *m.GameResult
	}
	return Default_ProfileNoticeDisconnectedGameResult_GameResult
}

func (m *ProfileNoticeDisconnectedGameResult) GetYourResult() ProfileNoticeDisconnectedGameResult_PlayerResult {
	if m != nil && m.YourResult != nil {
		return *m.YourResult
	}
	return Default_ProfileNoticeDisconnectedGameResult_YourResult
}

func (m *ProfileNoticeDisconnectedGameResult) GetOpponentResult() ProfileNoticeDisconnectedGameResult_PlayerResult {
	if m != nil && m.OpponentResult != nil {
		return *m.OpponentResult
	}
	return Default_ProfileNoticeDisconnectedGameResult_OpponentResult
}

type ProfileNoticePreconDeck struct {
	Deck             *int64 `protobuf:"varint,1,req,name=deck" json:"deck,omitempty"`
	Hero             *int32 `protobuf:"varint,2,req,name=hero" json:"hero,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticePreconDeck) Reset()         { *m = ProfileNoticePreconDeck{} }
func (m *ProfileNoticePreconDeck) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticePreconDeck) ProtoMessage()    {}

func (m *ProfileNoticePreconDeck) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *ProfileNoticePreconDeck) GetHero() int32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

type ProfileNoticeRewardDust struct {
	Amount           *int32 `protobuf:"varint,1,req,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardDust) Reset()         { *m = ProfileNoticeRewardDust{} }
func (m *ProfileNoticeRewardDust) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardDust) ProtoMessage()    {}

func (m *ProfileNoticeRewardDust) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type ProfileNoticeRewardMount struct {
	MountId          *int32 `protobuf:"varint,1,req,name=mount_id" json:"mount_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardMount) Reset()         { *m = ProfileNoticeRewardMount{} }
func (m *ProfileNoticeRewardMount) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardMount) ProtoMessage()    {}

func (m *ProfileNoticeRewardMount) GetMountId() int32 {
	if m != nil && m.MountId != nil {
		return *m.MountId
	}
	return 0
}

type ProfileNoticeRewardForge struct {
	Quantity         *int32 `protobuf:"varint,1,req,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardForge) Reset()         { *m = ProfileNoticeRewardForge{} }
func (m *ProfileNoticeRewardForge) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardForge) ProtoMessage()    {}

func (m *ProfileNoticeRewardForge) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

type ProfileNoticeRewardGold struct {
	Amount           *int32 `protobuf:"varint,1,req,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardGold) Reset()         { *m = ProfileNoticeRewardGold{} }
func (m *ProfileNoticeRewardGold) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardGold) ProtoMessage()    {}

func (m *ProfileNoticeRewardGold) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type ProfileNoticePurchase struct {
	ProductId        *string `protobuf:"bytes,1,req,name=product_id" json:"product_id,omitempty"`
	Data             *int64  `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	Currency         *int32  `protobuf:"varint,3,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProfileNoticePurchase) Reset()         { *m = ProfileNoticePurchase{} }
func (m *ProfileNoticePurchase) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticePurchase) ProtoMessage()    {}

func (m *ProfileNoticePurchase) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *ProfileNoticePurchase) GetData() int64 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *ProfileNoticePurchase) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

type ProfileNoticeCardBack struct {
	CardBack         *int32 `protobuf:"varint,1,req,name=card_back" json:"card_back,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeCardBack) Reset()         { *m = ProfileNoticeCardBack{} }
func (m *ProfileNoticeCardBack) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeCardBack) ProtoMessage()    {}

func (m *ProfileNoticeCardBack) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

type ProfileNoticeBonusStars struct {
	StarLevel        *int32 `protobuf:"varint,1,req,name=star_level" json:"star_level,omitempty"`
	Stars            *int32 `protobuf:"varint,2,req,name=stars" json:"stars,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeBonusStars) Reset()         { *m = ProfileNoticeBonusStars{} }
func (m *ProfileNoticeBonusStars) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeBonusStars) ProtoMessage()    {}

func (m *ProfileNoticeBonusStars) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *ProfileNoticeBonusStars) GetStars() int32 {
	if m != nil && m.Stars != nil {
		return *m.Stars
	}
	return 0
}

type ProfileNoticeRewardCard2X struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeRewardCard2X) Reset()         { *m = ProfileNoticeRewardCard2X{} }
func (m *ProfileNoticeRewardCard2X) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeRewardCard2X) ProtoMessage()    {}

type ProfileNoticeAdventureProgress struct {
	WingId           *int32 `protobuf:"varint,1,req,name=wing_id" json:"wing_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeAdventureProgress) Reset()         { *m = ProfileNoticeAdventureProgress{} }
func (m *ProfileNoticeAdventureProgress) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeAdventureProgress) ProtoMessage()    {}

func (m *ProfileNoticeAdventureProgress) GetWingId() int32 {
	if m != nil && m.WingId != nil {
		return *m.WingId
	}
	return 0
}

type ProfileNoticeLevelUp struct {
	HeroClass        *int32 `protobuf:"varint,1,req,name=hero_class" json:"hero_class,omitempty"`
	NewLevel         *int32 `protobuf:"varint,2,req,name=new_level" json:"new_level,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeLevelUp) Reset()         { *m = ProfileNoticeLevelUp{} }
func (m *ProfileNoticeLevelUp) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeLevelUp) ProtoMessage()    {}

func (m *ProfileNoticeLevelUp) GetHeroClass() int32 {
	if m != nil && m.HeroClass != nil {
		return *m.HeroClass
	}
	return 0
}

func (m *ProfileNoticeLevelUp) GetNewLevel() int32 {
	if m != nil && m.NewLevel != nil {
		return *m.NewLevel
	}
	return 0
}

type ProfileNoticeAccountLicense struct {
	License          *int64 `protobuf:"varint,1,req,name=license" json:"license,omitempty"`
	CasId            *int64 `protobuf:"varint,2,req,name=cas_id" json:"cas_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileNoticeAccountLicense) Reset()         { *m = ProfileNoticeAccountLicense{} }
func (m *ProfileNoticeAccountLicense) String() string { return proto.CompactTextString(m) }
func (*ProfileNoticeAccountLicense) ProtoMessage()    {}

func (m *ProfileNoticeAccountLicense) GetLicense() int64 {
	if m != nil && m.License != nil {
		return *m.License
	}
	return 0
}

func (m *ProfileNoticeAccountLicense) GetCasId() int64 {
	if m != nil && m.CasId != nil {
		return *m.CasId
	}
	return 0
}

type PlayQueueInfo struct {
	GameType         *BnetGameType `protobuf:"varint,1,req,name=game_type,enum=shared.BnetGameType" json:"game_type,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *PlayQueueInfo) Reset()         { *m = PlayQueueInfo{} }
func (m *PlayQueueInfo) String() string { return proto.CompactTextString(m) }
func (*PlayQueueInfo) ProtoMessage()    {}

func (m *PlayQueueInfo) GetGameType() BnetGameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return BnetGameType_BGT_UNKNOWN
}

type Platform struct {
	Os               *int32  `protobuf:"varint,1,req,name=os" json:"os,omitempty"`
	Screen           *int32  `protobuf:"varint,2,req,name=screen" json:"screen,omitempty"`
	Name             *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Store            *int32  `protobuf:"varint,4,opt,name=store" json:"store,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Platform) Reset()         { *m = Platform{} }
func (m *Platform) String() string { return proto.CompactTextString(m) }
func (*Platform) ProtoMessage()    {}

func (m *Platform) GetOs() int32 {
	if m != nil && m.Os != nil {
		return *m.Os
	}
	return 0
}

func (m *Platform) GetScreen() int32 {
	if m != nil && m.Screen != nil {
		return *m.Screen
	}
	return 0
}

func (m *Platform) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Platform) GetStore() int32 {
	if m != nil && m.Store != nil {
		return *m.Store
	}
	return 0
}

type DeckInfo struct {
	Id               *int64    `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name             *string   `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	CardBack         *int32    `protobuf:"varint,3,req,name=card_back" json:"card_back,omitempty"`
	Hero             *int32    `protobuf:"varint,4,req,name=hero" json:"hero,omitempty"`
	DeckType         *DeckType `protobuf:"varint,5,req,name=deck_type,enum=shared.DeckType" json:"deck_type,omitempty"`
	Validity         *uint64   `protobuf:"varint,6,req,name=validity" json:"validity,omitempty"`
	HeroPremium      *int32    `protobuf:"varint,7,req,name=hero_premium" json:"hero_premium,omitempty"`
	CardBackOverride *bool     `protobuf:"varint,8,req,name=card_back_override" json:"card_back_override,omitempty"`
	HeroOverride     *bool     `protobuf:"varint,9,req,name=hero_override" json:"hero_override,omitempty"`
	LastModified     *int64    `protobuf:"varint,10,opt,name=last_modified" json:"last_modified,omitempty"`
	SeasonId         *int32    `protobuf:"varint,11,opt,name=season_id" json:"season_id,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *DeckInfo) Reset()         { *m = DeckInfo{} }
func (m *DeckInfo) String() string { return proto.CompactTextString(m) }
func (*DeckInfo) ProtoMessage()    {}

func (m *DeckInfo) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *DeckInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeckInfo) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

func (m *DeckInfo) GetHero() int32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

func (m *DeckInfo) GetDeckType() DeckType {
	if m != nil && m.DeckType != nil {
		return *m.DeckType
	}
	return DeckType_NORMAL_DECK
}

func (m *DeckInfo) GetValidity() uint64 {
	if m != nil && m.Validity != nil {
		return *m.Validity
	}
	return 0
}

func (m *DeckInfo) GetHeroPremium() int32 {
	if m != nil && m.HeroPremium != nil {
		return *m.HeroPremium
	}
	return 0
}

func (m *DeckInfo) GetCardBackOverride() bool {
	if m != nil && m.CardBackOverride != nil {
		return *m.CardBackOverride
	}
	return false
}

func (m *DeckInfo) GetHeroOverride() bool {
	if m != nil && m.HeroOverride != nil {
		return *m.HeroOverride
	}
	return false
}

func (m *DeckInfo) GetLastModified() int64 {
	if m != nil && m.LastModified != nil {
		return *m.LastModified
	}
	return 0
}

func (m *DeckInfo) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

type AdventureProgress struct {
	WingId           *int32  `protobuf:"varint,1,req,name=wing_id" json:"wing_id,omitempty"`
	Progress         *int32  `protobuf:"varint,2,req,name=progress" json:"progress,omitempty"`
	Ack              *int32  `protobuf:"varint,3,opt,name=ack,def=0" json:"ack,omitempty"`
	Flags            *uint64 `protobuf:"varint,4,req,name=flags" json:"flags,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdventureProgress) Reset()         { *m = AdventureProgress{} }
func (m *AdventureProgress) String() string { return proto.CompactTextString(m) }
func (*AdventureProgress) ProtoMessage()    {}

const Default_AdventureProgress_Ack int32 = 0

func (m *AdventureProgress) GetWingId() int32 {
	if m != nil && m.WingId != nil {
		return *m.WingId
	}
	return 0
}

func (m *AdventureProgress) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *AdventureProgress) GetAck() int32 {
	if m != nil && m.Ack != nil {
		return *m.Ack
	}
	return Default_AdventureProgress_Ack
}

func (m *AdventureProgress) GetFlags() uint64 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

type FavoriteHero struct {
	ClassId          *int32   `protobuf:"varint,1,req,name=class_id" json:"class_id,omitempty"`
	Hero             *CardDef `protobuf:"bytes,2,req,name=hero" json:"hero,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *FavoriteHero) Reset()         { *m = FavoriteHero{} }
func (m *FavoriteHero) String() string { return proto.CompactTextString(m) }
func (*FavoriteHero) ProtoMessage()    {}

func (m *FavoriteHero) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *FavoriteHero) GetHero() *CardDef {
	if m != nil {
		return m.Hero
	}
	return nil
}

type AccountLicenseInfo struct {
	License          *int64  `protobuf:"varint,1,req,name=license" json:"license,omitempty"`
	Flags            *uint64 `protobuf:"varint,2,req,name=flags" json:"flags,omitempty"`
	CasId            *int64  `protobuf:"varint,3,req,name=cas_id" json:"cas_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AccountLicenseInfo) Reset()         { *m = AccountLicenseInfo{} }
func (m *AccountLicenseInfo) String() string { return proto.CompactTextString(m) }
func (*AccountLicenseInfo) ProtoMessage()    {}

func (m *AccountLicenseInfo) GetLicense() int64 {
	if m != nil && m.License != nil {
		return *m.License
	}
	return 0
}

func (m *AccountLicenseInfo) GetFlags() uint64 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *AccountLicenseInfo) GetCasId() int64 {
	if m != nil && m.CasId != nil {
		return *m.CasId
	}
	return 0
}

type RewardBag struct {
	RewardBooster    *ProfileNoticeRewardBooster `protobuf:"bytes,1,opt,name=reward_booster" json:"reward_booster,omitempty"`
	RewardCard       *ProfileNoticeRewardCard    `protobuf:"bytes,2,opt,name=reward_card" json:"reward_card,omitempty"`
	RewardDust       *ProfileNoticeRewardDust    `protobuf:"bytes,3,opt,name=reward_dust" json:"reward_dust,omitempty"`
	RewardGold       *ProfileNoticeRewardGold    `protobuf:"bytes,4,opt,name=reward_gold" json:"reward_gold,omitempty"`
	RewardCardBack   *ProfileNoticeCardBack      `protobuf:"bytes,5,opt,name=reward_card_back" json:"reward_card_back,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *RewardBag) Reset()         { *m = RewardBag{} }
func (m *RewardBag) String() string { return proto.CompactTextString(m) }
func (*RewardBag) ProtoMessage()    {}

func (m *RewardBag) GetRewardBooster() *ProfileNoticeRewardBooster {
	if m != nil {
		return m.RewardBooster
	}
	return nil
}

func (m *RewardBag) GetRewardCard() *ProfileNoticeRewardCard {
	if m != nil {
		return m.RewardCard
	}
	return nil
}

func (m *RewardBag) GetRewardDust() *ProfileNoticeRewardDust {
	if m != nil {
		return m.RewardDust
	}
	return nil
}

func (m *RewardBag) GetRewardGold() *ProfileNoticeRewardGold {
	if m != nil {
		return m.RewardGold
	}
	return nil
}

func (m *RewardBag) GetRewardCardBack() *ProfileNoticeCardBack {
	if m != nil {
		return m.RewardCardBack
	}
	return nil
}

type RewardChest struct {
	Bag1             *RewardBag `protobuf:"bytes,1,opt,name=bag1" json:"bag1,omitempty"`
	Bag2             *RewardBag `protobuf:"bytes,2,opt,name=bag2" json:"bag2,omitempty"`
	Bag3             *RewardBag `protobuf:"bytes,3,opt,name=bag3" json:"bag3,omitempty"`
	Bag4             *RewardBag `protobuf:"bytes,4,opt,name=bag4" json:"bag4,omitempty"`
	Bag5             *RewardBag `protobuf:"bytes,5,opt,name=bag5" json:"bag5,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *RewardChest) Reset()         { *m = RewardChest{} }
func (m *RewardChest) String() string { return proto.CompactTextString(m) }
func (*RewardChest) ProtoMessage()    {}

func (m *RewardChest) GetBag1() *RewardBag {
	if m != nil {
		return m.Bag1
	}
	return nil
}

func (m *RewardChest) GetBag2() *RewardBag {
	if m != nil {
		return m.Bag2
	}
	return nil
}

func (m *RewardChest) GetBag3() *RewardBag {
	if m != nil {
		return m.Bag3
	}
	return nil
}

func (m *RewardChest) GetBag4() *RewardBag {
	if m != nil {
		return m.Bag4
	}
	return nil
}

func (m *RewardChest) GetBag5() *RewardBag {
	if m != nil {
		return m.Bag5
	}
	return nil
}

type LocalizedStringValue struct {
	Locale           *int32  `protobuf:"varint,1,req,name=locale" json:"locale,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LocalizedStringValue) Reset()         { *m = LocalizedStringValue{} }
func (m *LocalizedStringValue) String() string { return proto.CompactTextString(m) }
func (*LocalizedStringValue) ProtoMessage()    {}

func (m *LocalizedStringValue) GetLocale() int32 {
	if m != nil && m.Locale != nil {
		return *m.Locale
	}
	return 0
}

func (m *LocalizedStringValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type LocalizedString struct {
	Key              *string                 `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	DeprecatedValue  *string                 `protobuf:"bytes,2,opt,name=deprecated_value" json:"deprecated_value,omitempty"`
	DeprecatedLocale *int32                  `protobuf:"varint,3,opt,name=deprecated_locale" json:"deprecated_locale,omitempty"`
	Values           []*LocalizedStringValue `protobuf:"bytes,4,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *LocalizedString) Reset()         { *m = LocalizedString{} }
func (m *LocalizedString) String() string { return proto.CompactTextString(m) }
func (*LocalizedString) ProtoMessage()    {}

func (m *LocalizedString) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *LocalizedString) GetDeprecatedValue() string {
	if m != nil && m.DeprecatedValue != nil {
		return *m.DeprecatedValue
	}
	return ""
}

func (m *LocalizedString) GetDeprecatedLocale() int32 {
	if m != nil && m.DeprecatedLocale != nil {
		return *m.DeprecatedLocale
	}
	return 0
}

func (m *LocalizedString) GetValues() []*LocalizedStringValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type GameSetupRule struct {
	Id               *int32    `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	RuleType         *RuleType `protobuf:"varint,2,req,name=rule_type,enum=shared.RuleType" json:"rule_type,omitempty"`
	Data1            *int64    `protobuf:"varint,3,req,name=data1" json:"data1,omitempty"`
	Data2            *int64    `protobuf:"varint,4,req,name=data2" json:"data2,omitempty"`
	Data3            *int64    `protobuf:"varint,5,req,name=data3" json:"data3,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *GameSetupRule) Reset()         { *m = GameSetupRule{} }
func (m *GameSetupRule) String() string { return proto.CompactTextString(m) }
func (*GameSetupRule) ProtoMessage()    {}

func (m *GameSetupRule) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GameSetupRule) GetRuleType() RuleType {
	if m != nil && m.RuleType != nil {
		return *m.RuleType
	}
	return RuleType_RULE_NONE
}

func (m *GameSetupRule) GetData1() int64 {
	if m != nil && m.Data1 != nil {
		return *m.Data1
	}
	return 0
}

func (m *GameSetupRule) GetData2() int64 {
	if m != nil && m.Data2 != nil {
		return *m.Data2
	}
	return 0
}

func (m *GameSetupRule) GetData3() int64 {
	if m != nil && m.Data3 != nil {
		return *m.Data3
	}
	return 0
}

type Vector2 struct {
	X                *float32 `protobuf:"fixed32,1,req,name=x,def=0" json:"x,omitempty"`
	Y                *float32 `protobuf:"fixed32,2,req,name=y,def=0" json:"y,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Vector2) Reset()         { *m = Vector2{} }
func (m *Vector2) String() string { return proto.CompactTextString(m) }
func (*Vector2) ProtoMessage()    {}

const Default_Vector2_X float32 = 0
const Default_Vector2_Y float32 = 0

func (m *Vector2) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return Default_Vector2_X
}

func (m *Vector2) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return Default_Vector2_Y
}

type ScenarioDbRecord struct {
	Id                            *int32             `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	NoteDesc                      *string            `protobuf:"bytes,2,opt,name=note_desc" json:"note_desc,omitempty"`
	NumPlayers                    *int32             `protobuf:"varint,3,req,name=num_players" json:"num_players,omitempty"`
	Player1HeroCardId             *int64             `protobuf:"varint,4,req,name=player1_hero_card_id" json:"player1_hero_card_id,omitempty"`
	Player2HeroCardId             *int64             `protobuf:"varint,5,req,name=player2_hero_card_id" json:"player2_hero_card_id,omitempty"`
	IsExpert                      *bool              `protobuf:"varint,6,req,name=is_expert" json:"is_expert,omitempty"`
	AdventureId                   *int32             `protobuf:"varint,7,req,name=adventure_id" json:"adventure_id,omitempty"`
	AdventureModeId               *int32             `protobuf:"varint,8,opt,name=adventure_mode_id" json:"adventure_mode_id,omitempty"`
	WingId                        *int32             `protobuf:"varint,9,req,name=wing_id" json:"wing_id,omitempty"`
	SortOrder                     *int32             `protobuf:"varint,10,req,name=sort_order" json:"sort_order,omitempty"`
	ClientPlayer2HeroCardId       *int64             `protobuf:"varint,11,opt,name=client_player2_hero_card_id" json:"client_player2_hero_card_id,omitempty"`
	TavernBrawlTexture            *string            `protobuf:"bytes,12,opt,name=tavern_brawl_texture" json:"tavern_brawl_texture,omitempty"`
	TavernBrawlTexturePhone       *string            `protobuf:"bytes,13,opt,name=tavern_brawl_texture_phone" json:"tavern_brawl_texture_phone,omitempty"`
	TavernBrawlTexturePhoneOffset *Vector2           `protobuf:"bytes,14,opt,name=tavern_brawl_texture_phone_offset" json:"tavern_brawl_texture_phone_offset,omitempty"`
	IsCoop                        *bool              `protobuf:"varint,15,opt,name=is_coop" json:"is_coop,omitempty"`
	Strings                       []*LocalizedString `protobuf:"bytes,100,rep,name=strings" json:"strings,omitempty"`
	Rules                         []*GameSetupRule   `protobuf:"bytes,101,rep,name=rules" json:"rules,omitempty"`
	XXX_unrecognized              []byte             `json:"-"`
}

func (m *ScenarioDbRecord) Reset()         { *m = ScenarioDbRecord{} }
func (m *ScenarioDbRecord) String() string { return proto.CompactTextString(m) }
func (*ScenarioDbRecord) ProtoMessage()    {}

func (m *ScenarioDbRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ScenarioDbRecord) GetNoteDesc() string {
	if m != nil && m.NoteDesc != nil {
		return *m.NoteDesc
	}
	return ""
}

func (m *ScenarioDbRecord) GetNumPlayers() int32 {
	if m != nil && m.NumPlayers != nil {
		return *m.NumPlayers
	}
	return 0
}

func (m *ScenarioDbRecord) GetPlayer1HeroCardId() int64 {
	if m != nil && m.Player1HeroCardId != nil {
		return *m.Player1HeroCardId
	}
	return 0
}

func (m *ScenarioDbRecord) GetPlayer2HeroCardId() int64 {
	if m != nil && m.Player2HeroCardId != nil {
		return *m.Player2HeroCardId
	}
	return 0
}

func (m *ScenarioDbRecord) GetIsExpert() bool {
	if m != nil && m.IsExpert != nil {
		return *m.IsExpert
	}
	return false
}

func (m *ScenarioDbRecord) GetAdventureId() int32 {
	if m != nil && m.AdventureId != nil {
		return *m.AdventureId
	}
	return 0
}

func (m *ScenarioDbRecord) GetAdventureModeId() int32 {
	if m != nil && m.AdventureModeId != nil {
		return *m.AdventureModeId
	}
	return 0
}

func (m *ScenarioDbRecord) GetWingId() int32 {
	if m != nil && m.WingId != nil {
		return *m.WingId
	}
	return 0
}

func (m *ScenarioDbRecord) GetSortOrder() int32 {
	if m != nil && m.SortOrder != nil {
		return *m.SortOrder
	}
	return 0
}

func (m *ScenarioDbRecord) GetClientPlayer2HeroCardId() int64 {
	if m != nil && m.ClientPlayer2HeroCardId != nil {
		return *m.ClientPlayer2HeroCardId
	}
	return 0
}

func (m *ScenarioDbRecord) GetTavernBrawlTexture() string {
	if m != nil && m.TavernBrawlTexture != nil {
		return *m.TavernBrawlTexture
	}
	return ""
}

func (m *ScenarioDbRecord) GetTavernBrawlTexturePhone() string {
	if m != nil && m.TavernBrawlTexturePhone != nil {
		return *m.TavernBrawlTexturePhone
	}
	return ""
}

func (m *ScenarioDbRecord) GetTavernBrawlTexturePhoneOffset() *Vector2 {
	if m != nil {
		return m.TavernBrawlTexturePhoneOffset
	}
	return nil
}

func (m *ScenarioDbRecord) GetIsCoop() bool {
	if m != nil && m.IsCoop != nil {
		return *m.IsCoop
	}
	return false
}

func (m *ScenarioDbRecord) GetStrings() []*LocalizedString {
	if m != nil {
		return m.Strings
	}
	return nil
}

func (m *ScenarioDbRecord) GetRules() []*GameSetupRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type TavernBrawlSpec struct {
	EndSecondsFromNow      *uint64                  `protobuf:"varint,1,opt,name=end_seconds_from_now" json:"end_seconds_from_now,omitempty"`
	ScenarioId             *int32                   `protobuf:"varint,2,req,name=scenario_id" json:"scenario_id,omitempty"`
	ScenarioRecordByteSize *uint32                  `protobuf:"varint,3,req,name=scenario_record_byte_size" json:"scenario_record_byte_size,omitempty"`
	ScenarioRecordHash     []byte                   `protobuf:"bytes,4,req,name=scenario_record_hash" json:"scenario_record_hash,omitempty"`
	RewardType             *RewardType              `protobuf:"varint,5,req,name=reward_type,enum=shared.RewardType" json:"reward_type,omitempty"`
	RewardData1            *int64                   `protobuf:"varint,6,req,name=reward_data1" json:"reward_data1,omitempty"`
	RewardData2            *int64                   `protobuf:"varint,7,req,name=reward_data2" json:"reward_data2,omitempty"`
	RewardTrigger          *RewardTrigger           `protobuf:"varint,8,opt,name=reward_trigger,enum=shared.RewardTrigger,def=0" json:"reward_trigger,omitempty"`
	SeasonId               *int32                   `protobuf:"varint,11,req,name=season_id" json:"season_id,omitempty"`
	MyRecord               *TavernBrawlPlayerRecord `protobuf:"bytes,105,req,name=my_record" json:"my_record,omitempty"`
	XXX_unrecognized       []byte                   `json:"-"`
}

func (m *TavernBrawlSpec) Reset()         { *m = TavernBrawlSpec{} }
func (m *TavernBrawlSpec) String() string { return proto.CompactTextString(m) }
func (*TavernBrawlSpec) ProtoMessage()    {}

const Default_TavernBrawlSpec_RewardTrigger RewardTrigger = RewardTrigger_REWARD_TRIGGER_UNKNOWN

func (m *TavernBrawlSpec) GetEndSecondsFromNow() uint64 {
	if m != nil && m.EndSecondsFromNow != nil {
		return *m.EndSecondsFromNow
	}
	return 0
}

func (m *TavernBrawlSpec) GetScenarioId() int32 {
	if m != nil && m.ScenarioId != nil {
		return *m.ScenarioId
	}
	return 0
}

func (m *TavernBrawlSpec) GetScenarioRecordByteSize() uint32 {
	if m != nil && m.ScenarioRecordByteSize != nil {
		return *m.ScenarioRecordByteSize
	}
	return 0
}

func (m *TavernBrawlSpec) GetScenarioRecordHash() []byte {
	if m != nil {
		return m.ScenarioRecordHash
	}
	return nil
}

func (m *TavernBrawlSpec) GetRewardType() RewardType {
	if m != nil && m.RewardType != nil {
		return *m.RewardType
	}
	return RewardType_REWARD_UNKNOWN
}

func (m *TavernBrawlSpec) GetRewardData1() int64 {
	if m != nil && m.RewardData1 != nil {
		return *m.RewardData1
	}
	return 0
}

func (m *TavernBrawlSpec) GetRewardData2() int64 {
	if m != nil && m.RewardData2 != nil {
		return *m.RewardData2
	}
	return 0
}

func (m *TavernBrawlSpec) GetRewardTrigger() RewardTrigger {
	if m != nil && m.RewardTrigger != nil {
		return *m.RewardTrigger
	}
	return Default_TavernBrawlSpec_RewardTrigger
}

func (m *TavernBrawlSpec) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *TavernBrawlSpec) GetMyRecord() *TavernBrawlPlayerRecord {
	if m != nil {
		return m.MyRecord
	}
	return nil
}

type TavernBrawlPlayerRecord struct {
	RewardProgress   *int32 `protobuf:"varint,1,req,name=reward_progress" json:"reward_progress,omitempty"`
	GamesPlayed      *int32 `protobuf:"varint,2,opt,name=games_played" json:"games_played,omitempty"`
	GamesWon         *int32 `protobuf:"varint,3,req,name=games_won" json:"games_won,omitempty"`
	WinStreak        *int32 `protobuf:"varint,4,opt,name=win_streak" json:"win_streak,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TavernBrawlPlayerRecord) Reset()         { *m = TavernBrawlPlayerRecord{} }
func (m *TavernBrawlPlayerRecord) String() string { return proto.CompactTextString(m) }
func (*TavernBrawlPlayerRecord) ProtoMessage()    {}

func (m *TavernBrawlPlayerRecord) GetRewardProgress() int32 {
	if m != nil && m.RewardProgress != nil {
		return *m.RewardProgress
	}
	return 0
}

func (m *TavernBrawlPlayerRecord) GetGamesPlayed() int32 {
	if m != nil && m.GamesPlayed != nil {
		return *m.GamesPlayed
	}
	return 0
}

func (m *TavernBrawlPlayerRecord) GetGamesWon() int32 {
	if m != nil && m.GamesWon != nil {
		return *m.GamesWon
	}
	return 0
}

func (m *TavernBrawlPlayerRecord) GetWinStreak() int32 {
	if m != nil && m.WinStreak != nil {
		return *m.WinStreak
	}
	return 0
}

func init() {
	proto.RegisterEnum("shared.GameType", GameType_name, GameType_value)
	proto.RegisterEnum("shared.BnetGameType", BnetGameType_name, BnetGameType_value)
	proto.RegisterEnum("shared.DeckType", DeckType_name, DeckType_value)
	proto.RegisterEnum("shared.RuleType", RuleType_name, RuleType_value)
	proto.RegisterEnum("shared.RewardType", RewardType_name, RewardType_value)
	proto.RegisterEnum("shared.RewardTrigger", RewardTrigger_name, RewardTrigger_value)
	proto.RegisterEnum("shared.DatabaseResult", DatabaseResult_name, DatabaseResult_value)
	proto.RegisterEnum("shared.BattlePayProvider", BattlePayProvider_name, BattlePayProvider_value)
	proto.RegisterEnum("shared.AssetType", AssetType_name, AssetType_value)
	proto.RegisterEnum("shared.DatabaseAction", DatabaseAction_name, DatabaseAction_value)
	proto.RegisterEnum("shared.ProfileNoticeMedal_NoticeID", ProfileNoticeMedal_NoticeID_name, ProfileNoticeMedal_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeRewardBooster_NoticeID", ProfileNoticeRewardBooster_NoticeID_name, ProfileNoticeRewardBooster_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeRewardCard_NoticeID", ProfileNoticeRewardCard_NoticeID_name, ProfileNoticeRewardCard_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeDisconnectedGameResult_GameResult", ProfileNoticeDisconnectedGameResult_GameResult_name, ProfileNoticeDisconnectedGameResult_GameResult_value)
	proto.RegisterEnum("shared.ProfileNoticeDisconnectedGameResult_PlayerResult", ProfileNoticeDisconnectedGameResult_PlayerResult_name, ProfileNoticeDisconnectedGameResult_PlayerResult_value)
	proto.RegisterEnum("shared.ProfileNoticeDisconnectedGameResult_NoticeID", ProfileNoticeDisconnectedGameResult_NoticeID_name, ProfileNoticeDisconnectedGameResult_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticePreconDeck_NoticeID", ProfileNoticePreconDeck_NoticeID_name, ProfileNoticePreconDeck_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeRewardDust_NoticeID", ProfileNoticeRewardDust_NoticeID_name, ProfileNoticeRewardDust_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeRewardMount_NoticeID", ProfileNoticeRewardMount_NoticeID_name, ProfileNoticeRewardMount_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeRewardForge_NoticeID", ProfileNoticeRewardForge_NoticeID_name, ProfileNoticeRewardForge_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeRewardGold_NoticeID", ProfileNoticeRewardGold_NoticeID_name, ProfileNoticeRewardGold_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticePurchase_NoticeID", ProfileNoticePurchase_NoticeID_name, ProfileNoticePurchase_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeCardBack_NoticeID", ProfileNoticeCardBack_NoticeID_name, ProfileNoticeCardBack_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeBonusStars_NoticeID", ProfileNoticeBonusStars_NoticeID_name, ProfileNoticeBonusStars_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeRewardCard2X_NoticeID", ProfileNoticeRewardCard2X_NoticeID_name, ProfileNoticeRewardCard2X_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeAdventureProgress_NoticeID", ProfileNoticeAdventureProgress_NoticeID_name, ProfileNoticeAdventureProgress_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeLevelUp_NoticeID", ProfileNoticeLevelUp_NoticeID_name, ProfileNoticeLevelUp_NoticeID_value)
	proto.RegisterEnum("shared.ProfileNoticeAccountLicense_NoticeID", ProfileNoticeAccountLicense_NoticeID_name, ProfileNoticeAccountLicense_NoticeID_value)
	proto.RegisterEnum("shared.DeckInfo_ValidityFlags", DeckInfo_ValidityFlags_name, DeckInfo_ValidityFlags_value)
	proto.RegisterEnum("shared.AdventureProgress_Flags", AdventureProgress_Flags_name, AdventureProgress_Flags_value)
	proto.RegisterEnum("shared.AccountLicenseInfo_Flags", AccountLicenseInfo_Flags_name, AccountLicenseInfo_Flags_value)
}
