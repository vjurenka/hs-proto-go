// Code generated by protoc-gen-go.
// source: github.com/vjurenka/hs-proto-go/pegasus/util/util.proto
// DO NOT EDIT!

/*
Package util is a generated protocol buffer package.

It is generated from these files:
	github.com/vjurenka/hs-proto-go/pegasus/util/util.proto

It has these top-level messages:
	ClientOption
	PurchaseError
	NearbyPlayer
	SpecialEventTiming
	CardValue
	Achieve
	AdventureOptions
	ProfileNotice
	BoosterTally
	BoosterCard
	MedalHistoryInfo
	CardUseCount
	BundleItem
	Bundle
	GoldCostBooster
	PlayerRecord
	NextHeroLevelReward
	HeroXPInfo
	AssetResponse
	DeckSetData
	ValidateAchieve
	UpdateLogin
	DevBnetIdentify
	SetOptions
	GetOptions
	GetAccountInfo
	GetDeck
	CreateDeck
	DeleteDeck
	RenameDeck
	AckNotice
	OpenBooster
	Subscribe
	Unsubscribe
	OneClientTracking
	ClientTracking
	SetProgress
	AckCardSeen
	CardBacks
	DraftBegin
	DraftRetire
	DraftAckRewards
	DraftGetPicksAndContents
	DraftMakePick
	GetAchieves
	AckAchieveProgress
	BuySellCard
	GetPurchaseMethod
	DoPurchase
	CancelPurchase
	CheckAccountLicenses
	CheckGameLicenses
	GetBattlePayConfig
	GetBattlePayStatus
	CancelQuest
	MassDisenchantRequest
	PurchaseWithGold
	SetCardBack
	ThirdPartyReceiptData
	SubmitThirdPartyReceipt
	GetThirdPartyPurchaseStatus
	CheckAccountLicenseAchieve
	TriggerLaunchDayEvent
	GetAssetsVersion
	GetAdventureProgress
	SetAdventureOptions
	StartThirdPartyPurchase
	SetFavoriteHero
	AssetRequestKey
	GetAssetRequest
	DebugCommandRequest
	NotSoMassiveLoginReply
	UpdateLoginComplete
	AckWingProgress
	AcknowledgeBanner
	Disconnected
	ValidateAchieveResponse
	PlayQueue
	GuardianVars
	ArcaneDustBalance
	GoldBalance
	CardValues
	BoughtSoldCard
	NOP
	Achieves
	DraftError
	DraftBeginning
	DraftRetired
	DraftRewardsAcked
	DraftChoicesAndContents
	DraftChosen
	ClientOptions
	ProfileDeckLimit
	ProfileProgress
	ProfileNotices
	DeckList
	Collection
	DeckContents
	DBAction
	DeckCreated
	DeckDeleted
	DeckRenamed
	BoosterList
	BoosterTallyList
	BoosterContent
	MedalInfo
	MedalHistory
	GamesInfo
	PurchaseMethod
	PurchaseResponse
	BattlePayConfigResponse
	BattlePayStatusResponse
	MassDisenchantResponse
	PlayerRecords
	RewardProgress
	CancelPurchaseResponse
	PurchaseWithGoldResponse
	CancelQuestResponse
	HeroXP
	SetCardBackResponse
	ThirdPartyPurchaseStatusResponse
	SetProgressResponse
	TriggerEventResponse
	AssetsVersionResponse
	AdventureProgressResponse
	AccountLicenseAchieveResponse
	SubscribeResponse
	TavernBrawlInfo
	TavernBrawlPlayerRecordResponse
	FavoriteHeroesResponse
	SetFavoriteHeroResponse
	GetAssetResponse
	DebugCommandResponse
	AccountLicensesInfoResponse
	GenericData
	GenericResponse
	GenericRequest
	GenericRequestList
	ClientRequestResponse
	CheckAccountLicensesResponse
	CheckGameLicensesResponse
*/
package util

import proto "github.com/golang/protobuf/proto"
import math "math"
import shared "github.com/vjurenka/hs-proto-go/pegasus/shared"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ProductType int32

const (
	ProductType_PRODUCT_TYPE_UNKNOWN   ProductType = 0
	ProductType_PRODUCT_TYPE_BOOSTER   ProductType = 1
	ProductType_PRODUCT_TYPE_DRAFT     ProductType = 2
	ProductType_PRODUCT_TYPE_NAXX      ProductType = 3
	ProductType_PRODUCT_TYPE_BRM       ProductType = 4
	ProductType_PRODUCT_TYPE_CARD_BACK ProductType = 5
	ProductType_PRODUCT_TYPE_HERO      ProductType = 6
	ProductType_PRODUCT_TYPE_LOE       ProductType = 7
)

var ProductType_name = map[int32]string{
	0: "PRODUCT_TYPE_UNKNOWN",
	1: "PRODUCT_TYPE_BOOSTER",
	2: "PRODUCT_TYPE_DRAFT",
	3: "PRODUCT_TYPE_NAXX",
	4: "PRODUCT_TYPE_BRM",
	5: "PRODUCT_TYPE_CARD_BACK",
	6: "PRODUCT_TYPE_HERO",
	7: "PRODUCT_TYPE_LOE",
}
var ProductType_value = map[string]int32{
	"PRODUCT_TYPE_UNKNOWN":   0,
	"PRODUCT_TYPE_BOOSTER":   1,
	"PRODUCT_TYPE_DRAFT":     2,
	"PRODUCT_TYPE_NAXX":      3,
	"PRODUCT_TYPE_BRM":       4,
	"PRODUCT_TYPE_CARD_BACK": 5,
	"PRODUCT_TYPE_HERO":      6,
	"PRODUCT_TYPE_LOE":       7,
}

func (x ProductType) Enum() *ProductType {
	p := new(ProductType)
	*p = x
	return p
}
func (x ProductType) String() string {
	return proto.EnumName(ProductType_name, int32(x))
}
func (x *ProductType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProductType_value, data, "ProductType")
	if err != nil {
		return err
	}
	*x = ProductType(value)
	return nil
}

type PurchaseError_Error int32

const (
	PurchaseError_E_UNKNOWN                        PurchaseError_Error = -1
	PurchaseError_E_SUCCESS                        PurchaseError_Error = 0
	PurchaseError_E_STILL_IN_PROGRESS              PurchaseError_Error = 1
	PurchaseError_E_INVALID_BNET                   PurchaseError_Error = 2
	PurchaseError_E_SERVICE_NA                     PurchaseError_Error = 3
	PurchaseError_E_PURCHASE_IN_PROGRESS           PurchaseError_Error = 4
	PurchaseError_E_DATABASE                       PurchaseError_Error = 5
	PurchaseError_E_INVALID_QUANTITY               PurchaseError_Error = 6
	PurchaseError_E_DUPLICATE_LICENSE              PurchaseError_Error = 7
	PurchaseError_E_REQUEST_NOT_SENT               PurchaseError_Error = 8
	PurchaseError_E_NO_ACTIVE_BPAY                 PurchaseError_Error = 9
	PurchaseError_E_FAILED_RISK                    PurchaseError_Error = 10
	PurchaseError_E_CANCELED                       PurchaseError_Error = 11
	PurchaseError_E_WAIT_MOP                       PurchaseError_Error = 12
	PurchaseError_E_WAIT_CLIENT_CONFIRM            PurchaseError_Error = 13
	PurchaseError_E_WAIT_CLIENT_RISK               PurchaseError_Error = 14
	PurchaseError_E_PRODUCT_NA                     PurchaseError_Error = 15
	PurchaseError_E_RISK_TIMEOUT                   PurchaseError_Error = 16
	PurchaseError_E_PRODUCT_ALREADY_OWNED          PurchaseError_Error = 17
	PurchaseError_E_WAIT_THIRD_PARTY_RECEIPT       PurchaseError_Error = 18
	PurchaseError_E_PRODUCT_EVENT_HAS_ENDED        PurchaseError_Error = 19
	PurchaseError_E_BP_GENERIC_FAIL                PurchaseError_Error = 100
	PurchaseError_E_BP_INVALID_CC_EXPIRY           PurchaseError_Error = 101
	PurchaseError_E_BP_RISK_ERROR                  PurchaseError_Error = 102
	PurchaseError_E_BP_NO_VALID_PAYMENT            PurchaseError_Error = 103
	PurchaseError_E_BP_PAYMENT_AUTH                PurchaseError_Error = 104
	PurchaseError_E_BP_PROVIDER_DENIED             PurchaseError_Error = 105
	PurchaseError_E_BP_PURCHASE_BAN                PurchaseError_Error = 106
	PurchaseError_E_BP_SPENDING_LIMIT              PurchaseError_Error = 107
	PurchaseError_E_BP_PARENTAL_CONTROL            PurchaseError_Error = 108
	PurchaseError_E_BP_THROTTLED                   PurchaseError_Error = 109
	PurchaseError_E_BP_THIRD_PARTY_BAD_RECEIPT     PurchaseError_Error = 110
	PurchaseError_E_BP_THIRD_PARTY_RECEIPT_USED    PurchaseError_Error = 111
	PurchaseError_E_BP_PRODUCT_UNIQUENESS_VIOLATED PurchaseError_Error = 112
	PurchaseError_E_BP_REGION_IS_DOWN              PurchaseError_Error = 113
)

var PurchaseError_Error_name = map[int32]string{
	-1:  "E_UNKNOWN",
	0:   "E_SUCCESS",
	1:   "E_STILL_IN_PROGRESS",
	2:   "E_INVALID_BNET",
	3:   "E_SERVICE_NA",
	4:   "E_PURCHASE_IN_PROGRESS",
	5:   "E_DATABASE",
	6:   "E_INVALID_QUANTITY",
	7:   "E_DUPLICATE_LICENSE",
	8:   "E_REQUEST_NOT_SENT",
	9:   "E_NO_ACTIVE_BPAY",
	10:  "E_FAILED_RISK",
	11:  "E_CANCELED",
	12:  "E_WAIT_MOP",
	13:  "E_WAIT_CLIENT_CONFIRM",
	14:  "E_WAIT_CLIENT_RISK",
	15:  "E_PRODUCT_NA",
	16:  "E_RISK_TIMEOUT",
	17:  "E_PRODUCT_ALREADY_OWNED",
	18:  "E_WAIT_THIRD_PARTY_RECEIPT",
	19:  "E_PRODUCT_EVENT_HAS_ENDED",
	100: "E_BP_GENERIC_FAIL",
	101: "E_BP_INVALID_CC_EXPIRY",
	102: "E_BP_RISK_ERROR",
	103: "E_BP_NO_VALID_PAYMENT",
	104: "E_BP_PAYMENT_AUTH",
	105: "E_BP_PROVIDER_DENIED",
	106: "E_BP_PURCHASE_BAN",
	107: "E_BP_SPENDING_LIMIT",
	108: "E_BP_PARENTAL_CONTROL",
	109: "E_BP_THROTTLED",
	110: "E_BP_THIRD_PARTY_BAD_RECEIPT",
	111: "E_BP_THIRD_PARTY_RECEIPT_USED",
	112: "E_BP_PRODUCT_UNIQUENESS_VIOLATED",
	113: "E_BP_REGION_IS_DOWN",
}
var PurchaseError_Error_value = map[string]int32{
	"E_UNKNOWN":                        -1,
	"E_SUCCESS":                        0,
	"E_STILL_IN_PROGRESS":              1,
	"E_INVALID_BNET":                   2,
	"E_SERVICE_NA":                     3,
	"E_PURCHASE_IN_PROGRESS":           4,
	"E_DATABASE":                       5,
	"E_INVALID_QUANTITY":               6,
	"E_DUPLICATE_LICENSE":              7,
	"E_REQUEST_NOT_SENT":               8,
	"E_NO_ACTIVE_BPAY":                 9,
	"E_FAILED_RISK":                    10,
	"E_CANCELED":                       11,
	"E_WAIT_MOP":                       12,
	"E_WAIT_CLIENT_CONFIRM":            13,
	"E_WAIT_CLIENT_RISK":               14,
	"E_PRODUCT_NA":                     15,
	"E_RISK_TIMEOUT":                   16,
	"E_PRODUCT_ALREADY_OWNED":          17,
	"E_WAIT_THIRD_PARTY_RECEIPT":       18,
	"E_PRODUCT_EVENT_HAS_ENDED":        19,
	"E_BP_GENERIC_FAIL":                100,
	"E_BP_INVALID_CC_EXPIRY":           101,
	"E_BP_RISK_ERROR":                  102,
	"E_BP_NO_VALID_PAYMENT":            103,
	"E_BP_PAYMENT_AUTH":                104,
	"E_BP_PROVIDER_DENIED":             105,
	"E_BP_PURCHASE_BAN":                106,
	"E_BP_SPENDING_LIMIT":              107,
	"E_BP_PARENTAL_CONTROL":            108,
	"E_BP_THROTTLED":                   109,
	"E_BP_THIRD_PARTY_BAD_RECEIPT":     110,
	"E_BP_THIRD_PARTY_RECEIPT_USED":    111,
	"E_BP_PRODUCT_UNIQUENESS_VIOLATED": 112,
	"E_BP_REGION_IS_DOWN":              113,
}

func (x PurchaseError_Error) Enum() *PurchaseError_Error {
	p := new(PurchaseError_Error)
	*p = x
	return p
}
func (x PurchaseError_Error) String() string {
	return proto.EnumName(PurchaseError_Error_name, int32(x))
}
func (x *PurchaseError_Error) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseError_Error_value, data, "PurchaseError_Error")
	if err != nil {
		return err
	}
	*x = PurchaseError_Error(value)
	return nil
}

type DeckSetData_PacketID int32

const (
	DeckSetData_ID     DeckSetData_PacketID = 222
	DeckSetData_System DeckSetData_PacketID = 0
)

var DeckSetData_PacketID_name = map[int32]string{
	222: "ID",
	0:   "System",
}
var DeckSetData_PacketID_value = map[string]int32{
	"ID":     222,
	"System": 0,
}

func (x DeckSetData_PacketID) Enum() *DeckSetData_PacketID {
	p := new(DeckSetData_PacketID)
	*p = x
	return p
}
func (x DeckSetData_PacketID) String() string {
	return proto.EnumName(DeckSetData_PacketID_name, int32(x))
}
func (x *DeckSetData_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckSetData_PacketID_value, data, "DeckSetData_PacketID")
	if err != nil {
		return err
	}
	*x = DeckSetData_PacketID(value)
	return nil
}

type ValidateAchieve_PacketID int32

const (
	ValidateAchieve_ID     ValidateAchieve_PacketID = 284
	ValidateAchieve_System ValidateAchieve_PacketID = 0
)

var ValidateAchieve_PacketID_name = map[int32]string{
	284: "ID",
	0:   "System",
}
var ValidateAchieve_PacketID_value = map[string]int32{
	"ID":     284,
	"System": 0,
}

func (x ValidateAchieve_PacketID) Enum() *ValidateAchieve_PacketID {
	p := new(ValidateAchieve_PacketID)
	*p = x
	return p
}
func (x ValidateAchieve_PacketID) String() string {
	return proto.EnumName(ValidateAchieve_PacketID_name, int32(x))
}
func (x *ValidateAchieve_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ValidateAchieve_PacketID_value, data, "ValidateAchieve_PacketID")
	if err != nil {
		return err
	}
	*x = ValidateAchieve_PacketID(value)
	return nil
}

type UpdateLogin_PacketID int32

const (
	UpdateLogin_ID     UpdateLogin_PacketID = 205
	UpdateLogin_System UpdateLogin_PacketID = 0
)

var UpdateLogin_PacketID_name = map[int32]string{
	205: "ID",
	0:   "System",
}
var UpdateLogin_PacketID_value = map[string]int32{
	"ID":     205,
	"System": 0,
}

func (x UpdateLogin_PacketID) Enum() *UpdateLogin_PacketID {
	p := new(UpdateLogin_PacketID)
	*p = x
	return p
}
func (x UpdateLogin_PacketID) String() string {
	return proto.EnumName(UpdateLogin_PacketID_name, int32(x))
}
func (x *UpdateLogin_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateLogin_PacketID_value, data, "UpdateLogin_PacketID")
	if err != nil {
		return err
	}
	*x = UpdateLogin_PacketID(value)
	return nil
}

type DevBnetIdentify_PacketID int32

const (
	DevBnetIdentify_ID     DevBnetIdentify_PacketID = 259
	DevBnetIdentify_System DevBnetIdentify_PacketID = 0
)

var DevBnetIdentify_PacketID_name = map[int32]string{
	259: "ID",
	0:   "System",
}
var DevBnetIdentify_PacketID_value = map[string]int32{
	"ID":     259,
	"System": 0,
}

func (x DevBnetIdentify_PacketID) Enum() *DevBnetIdentify_PacketID {
	p := new(DevBnetIdentify_PacketID)
	*p = x
	return p
}
func (x DevBnetIdentify_PacketID) String() string {
	return proto.EnumName(DevBnetIdentify_PacketID_name, int32(x))
}
func (x *DevBnetIdentify_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DevBnetIdentify_PacketID_value, data, "DevBnetIdentify_PacketID")
	if err != nil {
		return err
	}
	*x = DevBnetIdentify_PacketID(value)
	return nil
}

type SetOptions_PacketID int32

const (
	SetOptions_ID     SetOptions_PacketID = 239
	SetOptions_System SetOptions_PacketID = 0
)

var SetOptions_PacketID_name = map[int32]string{
	239: "ID",
	0:   "System",
}
var SetOptions_PacketID_value = map[string]int32{
	"ID":     239,
	"System": 0,
}

func (x SetOptions_PacketID) Enum() *SetOptions_PacketID {
	p := new(SetOptions_PacketID)
	*p = x
	return p
}
func (x SetOptions_PacketID) String() string {
	return proto.EnumName(SetOptions_PacketID_name, int32(x))
}
func (x *SetOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetOptions_PacketID_value, data, "SetOptions_PacketID")
	if err != nil {
		return err
	}
	*x = SetOptions_PacketID(value)
	return nil
}

type GetOptions_PacketID int32

const (
	GetOptions_ID     GetOptions_PacketID = 240
	GetOptions_System GetOptions_PacketID = 0
)

var GetOptions_PacketID_name = map[int32]string{
	240: "ID",
	0:   "System",
}
var GetOptions_PacketID_value = map[string]int32{
	"ID":     240,
	"System": 0,
}

func (x GetOptions_PacketID) Enum() *GetOptions_PacketID {
	p := new(GetOptions_PacketID)
	*p = x
	return p
}
func (x GetOptions_PacketID) String() string {
	return proto.EnumName(GetOptions_PacketID_name, int32(x))
}
func (x *GetOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetOptions_PacketID_value, data, "GetOptions_PacketID")
	if err != nil {
		return err
	}
	*x = GetOptions_PacketID(value)
	return nil
}

type GetAccountInfo_Request int32

const (
	GetAccountInfo_LAST_LOGIN           GetAccountInfo_Request = 1
	GetAccountInfo_DECK_LIST            GetAccountInfo_Request = 2
	GetAccountInfo_COLLECTION           GetAccountInfo_Request = 3
	GetAccountInfo_MEDAL_INFO           GetAccountInfo_Request = 4
	GetAccountInfo_MEDAL_HISTORY        GetAccountInfo_Request = 5
	GetAccountInfo_BOOSTERS             GetAccountInfo_Request = 6
	GetAccountInfo_CARD_BACKS           GetAccountInfo_Request = 7
	GetAccountInfo_PLAYER_RECORD        GetAccountInfo_Request = 8
	GetAccountInfo_GAMES_PLAYED         GetAccountInfo_Request = 9
	GetAccountInfo_DECK_LIMIT           GetAccountInfo_Request = 10
	GetAccountInfo_CAMPAIGN_INFO        GetAccountInfo_Request = 11
	GetAccountInfo_NOTICES              GetAccountInfo_Request = 12
	GetAccountInfo_MOTD                 GetAccountInfo_Request = 13
	GetAccountInfo_CLIENT_OPTIONS       GetAccountInfo_Request = 14
	GetAccountInfo_CARD_VALUES          GetAccountInfo_Request = 15
	GetAccountInfo_DISCONNECTED         GetAccountInfo_Request = 16
	GetAccountInfo_ARCANE_DUST_BALANCE  GetAccountInfo_Request = 17
	GetAccountInfo_FEATURES             GetAccountInfo_Request = 18
	GetAccountInfo_REWARD_PROGRESS      GetAccountInfo_Request = 19
	GetAccountInfo_GOLD_BALANCE         GetAccountInfo_Request = 20
	GetAccountInfo_HERO_XP              GetAccountInfo_Request = 21
	GetAccountInfo_PVP_QUEUE            GetAccountInfo_Request = 22
	GetAccountInfo_NOT_SO_MASSIVE_LOGIN GetAccountInfo_Request = 23
	GetAccountInfo_BOOSTER_TALLY        GetAccountInfo_Request = 24
	GetAccountInfo_TAVERN_BRAWL_INFO    GetAccountInfo_Request = 25
	GetAccountInfo_TAVERN_BRAWL_RECORD  GetAccountInfo_Request = 26
	GetAccountInfo_FAVORITE_HEROES      GetAccountInfo_Request = 27
	GetAccountInfo_ACCOUNT_LICENSES     GetAccountInfo_Request = 28
)

var GetAccountInfo_Request_name = map[int32]string{
	1:  "LAST_LOGIN",
	2:  "DECK_LIST",
	3:  "COLLECTION",
	4:  "MEDAL_INFO",
	5:  "MEDAL_HISTORY",
	6:  "BOOSTERS",
	7:  "CARD_BACKS",
	8:  "PLAYER_RECORD",
	9:  "GAMES_PLAYED",
	10: "DECK_LIMIT",
	11: "CAMPAIGN_INFO",
	12: "NOTICES",
	13: "MOTD",
	14: "CLIENT_OPTIONS",
	15: "CARD_VALUES",
	16: "DISCONNECTED",
	17: "ARCANE_DUST_BALANCE",
	18: "FEATURES",
	19: "REWARD_PROGRESS",
	20: "GOLD_BALANCE",
	21: "HERO_XP",
	22: "PVP_QUEUE",
	23: "NOT_SO_MASSIVE_LOGIN",
	24: "BOOSTER_TALLY",
	25: "TAVERN_BRAWL_INFO",
	26: "TAVERN_BRAWL_RECORD",
	27: "FAVORITE_HEROES",
	28: "ACCOUNT_LICENSES",
}
var GetAccountInfo_Request_value = map[string]int32{
	"LAST_LOGIN":           1,
	"DECK_LIST":            2,
	"COLLECTION":           3,
	"MEDAL_INFO":           4,
	"MEDAL_HISTORY":        5,
	"BOOSTERS":             6,
	"CARD_BACKS":           7,
	"PLAYER_RECORD":        8,
	"GAMES_PLAYED":         9,
	"DECK_LIMIT":           10,
	"CAMPAIGN_INFO":        11,
	"NOTICES":              12,
	"MOTD":                 13,
	"CLIENT_OPTIONS":       14,
	"CARD_VALUES":          15,
	"DISCONNECTED":         16,
	"ARCANE_DUST_BALANCE":  17,
	"FEATURES":             18,
	"REWARD_PROGRESS":      19,
	"GOLD_BALANCE":         20,
	"HERO_XP":              21,
	"PVP_QUEUE":            22,
	"NOT_SO_MASSIVE_LOGIN": 23,
	"BOOSTER_TALLY":        24,
	"TAVERN_BRAWL_INFO":    25,
	"TAVERN_BRAWL_RECORD":  26,
	"FAVORITE_HEROES":      27,
	"ACCOUNT_LICENSES":     28,
}

func (x GetAccountInfo_Request) Enum() *GetAccountInfo_Request {
	p := new(GetAccountInfo_Request)
	*p = x
	return p
}
func (x GetAccountInfo_Request) String() string {
	return proto.EnumName(GetAccountInfo_Request_name, int32(x))
}
func (x *GetAccountInfo_Request) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAccountInfo_Request_value, data, "GetAccountInfo_Request")
	if err != nil {
		return err
	}
	*x = GetAccountInfo_Request(value)
	return nil
}

type GetAccountInfo_PacketID int32

const (
	GetAccountInfo_ID     GetAccountInfo_PacketID = 201
	GetAccountInfo_System GetAccountInfo_PacketID = 0
)

var GetAccountInfo_PacketID_name = map[int32]string{
	201: "ID",
	0:   "System",
}
var GetAccountInfo_PacketID_value = map[string]int32{
	"ID":     201,
	"System": 0,
}

func (x GetAccountInfo_PacketID) Enum() *GetAccountInfo_PacketID {
	p := new(GetAccountInfo_PacketID)
	*p = x
	return p
}
func (x GetAccountInfo_PacketID) String() string {
	return proto.EnumName(GetAccountInfo_PacketID_name, int32(x))
}
func (x *GetAccountInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAccountInfo_PacketID_value, data, "GetAccountInfo_PacketID")
	if err != nil {
		return err
	}
	*x = GetAccountInfo_PacketID(value)
	return nil
}

type GetDeck_PacketID int32

const (
	GetDeck_ID     GetDeck_PacketID = 214
	GetDeck_System GetDeck_PacketID = 0
)

var GetDeck_PacketID_name = map[int32]string{
	214: "ID",
	0:   "System",
}
var GetDeck_PacketID_value = map[string]int32{
	"ID":     214,
	"System": 0,
}

func (x GetDeck_PacketID) Enum() *GetDeck_PacketID {
	p := new(GetDeck_PacketID)
	*p = x
	return p
}
func (x GetDeck_PacketID) String() string {
	return proto.EnumName(GetDeck_PacketID_name, int32(x))
}
func (x *GetDeck_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetDeck_PacketID_value, data, "GetDeck_PacketID")
	if err != nil {
		return err
	}
	*x = GetDeck_PacketID(value)
	return nil
}

type CreateDeck_PacketID int32

const (
	CreateDeck_ID     CreateDeck_PacketID = 209
	CreateDeck_System CreateDeck_PacketID = 0
)

var CreateDeck_PacketID_name = map[int32]string{
	209: "ID",
	0:   "System",
}
var CreateDeck_PacketID_value = map[string]int32{
	"ID":     209,
	"System": 0,
}

func (x CreateDeck_PacketID) Enum() *CreateDeck_PacketID {
	p := new(CreateDeck_PacketID)
	*p = x
	return p
}
func (x CreateDeck_PacketID) String() string {
	return proto.EnumName(CreateDeck_PacketID_name, int32(x))
}
func (x *CreateDeck_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CreateDeck_PacketID_value, data, "CreateDeck_PacketID")
	if err != nil {
		return err
	}
	*x = CreateDeck_PacketID(value)
	return nil
}

type DeleteDeck_PacketID int32

const (
	DeleteDeck_ID     DeleteDeck_PacketID = 210
	DeleteDeck_System DeleteDeck_PacketID = 0
)

var DeleteDeck_PacketID_name = map[int32]string{
	210: "ID",
	0:   "System",
}
var DeleteDeck_PacketID_value = map[string]int32{
	"ID":     210,
	"System": 0,
}

func (x DeleteDeck_PacketID) Enum() *DeleteDeck_PacketID {
	p := new(DeleteDeck_PacketID)
	*p = x
	return p
}
func (x DeleteDeck_PacketID) String() string {
	return proto.EnumName(DeleteDeck_PacketID_name, int32(x))
}
func (x *DeleteDeck_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeleteDeck_PacketID_value, data, "DeleteDeck_PacketID")
	if err != nil {
		return err
	}
	*x = DeleteDeck_PacketID(value)
	return nil
}

type RenameDeck_PacketID int32

const (
	RenameDeck_ID     RenameDeck_PacketID = 211
	RenameDeck_System RenameDeck_PacketID = 0
)

var RenameDeck_PacketID_name = map[int32]string{
	211: "ID",
	0:   "System",
}
var RenameDeck_PacketID_value = map[string]int32{
	"ID":     211,
	"System": 0,
}

func (x RenameDeck_PacketID) Enum() *RenameDeck_PacketID {
	p := new(RenameDeck_PacketID)
	*p = x
	return p
}
func (x RenameDeck_PacketID) String() string {
	return proto.EnumName(RenameDeck_PacketID_name, int32(x))
}
func (x *RenameDeck_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RenameDeck_PacketID_value, data, "RenameDeck_PacketID")
	if err != nil {
		return err
	}
	*x = RenameDeck_PacketID(value)
	return nil
}

type AckNotice_PacketID int32

const (
	AckNotice_ID     AckNotice_PacketID = 213
	AckNotice_System AckNotice_PacketID = 0
)

var AckNotice_PacketID_name = map[int32]string{
	213: "ID",
	0:   "System",
}
var AckNotice_PacketID_value = map[string]int32{
	"ID":     213,
	"System": 0,
}

func (x AckNotice_PacketID) Enum() *AckNotice_PacketID {
	p := new(AckNotice_PacketID)
	*p = x
	return p
}
func (x AckNotice_PacketID) String() string {
	return proto.EnumName(AckNotice_PacketID_name, int32(x))
}
func (x *AckNotice_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AckNotice_PacketID_value, data, "AckNotice_PacketID")
	if err != nil {
		return err
	}
	*x = AckNotice_PacketID(value)
	return nil
}

type OpenBooster_PacketID int32

const (
	OpenBooster_ID     OpenBooster_PacketID = 225
	OpenBooster_System OpenBooster_PacketID = 0
)

var OpenBooster_PacketID_name = map[int32]string{
	225: "ID",
	0:   "System",
}
var OpenBooster_PacketID_value = map[string]int32{
	"ID":     225,
	"System": 0,
}

func (x OpenBooster_PacketID) Enum() *OpenBooster_PacketID {
	p := new(OpenBooster_PacketID)
	*p = x
	return p
}
func (x OpenBooster_PacketID) String() string {
	return proto.EnumName(OpenBooster_PacketID_name, int32(x))
}
func (x *OpenBooster_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OpenBooster_PacketID_value, data, "OpenBooster_PacketID")
	if err != nil {
		return err
	}
	*x = OpenBooster_PacketID(value)
	return nil
}

type Subscribe_PacketID int32

const (
	Subscribe_ID Subscribe_PacketID = 314
)

var Subscribe_PacketID_name = map[int32]string{
	314: "ID",
}
var Subscribe_PacketID_value = map[string]int32{
	"ID": 314,
}

func (x Subscribe_PacketID) Enum() *Subscribe_PacketID {
	p := new(Subscribe_PacketID)
	*p = x
	return p
}
func (x Subscribe_PacketID) String() string {
	return proto.EnumName(Subscribe_PacketID_name, int32(x))
}
func (x *Subscribe_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Subscribe_PacketID_value, data, "Subscribe_PacketID")
	if err != nil {
		return err
	}
	*x = Subscribe_PacketID(value)
	return nil
}

type Unsubscribe_PacketID int32

const (
	Unsubscribe_ID Unsubscribe_PacketID = 329
)

var Unsubscribe_PacketID_name = map[int32]string{
	329: "ID",
}
var Unsubscribe_PacketID_value = map[string]int32{
	"ID": 329,
}

func (x Unsubscribe_PacketID) Enum() *Unsubscribe_PacketID {
	p := new(Unsubscribe_PacketID)
	*p = x
	return p
}
func (x Unsubscribe_PacketID) String() string {
	return proto.EnumName(Unsubscribe_PacketID_name, int32(x))
}
func (x *Unsubscribe_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Unsubscribe_PacketID_value, data, "Unsubscribe_PacketID")
	if err != nil {
		return err
	}
	*x = Unsubscribe_PacketID(value)
	return nil
}

type OneClientTracking_Level int32

const (
	OneClientTracking_L_INFO    OneClientTracking_Level = 1
	OneClientTracking_L_WARNING OneClientTracking_Level = 2
	OneClientTracking_L_ERROR   OneClientTracking_Level = 3
)

var OneClientTracking_Level_name = map[int32]string{
	1: "L_INFO",
	2: "L_WARNING",
	3: "L_ERROR",
}
var OneClientTracking_Level_value = map[string]int32{
	"L_INFO":    1,
	"L_WARNING": 2,
	"L_ERROR":   3,
}

func (x OneClientTracking_Level) Enum() *OneClientTracking_Level {
	p := new(OneClientTracking_Level)
	*p = x
	return p
}
func (x OneClientTracking_Level) String() string {
	return proto.EnumName(OneClientTracking_Level_name, int32(x))
}
func (x *OneClientTracking_Level) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OneClientTracking_Level_value, data, "OneClientTracking_Level")
	if err != nil {
		return err
	}
	*x = OneClientTracking_Level(value)
	return nil
}

type ClientTracking_PacketID int32

const (
	ClientTracking_ID     ClientTracking_PacketID = 228
	ClientTracking_System ClientTracking_PacketID = 0
)

var ClientTracking_PacketID_name = map[int32]string{
	228: "ID",
	0:   "System",
}
var ClientTracking_PacketID_value = map[string]int32{
	"ID":     228,
	"System": 0,
}

func (x ClientTracking_PacketID) Enum() *ClientTracking_PacketID {
	p := new(ClientTracking_PacketID)
	*p = x
	return p
}
func (x ClientTracking_PacketID) String() string {
	return proto.EnumName(ClientTracking_PacketID_name, int32(x))
}
func (x *ClientTracking_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientTracking_PacketID_value, data, "ClientTracking_PacketID")
	if err != nil {
		return err
	}
	*x = ClientTracking_PacketID(value)
	return nil
}

type SetProgress_PacketID int32

const (
	SetProgress_ID     SetProgress_PacketID = 230
	SetProgress_System SetProgress_PacketID = 0
)

var SetProgress_PacketID_name = map[int32]string{
	230: "ID",
	0:   "System",
}
var SetProgress_PacketID_value = map[string]int32{
	"ID":     230,
	"System": 0,
}

func (x SetProgress_PacketID) Enum() *SetProgress_PacketID {
	p := new(SetProgress_PacketID)
	*p = x
	return p
}
func (x SetProgress_PacketID) String() string {
	return proto.EnumName(SetProgress_PacketID_name, int32(x))
}
func (x *SetProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetProgress_PacketID_value, data, "SetProgress_PacketID")
	if err != nil {
		return err
	}
	*x = SetProgress_PacketID(value)
	return nil
}

type AckCardSeen_PacketID int32

const (
	AckCardSeen_ID     AckCardSeen_PacketID = 223
	AckCardSeen_System AckCardSeen_PacketID = 0
)

var AckCardSeen_PacketID_name = map[int32]string{
	223: "ID",
	0:   "System",
}
var AckCardSeen_PacketID_value = map[string]int32{
	"ID":     223,
	"System": 0,
}

func (x AckCardSeen_PacketID) Enum() *AckCardSeen_PacketID {
	p := new(AckCardSeen_PacketID)
	*p = x
	return p
}
func (x AckCardSeen_PacketID) String() string {
	return proto.EnumName(AckCardSeen_PacketID_name, int32(x))
}
func (x *AckCardSeen_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AckCardSeen_PacketID_value, data, "AckCardSeen_PacketID")
	if err != nil {
		return err
	}
	*x = AckCardSeen_PacketID(value)
	return nil
}

type CardBacks_PacketID int32

const (
	CardBacks_ID     CardBacks_PacketID = 236
	CardBacks_System CardBacks_PacketID = 0
)

var CardBacks_PacketID_name = map[int32]string{
	236: "ID",
	0:   "System",
}
var CardBacks_PacketID_value = map[string]int32{
	"ID":     236,
	"System": 0,
}

func (x CardBacks_PacketID) Enum() *CardBacks_PacketID {
	p := new(CardBacks_PacketID)
	*p = x
	return p
}
func (x CardBacks_PacketID) String() string {
	return proto.EnumName(CardBacks_PacketID_name, int32(x))
}
func (x *CardBacks_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardBacks_PacketID_value, data, "CardBacks_PacketID")
	if err != nil {
		return err
	}
	*x = CardBacks_PacketID(value)
	return nil
}

type DraftBegin_PacketID int32

const (
	DraftBegin_ID     DraftBegin_PacketID = 235
	DraftBegin_System DraftBegin_PacketID = 0
)

var DraftBegin_PacketID_name = map[int32]string{
	235: "ID",
	0:   "System",
}
var DraftBegin_PacketID_value = map[string]int32{
	"ID":     235,
	"System": 0,
}

func (x DraftBegin_PacketID) Enum() *DraftBegin_PacketID {
	p := new(DraftBegin_PacketID)
	*p = x
	return p
}
func (x DraftBegin_PacketID) String() string {
	return proto.EnumName(DraftBegin_PacketID_name, int32(x))
}
func (x *DraftBegin_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftBegin_PacketID_value, data, "DraftBegin_PacketID")
	if err != nil {
		return err
	}
	*x = DraftBegin_PacketID(value)
	return nil
}

type DraftRetire_PacketID int32

const (
	DraftRetire_ID     DraftRetire_PacketID = 242
	DraftRetire_System DraftRetire_PacketID = 0
)

var DraftRetire_PacketID_name = map[int32]string{
	242: "ID",
	0:   "System",
}
var DraftRetire_PacketID_value = map[string]int32{
	"ID":     242,
	"System": 0,
}

func (x DraftRetire_PacketID) Enum() *DraftRetire_PacketID {
	p := new(DraftRetire_PacketID)
	*p = x
	return p
}
func (x DraftRetire_PacketID) String() string {
	return proto.EnumName(DraftRetire_PacketID_name, int32(x))
}
func (x *DraftRetire_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftRetire_PacketID_value, data, "DraftRetire_PacketID")
	if err != nil {
		return err
	}
	*x = DraftRetire_PacketID(value)
	return nil
}

type DraftAckRewards_PacketID int32

const (
	DraftAckRewards_ID     DraftAckRewards_PacketID = 287
	DraftAckRewards_System DraftAckRewards_PacketID = 0
)

var DraftAckRewards_PacketID_name = map[int32]string{
	287: "ID",
	0:   "System",
}
var DraftAckRewards_PacketID_value = map[string]int32{
	"ID":     287,
	"System": 0,
}

func (x DraftAckRewards_PacketID) Enum() *DraftAckRewards_PacketID {
	p := new(DraftAckRewards_PacketID)
	*p = x
	return p
}
func (x DraftAckRewards_PacketID) String() string {
	return proto.EnumName(DraftAckRewards_PacketID_name, int32(x))
}
func (x *DraftAckRewards_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftAckRewards_PacketID_value, data, "DraftAckRewards_PacketID")
	if err != nil {
		return err
	}
	*x = DraftAckRewards_PacketID(value)
	return nil
}

type DraftGetPicksAndContents_PacketID int32

const (
	DraftGetPicksAndContents_ID     DraftGetPicksAndContents_PacketID = 244
	DraftGetPicksAndContents_System DraftGetPicksAndContents_PacketID = 0
)

var DraftGetPicksAndContents_PacketID_name = map[int32]string{
	244: "ID",
	0:   "System",
}
var DraftGetPicksAndContents_PacketID_value = map[string]int32{
	"ID":     244,
	"System": 0,
}

func (x DraftGetPicksAndContents_PacketID) Enum() *DraftGetPicksAndContents_PacketID {
	p := new(DraftGetPicksAndContents_PacketID)
	*p = x
	return p
}
func (x DraftGetPicksAndContents_PacketID) String() string {
	return proto.EnumName(DraftGetPicksAndContents_PacketID_name, int32(x))
}
func (x *DraftGetPicksAndContents_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftGetPicksAndContents_PacketID_value, data, "DraftGetPicksAndContents_PacketID")
	if err != nil {
		return err
	}
	*x = DraftGetPicksAndContents_PacketID(value)
	return nil
}

type DraftMakePick_PacketID int32

const (
	DraftMakePick_ID     DraftMakePick_PacketID = 245
	DraftMakePick_System DraftMakePick_PacketID = 0
)

var DraftMakePick_PacketID_name = map[int32]string{
	245: "ID",
	0:   "System",
}
var DraftMakePick_PacketID_value = map[string]int32{
	"ID":     245,
	"System": 0,
}

func (x DraftMakePick_PacketID) Enum() *DraftMakePick_PacketID {
	p := new(DraftMakePick_PacketID)
	*p = x
	return p
}
func (x DraftMakePick_PacketID) String() string {
	return proto.EnumName(DraftMakePick_PacketID_name, int32(x))
}
func (x *DraftMakePick_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftMakePick_PacketID_value, data, "DraftMakePick_PacketID")
	if err != nil {
		return err
	}
	*x = DraftMakePick_PacketID(value)
	return nil
}

type GetAchieves_PacketID int32

const (
	GetAchieves_ID     GetAchieves_PacketID = 253
	GetAchieves_System GetAchieves_PacketID = 0
)

var GetAchieves_PacketID_name = map[int32]string{
	253: "ID",
	0:   "System",
}
var GetAchieves_PacketID_value = map[string]int32{
	"ID":     253,
	"System": 0,
}

func (x GetAchieves_PacketID) Enum() *GetAchieves_PacketID {
	p := new(GetAchieves_PacketID)
	*p = x
	return p
}
func (x GetAchieves_PacketID) String() string {
	return proto.EnumName(GetAchieves_PacketID_name, int32(x))
}
func (x *GetAchieves_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAchieves_PacketID_value, data, "GetAchieves_PacketID")
	if err != nil {
		return err
	}
	*x = GetAchieves_PacketID(value)
	return nil
}

type AckAchieveProgress_PacketID int32

const (
	AckAchieveProgress_ID     AckAchieveProgress_PacketID = 243
	AckAchieveProgress_System AckAchieveProgress_PacketID = 0
)

var AckAchieveProgress_PacketID_name = map[int32]string{
	243: "ID",
	0:   "System",
}
var AckAchieveProgress_PacketID_value = map[string]int32{
	"ID":     243,
	"System": 0,
}

func (x AckAchieveProgress_PacketID) Enum() *AckAchieveProgress_PacketID {
	p := new(AckAchieveProgress_PacketID)
	*p = x
	return p
}
func (x AckAchieveProgress_PacketID) String() string {
	return proto.EnumName(AckAchieveProgress_PacketID_name, int32(x))
}
func (x *AckAchieveProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AckAchieveProgress_PacketID_value, data, "AckAchieveProgress_PacketID")
	if err != nil {
		return err
	}
	*x = AckAchieveProgress_PacketID(value)
	return nil
}

type BuySellCard_PacketID int32

const (
	BuySellCard_ID     BuySellCard_PacketID = 257
	BuySellCard_System BuySellCard_PacketID = 0
)

var BuySellCard_PacketID_name = map[int32]string{
	257: "ID",
	0:   "System",
}
var BuySellCard_PacketID_value = map[string]int32{
	"ID":     257,
	"System": 0,
}

func (x BuySellCard_PacketID) Enum() *BuySellCard_PacketID {
	p := new(BuySellCard_PacketID)
	*p = x
	return p
}
func (x BuySellCard_PacketID) String() string {
	return proto.EnumName(BuySellCard_PacketID_name, int32(x))
}
func (x *BuySellCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuySellCard_PacketID_value, data, "BuySellCard_PacketID")
	if err != nil {
		return err
	}
	*x = BuySellCard_PacketID(value)
	return nil
}

type GetPurchaseMethod_PacketID int32

const (
	GetPurchaseMethod_ID     GetPurchaseMethod_PacketID = 250
	GetPurchaseMethod_System GetPurchaseMethod_PacketID = 1
)

var GetPurchaseMethod_PacketID_name = map[int32]string{
	250: "ID",
	1:   "System",
}
var GetPurchaseMethod_PacketID_value = map[string]int32{
	"ID":     250,
	"System": 1,
}

func (x GetPurchaseMethod_PacketID) Enum() *GetPurchaseMethod_PacketID {
	p := new(GetPurchaseMethod_PacketID)
	*p = x
	return p
}
func (x GetPurchaseMethod_PacketID) String() string {
	return proto.EnumName(GetPurchaseMethod_PacketID_name, int32(x))
}
func (x *GetPurchaseMethod_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetPurchaseMethod_PacketID_value, data, "GetPurchaseMethod_PacketID")
	if err != nil {
		return err
	}
	*x = GetPurchaseMethod_PacketID(value)
	return nil
}

type DoPurchase_PacketID int32

const (
	DoPurchase_ID     DoPurchase_PacketID = 273
	DoPurchase_System DoPurchase_PacketID = 1
)

var DoPurchase_PacketID_name = map[int32]string{
	273: "ID",
	1:   "System",
}
var DoPurchase_PacketID_value = map[string]int32{
	"ID":     273,
	"System": 1,
}

func (x DoPurchase_PacketID) Enum() *DoPurchase_PacketID {
	p := new(DoPurchase_PacketID)
	*p = x
	return p
}
func (x DoPurchase_PacketID) String() string {
	return proto.EnumName(DoPurchase_PacketID_name, int32(x))
}
func (x *DoPurchase_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DoPurchase_PacketID_value, data, "DoPurchase_PacketID")
	if err != nil {
		return err
	}
	*x = DoPurchase_PacketID(value)
	return nil
}

type CancelPurchase_ThirdPartyCancelReason int32

const (
	CancelPurchase_PROVIDER_REPORTED_FAILURE    CancelPurchase_ThirdPartyCancelReason = 1
	CancelPurchase_NOT_RECOGNIZED_BY_PROVIDER   CancelPurchase_ThirdPartyCancelReason = 2
	CancelPurchase_USER_CANCELED_BEFORE_PAYMENT CancelPurchase_ThirdPartyCancelReason = 3
	CancelPurchase_USER_CANCELING_TO_UNBLOCK    CancelPurchase_ThirdPartyCancelReason = 4
)

var CancelPurchase_ThirdPartyCancelReason_name = map[int32]string{
	1: "PROVIDER_REPORTED_FAILURE",
	2: "NOT_RECOGNIZED_BY_PROVIDER",
	3: "USER_CANCELED_BEFORE_PAYMENT",
	4: "USER_CANCELING_TO_UNBLOCK",
}
var CancelPurchase_ThirdPartyCancelReason_value = map[string]int32{
	"PROVIDER_REPORTED_FAILURE":    1,
	"NOT_RECOGNIZED_BY_PROVIDER":   2,
	"USER_CANCELED_BEFORE_PAYMENT": 3,
	"USER_CANCELING_TO_UNBLOCK":    4,
}

func (x CancelPurchase_ThirdPartyCancelReason) Enum() *CancelPurchase_ThirdPartyCancelReason {
	p := new(CancelPurchase_ThirdPartyCancelReason)
	*p = x
	return p
}
func (x CancelPurchase_ThirdPartyCancelReason) String() string {
	return proto.EnumName(CancelPurchase_ThirdPartyCancelReason_name, int32(x))
}
func (x *CancelPurchase_ThirdPartyCancelReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelPurchase_ThirdPartyCancelReason_value, data, "CancelPurchase_ThirdPartyCancelReason")
	if err != nil {
		return err
	}
	*x = CancelPurchase_ThirdPartyCancelReason(value)
	return nil
}

type CancelPurchase_PacketID int32

const (
	CancelPurchase_ID     CancelPurchase_PacketID = 274
	CancelPurchase_System CancelPurchase_PacketID = 1
)

var CancelPurchase_PacketID_name = map[int32]string{
	274: "ID",
	1:   "System",
}
var CancelPurchase_PacketID_value = map[string]int32{
	"ID":     274,
	"System": 1,
}

func (x CancelPurchase_PacketID) Enum() *CancelPurchase_PacketID {
	p := new(CancelPurchase_PacketID)
	*p = x
	return p
}
func (x CancelPurchase_PacketID) String() string {
	return proto.EnumName(CancelPurchase_PacketID_name, int32(x))
}
func (x *CancelPurchase_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelPurchase_PacketID_value, data, "CancelPurchase_PacketID")
	if err != nil {
		return err
	}
	*x = CancelPurchase_PacketID(value)
	return nil
}

type CheckAccountLicenses_PacketID int32

const (
	CheckAccountLicenses_ID     CheckAccountLicenses_PacketID = 267
	CheckAccountLicenses_System CheckAccountLicenses_PacketID = 0
)

var CheckAccountLicenses_PacketID_name = map[int32]string{
	267: "ID",
	0:   "System",
}
var CheckAccountLicenses_PacketID_value = map[string]int32{
	"ID":     267,
	"System": 0,
}

func (x CheckAccountLicenses_PacketID) Enum() *CheckAccountLicenses_PacketID {
	p := new(CheckAccountLicenses_PacketID)
	*p = x
	return p
}
func (x CheckAccountLicenses_PacketID) String() string {
	return proto.EnumName(CheckAccountLicenses_PacketID_name, int32(x))
}
func (x *CheckAccountLicenses_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckAccountLicenses_PacketID_value, data, "CheckAccountLicenses_PacketID")
	if err != nil {
		return err
	}
	*x = CheckAccountLicenses_PacketID(value)
	return nil
}

type CheckGameLicenses_PacketID int32

const (
	CheckGameLicenses_ID     CheckGameLicenses_PacketID = 276
	CheckGameLicenses_System CheckGameLicenses_PacketID = 1
)

var CheckGameLicenses_PacketID_name = map[int32]string{
	276: "ID",
	1:   "System",
}
var CheckGameLicenses_PacketID_value = map[string]int32{
	"ID":     276,
	"System": 1,
}

func (x CheckGameLicenses_PacketID) Enum() *CheckGameLicenses_PacketID {
	p := new(CheckGameLicenses_PacketID)
	*p = x
	return p
}
func (x CheckGameLicenses_PacketID) String() string {
	return proto.EnumName(CheckGameLicenses_PacketID_name, int32(x))
}
func (x *CheckGameLicenses_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckGameLicenses_PacketID_value, data, "CheckGameLicenses_PacketID")
	if err != nil {
		return err
	}
	*x = CheckGameLicenses_PacketID(value)
	return nil
}

type GetBattlePayConfig_PacketID int32

const (
	GetBattlePayConfig_ID     GetBattlePayConfig_PacketID = 237
	GetBattlePayConfig_System GetBattlePayConfig_PacketID = 1
)

var GetBattlePayConfig_PacketID_name = map[int32]string{
	237: "ID",
	1:   "System",
}
var GetBattlePayConfig_PacketID_value = map[string]int32{
	"ID":     237,
	"System": 1,
}

func (x GetBattlePayConfig_PacketID) Enum() *GetBattlePayConfig_PacketID {
	p := new(GetBattlePayConfig_PacketID)
	*p = x
	return p
}
func (x GetBattlePayConfig_PacketID) String() string {
	return proto.EnumName(GetBattlePayConfig_PacketID_name, int32(x))
}
func (x *GetBattlePayConfig_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetBattlePayConfig_PacketID_value, data, "GetBattlePayConfig_PacketID")
	if err != nil {
		return err
	}
	*x = GetBattlePayConfig_PacketID(value)
	return nil
}

type GetBattlePayStatus_PacketID int32

const (
	GetBattlePayStatus_ID     GetBattlePayStatus_PacketID = 255
	GetBattlePayStatus_System GetBattlePayStatus_PacketID = 1
)

var GetBattlePayStatus_PacketID_name = map[int32]string{
	255: "ID",
	1:   "System",
}
var GetBattlePayStatus_PacketID_value = map[string]int32{
	"ID":     255,
	"System": 1,
}

func (x GetBattlePayStatus_PacketID) Enum() *GetBattlePayStatus_PacketID {
	p := new(GetBattlePayStatus_PacketID)
	*p = x
	return p
}
func (x GetBattlePayStatus_PacketID) String() string {
	return proto.EnumName(GetBattlePayStatus_PacketID_name, int32(x))
}
func (x *GetBattlePayStatus_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetBattlePayStatus_PacketID_value, data, "GetBattlePayStatus_PacketID")
	if err != nil {
		return err
	}
	*x = GetBattlePayStatus_PacketID(value)
	return nil
}

type CancelQuest_PacketID int32

const (
	CancelQuest_ID     CancelQuest_PacketID = 281
	CancelQuest_System CancelQuest_PacketID = 0
)

var CancelQuest_PacketID_name = map[int32]string{
	281: "ID",
	0:   "System",
}
var CancelQuest_PacketID_value = map[string]int32{
	"ID":     281,
	"System": 0,
}

func (x CancelQuest_PacketID) Enum() *CancelQuest_PacketID {
	p := new(CancelQuest_PacketID)
	*p = x
	return p
}
func (x CancelQuest_PacketID) String() string {
	return proto.EnumName(CancelQuest_PacketID_name, int32(x))
}
func (x *CancelQuest_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelQuest_PacketID_value, data, "CancelQuest_PacketID")
	if err != nil {
		return err
	}
	*x = CancelQuest_PacketID(value)
	return nil
}

type MassDisenchantRequest_PacketID int32

const (
	MassDisenchantRequest_ID     MassDisenchantRequest_PacketID = 268
	MassDisenchantRequest_System MassDisenchantRequest_PacketID = 0
)

var MassDisenchantRequest_PacketID_name = map[int32]string{
	268: "ID",
	0:   "System",
}
var MassDisenchantRequest_PacketID_value = map[string]int32{
	"ID":     268,
	"System": 0,
}

func (x MassDisenchantRequest_PacketID) Enum() *MassDisenchantRequest_PacketID {
	p := new(MassDisenchantRequest_PacketID)
	*p = x
	return p
}
func (x MassDisenchantRequest_PacketID) String() string {
	return proto.EnumName(MassDisenchantRequest_PacketID_name, int32(x))
}
func (x *MassDisenchantRequest_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MassDisenchantRequest_PacketID_value, data, "MassDisenchantRequest_PacketID")
	if err != nil {
		return err
	}
	*x = MassDisenchantRequest_PacketID(value)
	return nil
}

type PurchaseWithGold_PacketID int32

const (
	PurchaseWithGold_ID     PurchaseWithGold_PacketID = 279
	PurchaseWithGold_System PurchaseWithGold_PacketID = 0
)

var PurchaseWithGold_PacketID_name = map[int32]string{
	279: "ID",
	0:   "System",
}
var PurchaseWithGold_PacketID_value = map[string]int32{
	"ID":     279,
	"System": 0,
}

func (x PurchaseWithGold_PacketID) Enum() *PurchaseWithGold_PacketID {
	p := new(PurchaseWithGold_PacketID)
	*p = x
	return p
}
func (x PurchaseWithGold_PacketID) String() string {
	return proto.EnumName(PurchaseWithGold_PacketID_name, int32(x))
}
func (x *PurchaseWithGold_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseWithGold_PacketID_value, data, "PurchaseWithGold_PacketID")
	if err != nil {
		return err
	}
	*x = PurchaseWithGold_PacketID(value)
	return nil
}

type SetCardBack_PacketID int32

const (
	SetCardBack_ID     SetCardBack_PacketID = 291
	SetCardBack_System SetCardBack_PacketID = 0
)

var SetCardBack_PacketID_name = map[int32]string{
	291: "ID",
	0:   "System",
}
var SetCardBack_PacketID_value = map[string]int32{
	"ID":     291,
	"System": 0,
}

func (x SetCardBack_PacketID) Enum() *SetCardBack_PacketID {
	p := new(SetCardBack_PacketID)
	*p = x
	return p
}
func (x SetCardBack_PacketID) String() string {
	return proto.EnumName(SetCardBack_PacketID_name, int32(x))
}
func (x *SetCardBack_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetCardBack_PacketID_value, data, "SetCardBack_PacketID")
	if err != nil {
		return err
	}
	*x = SetCardBack_PacketID(value)
	return nil
}

type SubmitThirdPartyReceipt_PacketID int32

const (
	SubmitThirdPartyReceipt_ID     SubmitThirdPartyReceipt_PacketID = 293
	SubmitThirdPartyReceipt_System SubmitThirdPartyReceipt_PacketID = 1
)

var SubmitThirdPartyReceipt_PacketID_name = map[int32]string{
	293: "ID",
	1:   "System",
}
var SubmitThirdPartyReceipt_PacketID_value = map[string]int32{
	"ID":     293,
	"System": 1,
}

func (x SubmitThirdPartyReceipt_PacketID) Enum() *SubmitThirdPartyReceipt_PacketID {
	p := new(SubmitThirdPartyReceipt_PacketID)
	*p = x
	return p
}
func (x SubmitThirdPartyReceipt_PacketID) String() string {
	return proto.EnumName(SubmitThirdPartyReceipt_PacketID_name, int32(x))
}
func (x *SubmitThirdPartyReceipt_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubmitThirdPartyReceipt_PacketID_value, data, "SubmitThirdPartyReceipt_PacketID")
	if err != nil {
		return err
	}
	*x = SubmitThirdPartyReceipt_PacketID(value)
	return nil
}

type GetThirdPartyPurchaseStatus_PacketID int32

const (
	GetThirdPartyPurchaseStatus_ID     GetThirdPartyPurchaseStatus_PacketID = 294
	GetThirdPartyPurchaseStatus_System GetThirdPartyPurchaseStatus_PacketID = 1
)

var GetThirdPartyPurchaseStatus_PacketID_name = map[int32]string{
	294: "ID",
	1:   "System",
}
var GetThirdPartyPurchaseStatus_PacketID_value = map[string]int32{
	"ID":     294,
	"System": 1,
}

func (x GetThirdPartyPurchaseStatus_PacketID) Enum() *GetThirdPartyPurchaseStatus_PacketID {
	p := new(GetThirdPartyPurchaseStatus_PacketID)
	*p = x
	return p
}
func (x GetThirdPartyPurchaseStatus_PacketID) String() string {
	return proto.EnumName(GetThirdPartyPurchaseStatus_PacketID_name, int32(x))
}
func (x *GetThirdPartyPurchaseStatus_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetThirdPartyPurchaseStatus_PacketID_value, data, "GetThirdPartyPurchaseStatus_PacketID")
	if err != nil {
		return err
	}
	*x = GetThirdPartyPurchaseStatus_PacketID(value)
	return nil
}

type CheckAccountLicenseAchieve_PacketID int32

const (
	CheckAccountLicenseAchieve_ID     CheckAccountLicenseAchieve_PacketID = 297
	CheckAccountLicenseAchieve_System CheckAccountLicenseAchieve_PacketID = 1
)

var CheckAccountLicenseAchieve_PacketID_name = map[int32]string{
	297: "ID",
	1:   "System",
}
var CheckAccountLicenseAchieve_PacketID_value = map[string]int32{
	"ID":     297,
	"System": 1,
}

func (x CheckAccountLicenseAchieve_PacketID) Enum() *CheckAccountLicenseAchieve_PacketID {
	p := new(CheckAccountLicenseAchieve_PacketID)
	*p = x
	return p
}
func (x CheckAccountLicenseAchieve_PacketID) String() string {
	return proto.EnumName(CheckAccountLicenseAchieve_PacketID_name, int32(x))
}
func (x *CheckAccountLicenseAchieve_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckAccountLicenseAchieve_PacketID_value, data, "CheckAccountLicenseAchieve_PacketID")
	if err != nil {
		return err
	}
	*x = CheckAccountLicenseAchieve_PacketID(value)
	return nil
}

type TriggerLaunchDayEvent_PacketID int32

const (
	TriggerLaunchDayEvent_ID     TriggerLaunchDayEvent_PacketID = 298
	TriggerLaunchDayEvent_System TriggerLaunchDayEvent_PacketID = 0
)

var TriggerLaunchDayEvent_PacketID_name = map[int32]string{
	298: "ID",
	0:   "System",
}
var TriggerLaunchDayEvent_PacketID_value = map[string]int32{
	"ID":     298,
	"System": 0,
}

func (x TriggerLaunchDayEvent_PacketID) Enum() *TriggerLaunchDayEvent_PacketID {
	p := new(TriggerLaunchDayEvent_PacketID)
	*p = x
	return p
}
func (x TriggerLaunchDayEvent_PacketID) String() string {
	return proto.EnumName(TriggerLaunchDayEvent_PacketID_name, int32(x))
}
func (x *TriggerLaunchDayEvent_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TriggerLaunchDayEvent_PacketID_value, data, "TriggerLaunchDayEvent_PacketID")
	if err != nil {
		return err
	}
	*x = TriggerLaunchDayEvent_PacketID(value)
	return nil
}

type GetAssetsVersion_PacketID int32

const (
	GetAssetsVersion_ID     GetAssetsVersion_PacketID = 303
	GetAssetsVersion_System GetAssetsVersion_PacketID = 0
)

var GetAssetsVersion_PacketID_name = map[int32]string{
	303: "ID",
	0:   "System",
}
var GetAssetsVersion_PacketID_value = map[string]int32{
	"ID":     303,
	"System": 0,
}

func (x GetAssetsVersion_PacketID) Enum() *GetAssetsVersion_PacketID {
	p := new(GetAssetsVersion_PacketID)
	*p = x
	return p
}
func (x GetAssetsVersion_PacketID) String() string {
	return proto.EnumName(GetAssetsVersion_PacketID_name, int32(x))
}
func (x *GetAssetsVersion_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAssetsVersion_PacketID_value, data, "GetAssetsVersion_PacketID")
	if err != nil {
		return err
	}
	*x = GetAssetsVersion_PacketID(value)
	return nil
}

type GetAdventureProgress_PacketID int32

const (
	GetAdventureProgress_ID     GetAdventureProgress_PacketID = 305
	GetAdventureProgress_System GetAdventureProgress_PacketID = 0
)

var GetAdventureProgress_PacketID_name = map[int32]string{
	305: "ID",
	0:   "System",
}
var GetAdventureProgress_PacketID_value = map[string]int32{
	"ID":     305,
	"System": 0,
}

func (x GetAdventureProgress_PacketID) Enum() *GetAdventureProgress_PacketID {
	p := new(GetAdventureProgress_PacketID)
	*p = x
	return p
}
func (x GetAdventureProgress_PacketID) String() string {
	return proto.EnumName(GetAdventureProgress_PacketID_name, int32(x))
}
func (x *GetAdventureProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAdventureProgress_PacketID_value, data, "GetAdventureProgress_PacketID")
	if err != nil {
		return err
	}
	*x = GetAdventureProgress_PacketID(value)
	return nil
}

type SetAdventureOptions_PacketID int32

const (
	SetAdventureOptions_ID     SetAdventureOptions_PacketID = 310
	SetAdventureOptions_System SetAdventureOptions_PacketID = 0
)

var SetAdventureOptions_PacketID_name = map[int32]string{
	310: "ID",
	0:   "System",
}
var SetAdventureOptions_PacketID_value = map[string]int32{
	"ID":     310,
	"System": 0,
}

func (x SetAdventureOptions_PacketID) Enum() *SetAdventureOptions_PacketID {
	p := new(SetAdventureOptions_PacketID)
	*p = x
	return p
}
func (x SetAdventureOptions_PacketID) String() string {
	return proto.EnumName(SetAdventureOptions_PacketID_name, int32(x))
}
func (x *SetAdventureOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetAdventureOptions_PacketID_value, data, "SetAdventureOptions_PacketID")
	if err != nil {
		return err
	}
	*x = SetAdventureOptions_PacketID(value)
	return nil
}

type StartThirdPartyPurchase_PacketID int32

const (
	StartThirdPartyPurchase_ID     StartThirdPartyPurchase_PacketID = 312
	StartThirdPartyPurchase_System StartThirdPartyPurchase_PacketID = 1
)

var StartThirdPartyPurchase_PacketID_name = map[int32]string{
	312: "ID",
	1:   "System",
}
var StartThirdPartyPurchase_PacketID_value = map[string]int32{
	"ID":     312,
	"System": 1,
}

func (x StartThirdPartyPurchase_PacketID) Enum() *StartThirdPartyPurchase_PacketID {
	p := new(StartThirdPartyPurchase_PacketID)
	*p = x
	return p
}
func (x StartThirdPartyPurchase_PacketID) String() string {
	return proto.EnumName(StartThirdPartyPurchase_PacketID_name, int32(x))
}
func (x *StartThirdPartyPurchase_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StartThirdPartyPurchase_PacketID_value, data, "StartThirdPartyPurchase_PacketID")
	if err != nil {
		return err
	}
	*x = StartThirdPartyPurchase_PacketID(value)
	return nil
}

type SetFavoriteHero_PacketID int32

const (
	SetFavoriteHero_ID     SetFavoriteHero_PacketID = 319
	SetFavoriteHero_System SetFavoriteHero_PacketID = 0
)

var SetFavoriteHero_PacketID_name = map[int32]string{
	319: "ID",
	0:   "System",
}
var SetFavoriteHero_PacketID_value = map[string]int32{
	"ID":     319,
	"System": 0,
}

func (x SetFavoriteHero_PacketID) Enum() *SetFavoriteHero_PacketID {
	p := new(SetFavoriteHero_PacketID)
	*p = x
	return p
}
func (x SetFavoriteHero_PacketID) String() string {
	return proto.EnumName(SetFavoriteHero_PacketID_name, int32(x))
}
func (x *SetFavoriteHero_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetFavoriteHero_PacketID_value, data, "SetFavoriteHero_PacketID")
	if err != nil {
		return err
	}
	*x = SetFavoriteHero_PacketID(value)
	return nil
}

type GetAssetRequest_PacketID int32

const (
	GetAssetRequest_ID     GetAssetRequest_PacketID = 321
	GetAssetRequest_System GetAssetRequest_PacketID = 0
)

var GetAssetRequest_PacketID_name = map[int32]string{
	321: "ID",
	0:   "System",
}
var GetAssetRequest_PacketID_value = map[string]int32{
	"ID":     321,
	"System": 0,
}

func (x GetAssetRequest_PacketID) Enum() *GetAssetRequest_PacketID {
	p := new(GetAssetRequest_PacketID)
	*p = x
	return p
}
func (x GetAssetRequest_PacketID) String() string {
	return proto.EnumName(GetAssetRequest_PacketID_name, int32(x))
}
func (x *GetAssetRequest_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAssetRequest_PacketID_value, data, "GetAssetRequest_PacketID")
	if err != nil {
		return err
	}
	*x = GetAssetRequest_PacketID(value)
	return nil
}

type DebugCommandRequest_PacketID int32

const (
	DebugCommandRequest_ID     DebugCommandRequest_PacketID = 322
	DebugCommandRequest_System DebugCommandRequest_PacketID = 0
)

var DebugCommandRequest_PacketID_name = map[int32]string{
	322: "ID",
	0:   "System",
}
var DebugCommandRequest_PacketID_value = map[string]int32{
	"ID":     322,
	"System": 0,
}

func (x DebugCommandRequest_PacketID) Enum() *DebugCommandRequest_PacketID {
	p := new(DebugCommandRequest_PacketID)
	*p = x
	return p
}
func (x DebugCommandRequest_PacketID) String() string {
	return proto.EnumName(DebugCommandRequest_PacketID_name, int32(x))
}
func (x *DebugCommandRequest_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DebugCommandRequest_PacketID_value, data, "DebugCommandRequest_PacketID")
	if err != nil {
		return err
	}
	*x = DebugCommandRequest_PacketID(value)
	return nil
}

type NotSoMassiveLoginReply_PacketID int32

const (
	NotSoMassiveLoginReply_ID NotSoMassiveLoginReply_PacketID = 300
)

var NotSoMassiveLoginReply_PacketID_name = map[int32]string{
	300: "ID",
}
var NotSoMassiveLoginReply_PacketID_value = map[string]int32{
	"ID": 300,
}

func (x NotSoMassiveLoginReply_PacketID) Enum() *NotSoMassiveLoginReply_PacketID {
	p := new(NotSoMassiveLoginReply_PacketID)
	*p = x
	return p
}
func (x NotSoMassiveLoginReply_PacketID) String() string {
	return proto.EnumName(NotSoMassiveLoginReply_PacketID_name, int32(x))
}
func (x *NotSoMassiveLoginReply_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NotSoMassiveLoginReply_PacketID_value, data, "NotSoMassiveLoginReply_PacketID")
	if err != nil {
		return err
	}
	*x = NotSoMassiveLoginReply_PacketID(value)
	return nil
}

type UpdateLoginComplete_PacketID int32

const (
	UpdateLoginComplete_ID UpdateLoginComplete_PacketID = 307
)

var UpdateLoginComplete_PacketID_name = map[int32]string{
	307: "ID",
}
var UpdateLoginComplete_PacketID_value = map[string]int32{
	"ID": 307,
}

func (x UpdateLoginComplete_PacketID) Enum() *UpdateLoginComplete_PacketID {
	p := new(UpdateLoginComplete_PacketID)
	*p = x
	return p
}
func (x UpdateLoginComplete_PacketID) String() string {
	return proto.EnumName(UpdateLoginComplete_PacketID_name, int32(x))
}
func (x *UpdateLoginComplete_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateLoginComplete_PacketID_value, data, "UpdateLoginComplete_PacketID")
	if err != nil {
		return err
	}
	*x = UpdateLoginComplete_PacketID(value)
	return nil
}

type AckWingProgress_PacketID int32

const (
	AckWingProgress_ID     AckWingProgress_PacketID = 308
	AckWingProgress_System AckWingProgress_PacketID = 0
)

var AckWingProgress_PacketID_name = map[int32]string{
	308: "ID",
	0:   "System",
}
var AckWingProgress_PacketID_value = map[string]int32{
	"ID":     308,
	"System": 0,
}

func (x AckWingProgress_PacketID) Enum() *AckWingProgress_PacketID {
	p := new(AckWingProgress_PacketID)
	*p = x
	return p
}
func (x AckWingProgress_PacketID) String() string {
	return proto.EnumName(AckWingProgress_PacketID_name, int32(x))
}
func (x *AckWingProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AckWingProgress_PacketID_value, data, "AckWingProgress_PacketID")
	if err != nil {
		return err
	}
	*x = AckWingProgress_PacketID(value)
	return nil
}

type AcknowledgeBanner_PacketID int32

const (
	AcknowledgeBanner_ID     AcknowledgeBanner_PacketID = 309
	AcknowledgeBanner_System AcknowledgeBanner_PacketID = 0
)

var AcknowledgeBanner_PacketID_name = map[int32]string{
	309: "ID",
	0:   "System",
}
var AcknowledgeBanner_PacketID_value = map[string]int32{
	"ID":     309,
	"System": 0,
}

func (x AcknowledgeBanner_PacketID) Enum() *AcknowledgeBanner_PacketID {
	p := new(AcknowledgeBanner_PacketID)
	*p = x
	return p
}
func (x AcknowledgeBanner_PacketID) String() string {
	return proto.EnumName(AcknowledgeBanner_PacketID_name, int32(x))
}
func (x *AcknowledgeBanner_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AcknowledgeBanner_PacketID_value, data, "AcknowledgeBanner_PacketID")
	if err != nil {
		return err
	}
	*x = AcknowledgeBanner_PacketID(value)
	return nil
}

type Disconnected_PacketID int32

const (
	Disconnected_ID Disconnected_PacketID = 289
)

var Disconnected_PacketID_name = map[int32]string{
	289: "ID",
}
var Disconnected_PacketID_value = map[string]int32{
	"ID": 289,
}

func (x Disconnected_PacketID) Enum() *Disconnected_PacketID {
	p := new(Disconnected_PacketID)
	*p = x
	return p
}
func (x Disconnected_PacketID) String() string {
	return proto.EnumName(Disconnected_PacketID_name, int32(x))
}
func (x *Disconnected_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Disconnected_PacketID_value, data, "Disconnected_PacketID")
	if err != nil {
		return err
	}
	*x = Disconnected_PacketID(value)
	return nil
}

type ValidateAchieveResponse_PacketID int32

const (
	ValidateAchieveResponse_ID ValidateAchieveResponse_PacketID = 285
)

var ValidateAchieveResponse_PacketID_name = map[int32]string{
	285: "ID",
}
var ValidateAchieveResponse_PacketID_value = map[string]int32{
	"ID": 285,
}

func (x ValidateAchieveResponse_PacketID) Enum() *ValidateAchieveResponse_PacketID {
	p := new(ValidateAchieveResponse_PacketID)
	*p = x
	return p
}
func (x ValidateAchieveResponse_PacketID) String() string {
	return proto.EnumName(ValidateAchieveResponse_PacketID_name, int32(x))
}
func (x *ValidateAchieveResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ValidateAchieveResponse_PacketID_value, data, "ValidateAchieveResponse_PacketID")
	if err != nil {
		return err
	}
	*x = ValidateAchieveResponse_PacketID(value)
	return nil
}

type PlayQueue_PacketID int32

const (
	PlayQueue_ID PlayQueue_PacketID = 286
)

var PlayQueue_PacketID_name = map[int32]string{
	286: "ID",
}
var PlayQueue_PacketID_value = map[string]int32{
	"ID": 286,
}

func (x PlayQueue_PacketID) Enum() *PlayQueue_PacketID {
	p := new(PlayQueue_PacketID)
	*p = x
	return p
}
func (x PlayQueue_PacketID) String() string {
	return proto.EnumName(PlayQueue_PacketID_name, int32(x))
}
func (x *PlayQueue_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayQueue_PacketID_value, data, "PlayQueue_PacketID")
	if err != nil {
		return err
	}
	*x = PlayQueue_PacketID(value)
	return nil
}

type GuardianVars_PacketID int32

const (
	GuardianVars_ID GuardianVars_PacketID = 264
)

var GuardianVars_PacketID_name = map[int32]string{
	264: "ID",
}
var GuardianVars_PacketID_value = map[string]int32{
	"ID": 264,
}

func (x GuardianVars_PacketID) Enum() *GuardianVars_PacketID {
	p := new(GuardianVars_PacketID)
	*p = x
	return p
}
func (x GuardianVars_PacketID) String() string {
	return proto.EnumName(GuardianVars_PacketID_name, int32(x))
}
func (x *GuardianVars_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuardianVars_PacketID_value, data, "GuardianVars_PacketID")
	if err != nil {
		return err
	}
	*x = GuardianVars_PacketID(value)
	return nil
}

type ArcaneDustBalance_PacketID int32

const (
	ArcaneDustBalance_ID ArcaneDustBalance_PacketID = 262
)

var ArcaneDustBalance_PacketID_name = map[int32]string{
	262: "ID",
}
var ArcaneDustBalance_PacketID_value = map[string]int32{
	"ID": 262,
}

func (x ArcaneDustBalance_PacketID) Enum() *ArcaneDustBalance_PacketID {
	p := new(ArcaneDustBalance_PacketID)
	*p = x
	return p
}
func (x ArcaneDustBalance_PacketID) String() string {
	return proto.EnumName(ArcaneDustBalance_PacketID_name, int32(x))
}
func (x *ArcaneDustBalance_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArcaneDustBalance_PacketID_value, data, "ArcaneDustBalance_PacketID")
	if err != nil {
		return err
	}
	*x = ArcaneDustBalance_PacketID(value)
	return nil
}

type GoldBalance_PacketID int32

const (
	GoldBalance_ID GoldBalance_PacketID = 278
)

var GoldBalance_PacketID_name = map[int32]string{
	278: "ID",
}
var GoldBalance_PacketID_value = map[string]int32{
	"ID": 278,
}

func (x GoldBalance_PacketID) Enum() *GoldBalance_PacketID {
	p := new(GoldBalance_PacketID)
	*p = x
	return p
}
func (x GoldBalance_PacketID) String() string {
	return proto.EnumName(GoldBalance_PacketID_name, int32(x))
}
func (x *GoldBalance_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GoldBalance_PacketID_value, data, "GoldBalance_PacketID")
	if err != nil {
		return err
	}
	*x = GoldBalance_PacketID(value)
	return nil
}

type CardValues_PacketID int32

const (
	CardValues_ID CardValues_PacketID = 260
)

var CardValues_PacketID_name = map[int32]string{
	260: "ID",
}
var CardValues_PacketID_value = map[string]int32{
	"ID": 260,
}

func (x CardValues_PacketID) Enum() *CardValues_PacketID {
	p := new(CardValues_PacketID)
	*p = x
	return p
}
func (x CardValues_PacketID) String() string {
	return proto.EnumName(CardValues_PacketID_name, int32(x))
}
func (x *CardValues_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardValues_PacketID_value, data, "CardValues_PacketID")
	if err != nil {
		return err
	}
	*x = CardValues_PacketID(value)
	return nil
}

type BoughtSoldCard_Result int32

const (
	BoughtSoldCard_GENERIC_FAILURE  BoughtSoldCard_Result = 1
	BoughtSoldCard_SOLD             BoughtSoldCard_Result = 2
	BoughtSoldCard_BOUGHT           BoughtSoldCard_Result = 3
	BoughtSoldCard_SOULBOUND        BoughtSoldCard_Result = 4
	BoughtSoldCard_WRONG_SELL_PRICE BoughtSoldCard_Result = 5
	BoughtSoldCard_WRONG_BUY_PRICE  BoughtSoldCard_Result = 6
	BoughtSoldCard_NO_PERMISSION    BoughtSoldCard_Result = 7
	BoughtSoldCard_EVENT_NOT_ACTIVE BoughtSoldCard_Result = 8
)

var BoughtSoldCard_Result_name = map[int32]string{
	1: "GENERIC_FAILURE",
	2: "SOLD",
	3: "BOUGHT",
	4: "SOULBOUND",
	5: "WRONG_SELL_PRICE",
	6: "WRONG_BUY_PRICE",
	7: "NO_PERMISSION",
	8: "EVENT_NOT_ACTIVE",
}
var BoughtSoldCard_Result_value = map[string]int32{
	"GENERIC_FAILURE":  1,
	"SOLD":             2,
	"BOUGHT":           3,
	"SOULBOUND":        4,
	"WRONG_SELL_PRICE": 5,
	"WRONG_BUY_PRICE":  6,
	"NO_PERMISSION":    7,
	"EVENT_NOT_ACTIVE": 8,
}

func (x BoughtSoldCard_Result) Enum() *BoughtSoldCard_Result {
	p := new(BoughtSoldCard_Result)
	*p = x
	return p
}
func (x BoughtSoldCard_Result) String() string {
	return proto.EnumName(BoughtSoldCard_Result_name, int32(x))
}
func (x *BoughtSoldCard_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoughtSoldCard_Result_value, data, "BoughtSoldCard_Result")
	if err != nil {
		return err
	}
	*x = BoughtSoldCard_Result(value)
	return nil
}

type BoughtSoldCard_PacketID int32

const (
	BoughtSoldCard_ID BoughtSoldCard_PacketID = 258
)

var BoughtSoldCard_PacketID_name = map[int32]string{
	258: "ID",
}
var BoughtSoldCard_PacketID_value = map[string]int32{
	"ID": 258,
}

func (x BoughtSoldCard_PacketID) Enum() *BoughtSoldCard_PacketID {
	p := new(BoughtSoldCard_PacketID)
	*p = x
	return p
}
func (x BoughtSoldCard_PacketID) String() string {
	return proto.EnumName(BoughtSoldCard_PacketID_name, int32(x))
}
func (x *BoughtSoldCard_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoughtSoldCard_PacketID_value, data, "BoughtSoldCard_PacketID")
	if err != nil {
		return err
	}
	*x = BoughtSoldCard_PacketID(value)
	return nil
}

type NOP_PacketID int32

const (
	NOP_ID NOP_PacketID = 254
)

var NOP_PacketID_name = map[int32]string{
	254: "ID",
}
var NOP_PacketID_value = map[string]int32{
	"ID": 254,
}

func (x NOP_PacketID) Enum() *NOP_PacketID {
	p := new(NOP_PacketID)
	*p = x
	return p
}
func (x NOP_PacketID) String() string {
	return proto.EnumName(NOP_PacketID_name, int32(x))
}
func (x *NOP_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NOP_PacketID_value, data, "NOP_PacketID")
	if err != nil {
		return err
	}
	*x = NOP_PacketID(value)
	return nil
}

type Achieves_PacketID int32

const (
	Achieves_ID Achieves_PacketID = 252
)

var Achieves_PacketID_name = map[int32]string{
	252: "ID",
}
var Achieves_PacketID_value = map[string]int32{
	"ID": 252,
}

func (x Achieves_PacketID) Enum() *Achieves_PacketID {
	p := new(Achieves_PacketID)
	*p = x
	return p
}
func (x Achieves_PacketID) String() string {
	return proto.EnumName(Achieves_PacketID_name, int32(x))
}
func (x *Achieves_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Achieves_PacketID_value, data, "Achieves_PacketID")
	if err != nil {
		return err
	}
	*x = Achieves_PacketID(value)
	return nil
}

type DraftError_ErrorCode int32

const (
	DraftError_DE_UNKNOWN                   DraftError_ErrorCode = 0
	DraftError_DE_NO_LICENSE                DraftError_ErrorCode = 1
	DraftError_DE_RETIRE_FIRST              DraftError_ErrorCode = 2
	DraftError_DE_NOT_IN_DRAFT              DraftError_ErrorCode = 3
	DraftError_DE_BAD_DECK                  DraftError_ErrorCode = 4
	DraftError_DE_BAD_SLOT                  DraftError_ErrorCode = 5
	DraftError_DE_BAD_INDEX                 DraftError_ErrorCode = 6
	DraftError_DE_NOT_IN_DRAFT_BUT_COULD_BE DraftError_ErrorCode = 7
	DraftError_DE_FEATURE_DISABLED          DraftError_ErrorCode = 8
)

var DraftError_ErrorCode_name = map[int32]string{
	0: "DE_UNKNOWN",
	1: "DE_NO_LICENSE",
	2: "DE_RETIRE_FIRST",
	3: "DE_NOT_IN_DRAFT",
	4: "DE_BAD_DECK",
	5: "DE_BAD_SLOT",
	6: "DE_BAD_INDEX",
	7: "DE_NOT_IN_DRAFT_BUT_COULD_BE",
	8: "DE_FEATURE_DISABLED",
}
var DraftError_ErrorCode_value = map[string]int32{
	"DE_UNKNOWN":                   0,
	"DE_NO_LICENSE":                1,
	"DE_RETIRE_FIRST":              2,
	"DE_NOT_IN_DRAFT":              3,
	"DE_BAD_DECK":                  4,
	"DE_BAD_SLOT":                  5,
	"DE_BAD_INDEX":                 6,
	"DE_NOT_IN_DRAFT_BUT_COULD_BE": 7,
	"DE_FEATURE_DISABLED":          8,
}

func (x DraftError_ErrorCode) Enum() *DraftError_ErrorCode {
	p := new(DraftError_ErrorCode)
	*p = x
	return p
}
func (x DraftError_ErrorCode) String() string {
	return proto.EnumName(DraftError_ErrorCode_name, int32(x))
}
func (x *DraftError_ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftError_ErrorCode_value, data, "DraftError_ErrorCode")
	if err != nil {
		return err
	}
	*x = DraftError_ErrorCode(value)
	return nil
}

type DraftError_PacketID int32

const (
	DraftError_ID DraftError_PacketID = 251
)

var DraftError_PacketID_name = map[int32]string{
	251: "ID",
}
var DraftError_PacketID_value = map[string]int32{
	"ID": 251,
}

func (x DraftError_PacketID) Enum() *DraftError_PacketID {
	p := new(DraftError_PacketID)
	*p = x
	return p
}
func (x DraftError_PacketID) String() string {
	return proto.EnumName(DraftError_PacketID_name, int32(x))
}
func (x *DraftError_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftError_PacketID_value, data, "DraftError_PacketID")
	if err != nil {
		return err
	}
	*x = DraftError_PacketID(value)
	return nil
}

type DraftBeginning_PacketID int32

const (
	DraftBeginning_ID DraftBeginning_PacketID = 246
)

var DraftBeginning_PacketID_name = map[int32]string{
	246: "ID",
}
var DraftBeginning_PacketID_value = map[string]int32{
	"ID": 246,
}

func (x DraftBeginning_PacketID) Enum() *DraftBeginning_PacketID {
	p := new(DraftBeginning_PacketID)
	*p = x
	return p
}
func (x DraftBeginning_PacketID) String() string {
	return proto.EnumName(DraftBeginning_PacketID_name, int32(x))
}
func (x *DraftBeginning_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftBeginning_PacketID_value, data, "DraftBeginning_PacketID")
	if err != nil {
		return err
	}
	*x = DraftBeginning_PacketID(value)
	return nil
}

type DraftRetired_PacketID int32

const (
	DraftRetired_ID DraftRetired_PacketID = 247
)

var DraftRetired_PacketID_name = map[int32]string{
	247: "ID",
}
var DraftRetired_PacketID_value = map[string]int32{
	"ID": 247,
}

func (x DraftRetired_PacketID) Enum() *DraftRetired_PacketID {
	p := new(DraftRetired_PacketID)
	*p = x
	return p
}
func (x DraftRetired_PacketID) String() string {
	return proto.EnumName(DraftRetired_PacketID_name, int32(x))
}
func (x *DraftRetired_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftRetired_PacketID_value, data, "DraftRetired_PacketID")
	if err != nil {
		return err
	}
	*x = DraftRetired_PacketID(value)
	return nil
}

type DraftRewardsAcked_PacketID int32

const (
	DraftRewardsAcked_ID DraftRewardsAcked_PacketID = 288
)

var DraftRewardsAcked_PacketID_name = map[int32]string{
	288: "ID",
}
var DraftRewardsAcked_PacketID_value = map[string]int32{
	"ID": 288,
}

func (x DraftRewardsAcked_PacketID) Enum() *DraftRewardsAcked_PacketID {
	p := new(DraftRewardsAcked_PacketID)
	*p = x
	return p
}
func (x DraftRewardsAcked_PacketID) String() string {
	return proto.EnumName(DraftRewardsAcked_PacketID_name, int32(x))
}
func (x *DraftRewardsAcked_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftRewardsAcked_PacketID_value, data, "DraftRewardsAcked_PacketID")
	if err != nil {
		return err
	}
	*x = DraftRewardsAcked_PacketID(value)
	return nil
}

type DraftChoicesAndContents_PacketID int32

const (
	DraftChoicesAndContents_ID DraftChoicesAndContents_PacketID = 248
)

var DraftChoicesAndContents_PacketID_name = map[int32]string{
	248: "ID",
}
var DraftChoicesAndContents_PacketID_value = map[string]int32{
	"ID": 248,
}

func (x DraftChoicesAndContents_PacketID) Enum() *DraftChoicesAndContents_PacketID {
	p := new(DraftChoicesAndContents_PacketID)
	*p = x
	return p
}
func (x DraftChoicesAndContents_PacketID) String() string {
	return proto.EnumName(DraftChoicesAndContents_PacketID_name, int32(x))
}
func (x *DraftChoicesAndContents_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftChoicesAndContents_PacketID_value, data, "DraftChoicesAndContents_PacketID")
	if err != nil {
		return err
	}
	*x = DraftChoicesAndContents_PacketID(value)
	return nil
}

type DraftChosen_PacketID int32

const (
	DraftChosen_ID DraftChosen_PacketID = 249
)

var DraftChosen_PacketID_name = map[int32]string{
	249: "ID",
}
var DraftChosen_PacketID_value = map[string]int32{
	"ID": 249,
}

func (x DraftChosen_PacketID) Enum() *DraftChosen_PacketID {
	p := new(DraftChosen_PacketID)
	*p = x
	return p
}
func (x DraftChosen_PacketID) String() string {
	return proto.EnumName(DraftChosen_PacketID_name, int32(x))
}
func (x *DraftChosen_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DraftChosen_PacketID_value, data, "DraftChosen_PacketID")
	if err != nil {
		return err
	}
	*x = DraftChosen_PacketID(value)
	return nil
}

type ClientOptions_PacketID int32

const (
	ClientOptions_ID ClientOptions_PacketID = 241
)

var ClientOptions_PacketID_name = map[int32]string{
	241: "ID",
}
var ClientOptions_PacketID_value = map[string]int32{
	"ID": 241,
}

func (x ClientOptions_PacketID) Enum() *ClientOptions_PacketID {
	p := new(ClientOptions_PacketID)
	*p = x
	return p
}
func (x ClientOptions_PacketID) String() string {
	return proto.EnumName(ClientOptions_PacketID_name, int32(x))
}
func (x *ClientOptions_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientOptions_PacketID_value, data, "ClientOptions_PacketID")
	if err != nil {
		return err
	}
	*x = ClientOptions_PacketID(value)
	return nil
}

type ProfileDeckLimit_PacketID int32

const (
	ProfileDeckLimit_ID ProfileDeckLimit_PacketID = 231
)

var ProfileDeckLimit_PacketID_name = map[int32]string{
	231: "ID",
}
var ProfileDeckLimit_PacketID_value = map[string]int32{
	"ID": 231,
}

func (x ProfileDeckLimit_PacketID) Enum() *ProfileDeckLimit_PacketID {
	p := new(ProfileDeckLimit_PacketID)
	*p = x
	return p
}
func (x ProfileDeckLimit_PacketID) String() string {
	return proto.EnumName(ProfileDeckLimit_PacketID_name, int32(x))
}
func (x *ProfileDeckLimit_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileDeckLimit_PacketID_value, data, "ProfileDeckLimit_PacketID")
	if err != nil {
		return err
	}
	*x = ProfileDeckLimit_PacketID(value)
	return nil
}

type ProfileProgress_PacketID int32

const (
	ProfileProgress_ID ProfileProgress_PacketID = 233
)

var ProfileProgress_PacketID_name = map[int32]string{
	233: "ID",
}
var ProfileProgress_PacketID_value = map[string]int32{
	"ID": 233,
}

func (x ProfileProgress_PacketID) Enum() *ProfileProgress_PacketID {
	p := new(ProfileProgress_PacketID)
	*p = x
	return p
}
func (x ProfileProgress_PacketID) String() string {
	return proto.EnumName(ProfileProgress_PacketID_name, int32(x))
}
func (x *ProfileProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileProgress_PacketID_value, data, "ProfileProgress_PacketID")
	if err != nil {
		return err
	}
	*x = ProfileProgress_PacketID(value)
	return nil
}

type ProfileNotices_PacketID int32

const (
	ProfileNotices_ID ProfileNotices_PacketID = 212
)

var ProfileNotices_PacketID_name = map[int32]string{
	212: "ID",
}
var ProfileNotices_PacketID_value = map[string]int32{
	"ID": 212,
}

func (x ProfileNotices_PacketID) Enum() *ProfileNotices_PacketID {
	p := new(ProfileNotices_PacketID)
	*p = x
	return p
}
func (x ProfileNotices_PacketID) String() string {
	return proto.EnumName(ProfileNotices_PacketID_name, int32(x))
}
func (x *ProfileNotices_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProfileNotices_PacketID_value, data, "ProfileNotices_PacketID")
	if err != nil {
		return err
	}
	*x = ProfileNotices_PacketID(value)
	return nil
}

type DeckList_PacketID int32

const (
	DeckList_ID DeckList_PacketID = 202
)

var DeckList_PacketID_name = map[int32]string{
	202: "ID",
}
var DeckList_PacketID_value = map[string]int32{
	"ID": 202,
}

func (x DeckList_PacketID) Enum() *DeckList_PacketID {
	p := new(DeckList_PacketID)
	*p = x
	return p
}
func (x DeckList_PacketID) String() string {
	return proto.EnumName(DeckList_PacketID_name, int32(x))
}
func (x *DeckList_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckList_PacketID_value, data, "DeckList_PacketID")
	if err != nil {
		return err
	}
	*x = DeckList_PacketID(value)
	return nil
}

type Collection_PacketID int32

const (
	Collection_ID Collection_PacketID = 207
)

var Collection_PacketID_name = map[int32]string{
	207: "ID",
}
var Collection_PacketID_value = map[string]int32{
	"ID": 207,
}

func (x Collection_PacketID) Enum() *Collection_PacketID {
	p := new(Collection_PacketID)
	*p = x
	return p
}
func (x Collection_PacketID) String() string {
	return proto.EnumName(Collection_PacketID_name, int32(x))
}
func (x *Collection_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Collection_PacketID_value, data, "Collection_PacketID")
	if err != nil {
		return err
	}
	*x = Collection_PacketID(value)
	return nil
}

type DeckContents_PacketID int32

const (
	DeckContents_ID DeckContents_PacketID = 215
)

var DeckContents_PacketID_name = map[int32]string{
	215: "ID",
}
var DeckContents_PacketID_value = map[string]int32{
	"ID": 215,
}

func (x DeckContents_PacketID) Enum() *DeckContents_PacketID {
	p := new(DeckContents_PacketID)
	*p = x
	return p
}
func (x DeckContents_PacketID) String() string {
	return proto.EnumName(DeckContents_PacketID_name, int32(x))
}
func (x *DeckContents_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckContents_PacketID_value, data, "DeckContents_PacketID")
	if err != nil {
		return err
	}
	*x = DeckContents_PacketID(value)
	return nil
}

type DBAction_PacketID int32

const (
	DBAction_ID DBAction_PacketID = 216
)

var DBAction_PacketID_name = map[int32]string{
	216: "ID",
}
var DBAction_PacketID_value = map[string]int32{
	"ID": 216,
}

func (x DBAction_PacketID) Enum() *DBAction_PacketID {
	p := new(DBAction_PacketID)
	*p = x
	return p
}
func (x DBAction_PacketID) String() string {
	return proto.EnumName(DBAction_PacketID_name, int32(x))
}
func (x *DBAction_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DBAction_PacketID_value, data, "DBAction_PacketID")
	if err != nil {
		return err
	}
	*x = DBAction_PacketID(value)
	return nil
}

type DeckCreated_PacketID int32

const (
	DeckCreated_ID DeckCreated_PacketID = 217
)

var DeckCreated_PacketID_name = map[int32]string{
	217: "ID",
}
var DeckCreated_PacketID_value = map[string]int32{
	"ID": 217,
}

func (x DeckCreated_PacketID) Enum() *DeckCreated_PacketID {
	p := new(DeckCreated_PacketID)
	*p = x
	return p
}
func (x DeckCreated_PacketID) String() string {
	return proto.EnumName(DeckCreated_PacketID_name, int32(x))
}
func (x *DeckCreated_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckCreated_PacketID_value, data, "DeckCreated_PacketID")
	if err != nil {
		return err
	}
	*x = DeckCreated_PacketID(value)
	return nil
}

type DeckDeleted_PacketID int32

const (
	DeckDeleted_ID DeckDeleted_PacketID = 218
)

var DeckDeleted_PacketID_name = map[int32]string{
	218: "ID",
}
var DeckDeleted_PacketID_value = map[string]int32{
	"ID": 218,
}

func (x DeckDeleted_PacketID) Enum() *DeckDeleted_PacketID {
	p := new(DeckDeleted_PacketID)
	*p = x
	return p
}
func (x DeckDeleted_PacketID) String() string {
	return proto.EnumName(DeckDeleted_PacketID_name, int32(x))
}
func (x *DeckDeleted_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckDeleted_PacketID_value, data, "DeckDeleted_PacketID")
	if err != nil {
		return err
	}
	*x = DeckDeleted_PacketID(value)
	return nil
}

type DeckRenamed_PacketID int32

const (
	DeckRenamed_ID DeckRenamed_PacketID = 219
)

var DeckRenamed_PacketID_name = map[int32]string{
	219: "ID",
}
var DeckRenamed_PacketID_value = map[string]int32{
	"ID": 219,
}

func (x DeckRenamed_PacketID) Enum() *DeckRenamed_PacketID {
	p := new(DeckRenamed_PacketID)
	*p = x
	return p
}
func (x DeckRenamed_PacketID) String() string {
	return proto.EnumName(DeckRenamed_PacketID_name, int32(x))
}
func (x *DeckRenamed_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeckRenamed_PacketID_value, data, "DeckRenamed_PacketID")
	if err != nil {
		return err
	}
	*x = DeckRenamed_PacketID(value)
	return nil
}

type BoosterList_PacketID int32

const (
	BoosterList_ID BoosterList_PacketID = 224
)

var BoosterList_PacketID_name = map[int32]string{
	224: "ID",
}
var BoosterList_PacketID_value = map[string]int32{
	"ID": 224,
}

func (x BoosterList_PacketID) Enum() *BoosterList_PacketID {
	p := new(BoosterList_PacketID)
	*p = x
	return p
}
func (x BoosterList_PacketID) String() string {
	return proto.EnumName(BoosterList_PacketID_name, int32(x))
}
func (x *BoosterList_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoosterList_PacketID_value, data, "BoosterList_PacketID")
	if err != nil {
		return err
	}
	*x = BoosterList_PacketID(value)
	return nil
}

type BoosterTallyList_PacketID int32

const (
	BoosterTallyList_ID BoosterTallyList_PacketID = 313
)

var BoosterTallyList_PacketID_name = map[int32]string{
	313: "ID",
}
var BoosterTallyList_PacketID_value = map[string]int32{
	"ID": 313,
}

func (x BoosterTallyList_PacketID) Enum() *BoosterTallyList_PacketID {
	p := new(BoosterTallyList_PacketID)
	*p = x
	return p
}
func (x BoosterTallyList_PacketID) String() string {
	return proto.EnumName(BoosterTallyList_PacketID_name, int32(x))
}
func (x *BoosterTallyList_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoosterTallyList_PacketID_value, data, "BoosterTallyList_PacketID")
	if err != nil {
		return err
	}
	*x = BoosterTallyList_PacketID(value)
	return nil
}

type BoosterContent_PacketID int32

const (
	BoosterContent_ID BoosterContent_PacketID = 226
)

var BoosterContent_PacketID_name = map[int32]string{
	226: "ID",
}
var BoosterContent_PacketID_value = map[string]int32{
	"ID": 226,
}

func (x BoosterContent_PacketID) Enum() *BoosterContent_PacketID {
	p := new(BoosterContent_PacketID)
	*p = x
	return p
}
func (x BoosterContent_PacketID) String() string {
	return proto.EnumName(BoosterContent_PacketID_name, int32(x))
}
func (x *BoosterContent_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BoosterContent_PacketID_value, data, "BoosterContent_PacketID")
	if err != nil {
		return err
	}
	*x = BoosterContent_PacketID(value)
	return nil
}

type MedalInfo_PacketID int32

const (
	MedalInfo_ID MedalInfo_PacketID = 232
)

var MedalInfo_PacketID_name = map[int32]string{
	232: "ID",
}
var MedalInfo_PacketID_value = map[string]int32{
	"ID": 232,
}

func (x MedalInfo_PacketID) Enum() *MedalInfo_PacketID {
	p := new(MedalInfo_PacketID)
	*p = x
	return p
}
func (x MedalInfo_PacketID) String() string {
	return proto.EnumName(MedalInfo_PacketID_name, int32(x))
}
func (x *MedalInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MedalInfo_PacketID_value, data, "MedalInfo_PacketID")
	if err != nil {
		return err
	}
	*x = MedalInfo_PacketID(value)
	return nil
}

type MedalHistory_PacketID int32

const (
	MedalHistory_ID MedalHistory_PacketID = 234
)

var MedalHistory_PacketID_name = map[int32]string{
	234: "ID",
}
var MedalHistory_PacketID_value = map[string]int32{
	"ID": 234,
}

func (x MedalHistory_PacketID) Enum() *MedalHistory_PacketID {
	p := new(MedalHistory_PacketID)
	*p = x
	return p
}
func (x MedalHistory_PacketID) String() string {
	return proto.EnumName(MedalHistory_PacketID_name, int32(x))
}
func (x *MedalHistory_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MedalHistory_PacketID_value, data, "MedalHistory_PacketID")
	if err != nil {
		return err
	}
	*x = MedalHistory_PacketID(value)
	return nil
}

type GamesInfo_PacketID int32

const (
	GamesInfo_ID GamesInfo_PacketID = 208
)

var GamesInfo_PacketID_name = map[int32]string{
	208: "ID",
}
var GamesInfo_PacketID_value = map[string]int32{
	"ID": 208,
}

func (x GamesInfo_PacketID) Enum() *GamesInfo_PacketID {
	p := new(GamesInfo_PacketID)
	*p = x
	return p
}
func (x GamesInfo_PacketID) String() string {
	return proto.EnumName(GamesInfo_PacketID_name, int32(x))
}
func (x *GamesInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamesInfo_PacketID_value, data, "GamesInfo_PacketID")
	if err != nil {
		return err
	}
	*x = GamesInfo_PacketID(value)
	return nil
}

type PurchaseMethod_PacketID int32

const (
	PurchaseMethod_ID PurchaseMethod_PacketID = 272
)

var PurchaseMethod_PacketID_name = map[int32]string{
	272: "ID",
}
var PurchaseMethod_PacketID_value = map[string]int32{
	"ID": 272,
}

func (x PurchaseMethod_PacketID) Enum() *PurchaseMethod_PacketID {
	p := new(PurchaseMethod_PacketID)
	*p = x
	return p
}
func (x PurchaseMethod_PacketID) String() string {
	return proto.EnumName(PurchaseMethod_PacketID_name, int32(x))
}
func (x *PurchaseMethod_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseMethod_PacketID_value, data, "PurchaseMethod_PacketID")
	if err != nil {
		return err
	}
	*x = PurchaseMethod_PacketID(value)
	return nil
}

type PurchaseResponse_PacketID int32

const (
	PurchaseResponse_ID PurchaseResponse_PacketID = 256
)

var PurchaseResponse_PacketID_name = map[int32]string{
	256: "ID",
}
var PurchaseResponse_PacketID_value = map[string]int32{
	"ID": 256,
}

func (x PurchaseResponse_PacketID) Enum() *PurchaseResponse_PacketID {
	p := new(PurchaseResponse_PacketID)
	*p = x
	return p
}
func (x PurchaseResponse_PacketID) String() string {
	return proto.EnumName(PurchaseResponse_PacketID_name, int32(x))
}
func (x *PurchaseResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseResponse_PacketID_value, data, "PurchaseResponse_PacketID")
	if err != nil {
		return err
	}
	*x = PurchaseResponse_PacketID(value)
	return nil
}

type BattlePayConfigResponse_PacketID int32

const (
	BattlePayConfigResponse_ID BattlePayConfigResponse_PacketID = 238
)

var BattlePayConfigResponse_PacketID_name = map[int32]string{
	238: "ID",
}
var BattlePayConfigResponse_PacketID_value = map[string]int32{
	"ID": 238,
}

func (x BattlePayConfigResponse_PacketID) Enum() *BattlePayConfigResponse_PacketID {
	p := new(BattlePayConfigResponse_PacketID)
	*p = x
	return p
}
func (x BattlePayConfigResponse_PacketID) String() string {
	return proto.EnumName(BattlePayConfigResponse_PacketID_name, int32(x))
}
func (x *BattlePayConfigResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BattlePayConfigResponse_PacketID_value, data, "BattlePayConfigResponse_PacketID")
	if err != nil {
		return err
	}
	*x = BattlePayConfigResponse_PacketID(value)
	return nil
}

type BattlePayStatusResponse_PurchaseState int32

const (
	BattlePayStatusResponse_PS_READY         BattlePayStatusResponse_PurchaseState = 0
	BattlePayStatusResponse_PS_CHECK_RESULTS BattlePayStatusResponse_PurchaseState = 1
	BattlePayStatusResponse_PS_ERROR         BattlePayStatusResponse_PurchaseState = 2
)

var BattlePayStatusResponse_PurchaseState_name = map[int32]string{
	0: "PS_READY",
	1: "PS_CHECK_RESULTS",
	2: "PS_ERROR",
}
var BattlePayStatusResponse_PurchaseState_value = map[string]int32{
	"PS_READY":         0,
	"PS_CHECK_RESULTS": 1,
	"PS_ERROR":         2,
}

func (x BattlePayStatusResponse_PurchaseState) Enum() *BattlePayStatusResponse_PurchaseState {
	p := new(BattlePayStatusResponse_PurchaseState)
	*p = x
	return p
}
func (x BattlePayStatusResponse_PurchaseState) String() string {
	return proto.EnumName(BattlePayStatusResponse_PurchaseState_name, int32(x))
}
func (x *BattlePayStatusResponse_PurchaseState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BattlePayStatusResponse_PurchaseState_value, data, "BattlePayStatusResponse_PurchaseState")
	if err != nil {
		return err
	}
	*x = BattlePayStatusResponse_PurchaseState(value)
	return nil
}

type BattlePayStatusResponse_PacketID int32

const (
	BattlePayStatusResponse_ID BattlePayStatusResponse_PacketID = 265
)

var BattlePayStatusResponse_PacketID_name = map[int32]string{
	265: "ID",
}
var BattlePayStatusResponse_PacketID_value = map[string]int32{
	"ID": 265,
}

func (x BattlePayStatusResponse_PacketID) Enum() *BattlePayStatusResponse_PacketID {
	p := new(BattlePayStatusResponse_PacketID)
	*p = x
	return p
}
func (x BattlePayStatusResponse_PacketID) String() string {
	return proto.EnumName(BattlePayStatusResponse_PacketID_name, int32(x))
}
func (x *BattlePayStatusResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BattlePayStatusResponse_PacketID_value, data, "BattlePayStatusResponse_PacketID")
	if err != nil {
		return err
	}
	*x = BattlePayStatusResponse_PacketID(value)
	return nil
}

type MassDisenchantResponse_PacketID int32

const (
	MassDisenchantResponse_ID MassDisenchantResponse_PacketID = 269
)

var MassDisenchantResponse_PacketID_name = map[int32]string{
	269: "ID",
}
var MassDisenchantResponse_PacketID_value = map[string]int32{
	"ID": 269,
}

func (x MassDisenchantResponse_PacketID) Enum() *MassDisenchantResponse_PacketID {
	p := new(MassDisenchantResponse_PacketID)
	*p = x
	return p
}
func (x MassDisenchantResponse_PacketID) String() string {
	return proto.EnumName(MassDisenchantResponse_PacketID_name, int32(x))
}
func (x *MassDisenchantResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MassDisenchantResponse_PacketID_value, data, "MassDisenchantResponse_PacketID")
	if err != nil {
		return err
	}
	*x = MassDisenchantResponse_PacketID(value)
	return nil
}

type PlayerRecords_PacketID int32

const (
	PlayerRecords_ID PlayerRecords_PacketID = 270
)

var PlayerRecords_PacketID_name = map[int32]string{
	270: "ID",
}
var PlayerRecords_PacketID_value = map[string]int32{
	"ID": 270,
}

func (x PlayerRecords_PacketID) Enum() *PlayerRecords_PacketID {
	p := new(PlayerRecords_PacketID)
	*p = x
	return p
}
func (x PlayerRecords_PacketID) String() string {
	return proto.EnumName(PlayerRecords_PacketID_name, int32(x))
}
func (x *PlayerRecords_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayerRecords_PacketID_value, data, "PlayerRecords_PacketID")
	if err != nil {
		return err
	}
	*x = PlayerRecords_PacketID(value)
	return nil
}

type RewardProgress_PacketID int32

const (
	RewardProgress_ID RewardProgress_PacketID = 271
)

var RewardProgress_PacketID_name = map[int32]string{
	271: "ID",
}
var RewardProgress_PacketID_value = map[string]int32{
	"ID": 271,
}

func (x RewardProgress_PacketID) Enum() *RewardProgress_PacketID {
	p := new(RewardProgress_PacketID)
	*p = x
	return p
}
func (x RewardProgress_PacketID) String() string {
	return proto.EnumName(RewardProgress_PacketID_name, int32(x))
}
func (x *RewardProgress_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RewardProgress_PacketID_value, data, "RewardProgress_PacketID")
	if err != nil {
		return err
	}
	*x = RewardProgress_PacketID(value)
	return nil
}

type CancelPurchaseResponse_CancelResult int32

const (
	CancelPurchaseResponse_CR_SUCCESS           CancelPurchaseResponse_CancelResult = 1
	CancelPurchaseResponse_CR_NOT_ALLOWED       CancelPurchaseResponse_CancelResult = 2
	CancelPurchaseResponse_CR_NOTHING_TO_CANCEL CancelPurchaseResponse_CancelResult = 3
)

var CancelPurchaseResponse_CancelResult_name = map[int32]string{
	1: "CR_SUCCESS",
	2: "CR_NOT_ALLOWED",
	3: "CR_NOTHING_TO_CANCEL",
}
var CancelPurchaseResponse_CancelResult_value = map[string]int32{
	"CR_SUCCESS":           1,
	"CR_NOT_ALLOWED":       2,
	"CR_NOTHING_TO_CANCEL": 3,
}

func (x CancelPurchaseResponse_CancelResult) Enum() *CancelPurchaseResponse_CancelResult {
	p := new(CancelPurchaseResponse_CancelResult)
	*p = x
	return p
}
func (x CancelPurchaseResponse_CancelResult) String() string {
	return proto.EnumName(CancelPurchaseResponse_CancelResult_name, int32(x))
}
func (x *CancelPurchaseResponse_CancelResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelPurchaseResponse_CancelResult_value, data, "CancelPurchaseResponse_CancelResult")
	if err != nil {
		return err
	}
	*x = CancelPurchaseResponse_CancelResult(value)
	return nil
}

type CancelPurchaseResponse_PacketID int32

const (
	CancelPurchaseResponse_ID CancelPurchaseResponse_PacketID = 275
)

var CancelPurchaseResponse_PacketID_name = map[int32]string{
	275: "ID",
}
var CancelPurchaseResponse_PacketID_value = map[string]int32{
	"ID": 275,
}

func (x CancelPurchaseResponse_PacketID) Enum() *CancelPurchaseResponse_PacketID {
	p := new(CancelPurchaseResponse_PacketID)
	*p = x
	return p
}
func (x CancelPurchaseResponse_PacketID) String() string {
	return proto.EnumName(CancelPurchaseResponse_PacketID_name, int32(x))
}
func (x *CancelPurchaseResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelPurchaseResponse_PacketID_value, data, "CancelPurchaseResponse_PacketID")
	if err != nil {
		return err
	}
	*x = CancelPurchaseResponse_PacketID(value)
	return nil
}

type PurchaseWithGoldResponse_PurchaseResult int32

const (
	PurchaseWithGoldResponse_PR_SUCCESS            PurchaseWithGoldResponse_PurchaseResult = 1
	PurchaseWithGoldResponse_PR_INSUFFICIENT_FUNDS PurchaseWithGoldResponse_PurchaseResult = 2
	PurchaseWithGoldResponse_PR_PRODUCT_NA         PurchaseWithGoldResponse_PurchaseResult = 3
	PurchaseWithGoldResponse_PR_FEATURE_NA         PurchaseWithGoldResponse_PurchaseResult = 4
	PurchaseWithGoldResponse_PR_INVALID_QUANTITY   PurchaseWithGoldResponse_PurchaseResult = 5
)

var PurchaseWithGoldResponse_PurchaseResult_name = map[int32]string{
	1: "PR_SUCCESS",
	2: "PR_INSUFFICIENT_FUNDS",
	3: "PR_PRODUCT_NA",
	4: "PR_FEATURE_NA",
	5: "PR_INVALID_QUANTITY",
}
var PurchaseWithGoldResponse_PurchaseResult_value = map[string]int32{
	"PR_SUCCESS":            1,
	"PR_INSUFFICIENT_FUNDS": 2,
	"PR_PRODUCT_NA":         3,
	"PR_FEATURE_NA":         4,
	"PR_INVALID_QUANTITY":   5,
}

func (x PurchaseWithGoldResponse_PurchaseResult) Enum() *PurchaseWithGoldResponse_PurchaseResult {
	p := new(PurchaseWithGoldResponse_PurchaseResult)
	*p = x
	return p
}
func (x PurchaseWithGoldResponse_PurchaseResult) String() string {
	return proto.EnumName(PurchaseWithGoldResponse_PurchaseResult_name, int32(x))
}
func (x *PurchaseWithGoldResponse_PurchaseResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseWithGoldResponse_PurchaseResult_value, data, "PurchaseWithGoldResponse_PurchaseResult")
	if err != nil {
		return err
	}
	*x = PurchaseWithGoldResponse_PurchaseResult(value)
	return nil
}

type PurchaseWithGoldResponse_PacketID int32

const (
	PurchaseWithGoldResponse_ID PurchaseWithGoldResponse_PacketID = 280
)

var PurchaseWithGoldResponse_PacketID_name = map[int32]string{
	280: "ID",
}
var PurchaseWithGoldResponse_PacketID_value = map[string]int32{
	"ID": 280,
}

func (x PurchaseWithGoldResponse_PacketID) Enum() *PurchaseWithGoldResponse_PacketID {
	p := new(PurchaseWithGoldResponse_PacketID)
	*p = x
	return p
}
func (x PurchaseWithGoldResponse_PacketID) String() string {
	return proto.EnumName(PurchaseWithGoldResponse_PacketID_name, int32(x))
}
func (x *PurchaseWithGoldResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseWithGoldResponse_PacketID_value, data, "PurchaseWithGoldResponse_PacketID")
	if err != nil {
		return err
	}
	*x = PurchaseWithGoldResponse_PacketID(value)
	return nil
}

type CancelQuestResponse_PacketID int32

const (
	CancelQuestResponse_ID CancelQuestResponse_PacketID = 282
)

var CancelQuestResponse_PacketID_name = map[int32]string{
	282: "ID",
}
var CancelQuestResponse_PacketID_value = map[string]int32{
	"ID": 282,
}

func (x CancelQuestResponse_PacketID) Enum() *CancelQuestResponse_PacketID {
	p := new(CancelQuestResponse_PacketID)
	*p = x
	return p
}
func (x CancelQuestResponse_PacketID) String() string {
	return proto.EnumName(CancelQuestResponse_PacketID_name, int32(x))
}
func (x *CancelQuestResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CancelQuestResponse_PacketID_value, data, "CancelQuestResponse_PacketID")
	if err != nil {
		return err
	}
	*x = CancelQuestResponse_PacketID(value)
	return nil
}

type HeroXP_PacketID int32

const (
	HeroXP_ID HeroXP_PacketID = 283
)

var HeroXP_PacketID_name = map[int32]string{
	283: "ID",
}
var HeroXP_PacketID_value = map[string]int32{
	"ID": 283,
}

func (x HeroXP_PacketID) Enum() *HeroXP_PacketID {
	p := new(HeroXP_PacketID)
	*p = x
	return p
}
func (x HeroXP_PacketID) String() string {
	return proto.EnumName(HeroXP_PacketID_name, int32(x))
}
func (x *HeroXP_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HeroXP_PacketID_value, data, "HeroXP_PacketID")
	if err != nil {
		return err
	}
	*x = HeroXP_PacketID(value)
	return nil
}

type SetCardBackResponse_PacketID int32

const (
	SetCardBackResponse_ID SetCardBackResponse_PacketID = 292
)

var SetCardBackResponse_PacketID_name = map[int32]string{
	292: "ID",
}
var SetCardBackResponse_PacketID_value = map[string]int32{
	"ID": 292,
}

func (x SetCardBackResponse_PacketID) Enum() *SetCardBackResponse_PacketID {
	p := new(SetCardBackResponse_PacketID)
	*p = x
	return p
}
func (x SetCardBackResponse_PacketID) String() string {
	return proto.EnumName(SetCardBackResponse_PacketID_name, int32(x))
}
func (x *SetCardBackResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetCardBackResponse_PacketID_value, data, "SetCardBackResponse_PacketID")
	if err != nil {
		return err
	}
	*x = SetCardBackResponse_PacketID(value)
	return nil
}

type ThirdPartyPurchaseStatusResponse_Status int32

const (
	ThirdPartyPurchaseStatusResponse_NOT_FOUND   ThirdPartyPurchaseStatusResponse_Status = 1
	ThirdPartyPurchaseStatusResponse_SUCCEEDED   ThirdPartyPurchaseStatusResponse_Status = 2
	ThirdPartyPurchaseStatusResponse_FAILED      ThirdPartyPurchaseStatusResponse_Status = 3
	ThirdPartyPurchaseStatusResponse_IN_PROGRESS ThirdPartyPurchaseStatusResponse_Status = 4
)

var ThirdPartyPurchaseStatusResponse_Status_name = map[int32]string{
	1: "NOT_FOUND",
	2: "SUCCEEDED",
	3: "FAILED",
	4: "IN_PROGRESS",
}
var ThirdPartyPurchaseStatusResponse_Status_value = map[string]int32{
	"NOT_FOUND":   1,
	"SUCCEEDED":   2,
	"FAILED":      3,
	"IN_PROGRESS": 4,
}

func (x ThirdPartyPurchaseStatusResponse_Status) Enum() *ThirdPartyPurchaseStatusResponse_Status {
	p := new(ThirdPartyPurchaseStatusResponse_Status)
	*p = x
	return p
}
func (x ThirdPartyPurchaseStatusResponse_Status) String() string {
	return proto.EnumName(ThirdPartyPurchaseStatusResponse_Status_name, int32(x))
}
func (x *ThirdPartyPurchaseStatusResponse_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ThirdPartyPurchaseStatusResponse_Status_value, data, "ThirdPartyPurchaseStatusResponse_Status")
	if err != nil {
		return err
	}
	*x = ThirdPartyPurchaseStatusResponse_Status(value)
	return nil
}

type ThirdPartyPurchaseStatusResponse_PacketID int32

const (
	ThirdPartyPurchaseStatusResponse_ID ThirdPartyPurchaseStatusResponse_PacketID = 295
)

var ThirdPartyPurchaseStatusResponse_PacketID_name = map[int32]string{
	295: "ID",
}
var ThirdPartyPurchaseStatusResponse_PacketID_value = map[string]int32{
	"ID": 295,
}

func (x ThirdPartyPurchaseStatusResponse_PacketID) Enum() *ThirdPartyPurchaseStatusResponse_PacketID {
	p := new(ThirdPartyPurchaseStatusResponse_PacketID)
	*p = x
	return p
}
func (x ThirdPartyPurchaseStatusResponse_PacketID) String() string {
	return proto.EnumName(ThirdPartyPurchaseStatusResponse_PacketID_name, int32(x))
}
func (x *ThirdPartyPurchaseStatusResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ThirdPartyPurchaseStatusResponse_PacketID_value, data, "ThirdPartyPurchaseStatusResponse_PacketID")
	if err != nil {
		return err
	}
	*x = ThirdPartyPurchaseStatusResponse_PacketID(value)
	return nil
}

type SetProgressResponse_Result int32

const (
	SetProgressResponse_SUCCESS      SetProgressResponse_Result = 1
	SetProgressResponse_FAILED       SetProgressResponse_Result = 2
	SetProgressResponse_ALREADY_DONE SetProgressResponse_Result = 3
)

var SetProgressResponse_Result_name = map[int32]string{
	1: "SUCCESS",
	2: "FAILED",
	3: "ALREADY_DONE",
}
var SetProgressResponse_Result_value = map[string]int32{
	"SUCCESS":      1,
	"FAILED":       2,
	"ALREADY_DONE": 3,
}

func (x SetProgressResponse_Result) Enum() *SetProgressResponse_Result {
	p := new(SetProgressResponse_Result)
	*p = x
	return p
}
func (x SetProgressResponse_Result) String() string {
	return proto.EnumName(SetProgressResponse_Result_name, int32(x))
}
func (x *SetProgressResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetProgressResponse_Result_value, data, "SetProgressResponse_Result")
	if err != nil {
		return err
	}
	*x = SetProgressResponse_Result(value)
	return nil
}

type SetProgressResponse_PacketID int32

const (
	SetProgressResponse_ID SetProgressResponse_PacketID = 296
)

var SetProgressResponse_PacketID_name = map[int32]string{
	296: "ID",
}
var SetProgressResponse_PacketID_value = map[string]int32{
	"ID": 296,
}

func (x SetProgressResponse_PacketID) Enum() *SetProgressResponse_PacketID {
	p := new(SetProgressResponse_PacketID)
	*p = x
	return p
}
func (x SetProgressResponse_PacketID) String() string {
	return proto.EnumName(SetProgressResponse_PacketID_name, int32(x))
}
func (x *SetProgressResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetProgressResponse_PacketID_value, data, "SetProgressResponse_PacketID")
	if err != nil {
		return err
	}
	*x = SetProgressResponse_PacketID(value)
	return nil
}

type TriggerEventResponse_PacketID int32

const (
	TriggerEventResponse_ID TriggerEventResponse_PacketID = 299
)

var TriggerEventResponse_PacketID_name = map[int32]string{
	299: "ID",
}
var TriggerEventResponse_PacketID_value = map[string]int32{
	"ID": 299,
}

func (x TriggerEventResponse_PacketID) Enum() *TriggerEventResponse_PacketID {
	p := new(TriggerEventResponse_PacketID)
	*p = x
	return p
}
func (x TriggerEventResponse_PacketID) String() string {
	return proto.EnumName(TriggerEventResponse_PacketID_name, int32(x))
}
func (x *TriggerEventResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TriggerEventResponse_PacketID_value, data, "TriggerEventResponse_PacketID")
	if err != nil {
		return err
	}
	*x = TriggerEventResponse_PacketID(value)
	return nil
}

type AssetsVersionResponse_PacketID int32

const (
	AssetsVersionResponse_ID AssetsVersionResponse_PacketID = 304
)

var AssetsVersionResponse_PacketID_name = map[int32]string{
	304: "ID",
}
var AssetsVersionResponse_PacketID_value = map[string]int32{
	"ID": 304,
}

func (x AssetsVersionResponse_PacketID) Enum() *AssetsVersionResponse_PacketID {
	p := new(AssetsVersionResponse_PacketID)
	*p = x
	return p
}
func (x AssetsVersionResponse_PacketID) String() string {
	return proto.EnumName(AssetsVersionResponse_PacketID_name, int32(x))
}
func (x *AssetsVersionResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AssetsVersionResponse_PacketID_value, data, "AssetsVersionResponse_PacketID")
	if err != nil {
		return err
	}
	*x = AssetsVersionResponse_PacketID(value)
	return nil
}

type AdventureProgressResponse_PacketID int32

const (
	AdventureProgressResponse_ID AdventureProgressResponse_PacketID = 306
)

var AdventureProgressResponse_PacketID_name = map[int32]string{
	306: "ID",
}
var AdventureProgressResponse_PacketID_value = map[string]int32{
	"ID": 306,
}

func (x AdventureProgressResponse_PacketID) Enum() *AdventureProgressResponse_PacketID {
	p := new(AdventureProgressResponse_PacketID)
	*p = x
	return p
}
func (x AdventureProgressResponse_PacketID) String() string {
	return proto.EnumName(AdventureProgressResponse_PacketID_name, int32(x))
}
func (x *AdventureProgressResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureProgressResponse_PacketID_value, data, "AdventureProgressResponse_PacketID")
	if err != nil {
		return err
	}
	*x = AdventureProgressResponse_PacketID(value)
	return nil
}

type AccountLicenseAchieveResponse_Result int32

const (
	AccountLicenseAchieveResponse_INVALID_ACHIEVE AccountLicenseAchieveResponse_Result = 1
	AccountLicenseAchieveResponse_NOT_ACTIVE      AccountLicenseAchieveResponse_Result = 2
	AccountLicenseAchieveResponse_IN_PROGRESS     AccountLicenseAchieveResponse_Result = 3
	AccountLicenseAchieveResponse_COMPLETE        AccountLicenseAchieveResponse_Result = 4
	AccountLicenseAchieveResponse_STATUS_UNKNOWN  AccountLicenseAchieveResponse_Result = 5
)

var AccountLicenseAchieveResponse_Result_name = map[int32]string{
	1: "INVALID_ACHIEVE",
	2: "NOT_ACTIVE",
	3: "IN_PROGRESS",
	4: "COMPLETE",
	5: "STATUS_UNKNOWN",
}
var AccountLicenseAchieveResponse_Result_value = map[string]int32{
	"INVALID_ACHIEVE": 1,
	"NOT_ACTIVE":      2,
	"IN_PROGRESS":     3,
	"COMPLETE":        4,
	"STATUS_UNKNOWN":  5,
}

func (x AccountLicenseAchieveResponse_Result) Enum() *AccountLicenseAchieveResponse_Result {
	p := new(AccountLicenseAchieveResponse_Result)
	*p = x
	return p
}
func (x AccountLicenseAchieveResponse_Result) String() string {
	return proto.EnumName(AccountLicenseAchieveResponse_Result_name, int32(x))
}
func (x *AccountLicenseAchieveResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountLicenseAchieveResponse_Result_value, data, "AccountLicenseAchieveResponse_Result")
	if err != nil {
		return err
	}
	*x = AccountLicenseAchieveResponse_Result(value)
	return nil
}

type AccountLicenseAchieveResponse_PacketID int32

const (
	AccountLicenseAchieveResponse_ID AccountLicenseAchieveResponse_PacketID = 311
)

var AccountLicenseAchieveResponse_PacketID_name = map[int32]string{
	311: "ID",
}
var AccountLicenseAchieveResponse_PacketID_value = map[string]int32{
	"ID": 311,
}

func (x AccountLicenseAchieveResponse_PacketID) Enum() *AccountLicenseAchieveResponse_PacketID {
	p := new(AccountLicenseAchieveResponse_PacketID)
	*p = x
	return p
}
func (x AccountLicenseAchieveResponse_PacketID) String() string {
	return proto.EnumName(AccountLicenseAchieveResponse_PacketID_name, int32(x))
}
func (x *AccountLicenseAchieveResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountLicenseAchieveResponse_PacketID_value, data, "AccountLicenseAchieveResponse_PacketID")
	if err != nil {
		return err
	}
	*x = AccountLicenseAchieveResponse_PacketID(value)
	return nil
}

type SubscribeResponse_ResponseResult int32

const (
	SubscribeResponse_SUCCESS            SubscribeResponse_ResponseResult = 1
	SubscribeResponse_FAILED_UNAVAILABLE SubscribeResponse_ResponseResult = 2
)

var SubscribeResponse_ResponseResult_name = map[int32]string{
	1: "SUCCESS",
	2: "FAILED_UNAVAILABLE",
}
var SubscribeResponse_ResponseResult_value = map[string]int32{
	"SUCCESS":            1,
	"FAILED_UNAVAILABLE": 2,
}

func (x SubscribeResponse_ResponseResult) Enum() *SubscribeResponse_ResponseResult {
	p := new(SubscribeResponse_ResponseResult)
	*p = x
	return p
}
func (x SubscribeResponse_ResponseResult) String() string {
	return proto.EnumName(SubscribeResponse_ResponseResult_name, int32(x))
}
func (x *SubscribeResponse_ResponseResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubscribeResponse_ResponseResult_value, data, "SubscribeResponse_ResponseResult")
	if err != nil {
		return err
	}
	*x = SubscribeResponse_ResponseResult(value)
	return nil
}

type SubscribeResponse_PacketID int32

const (
	SubscribeResponse_ID SubscribeResponse_PacketID = 315
)

var SubscribeResponse_PacketID_name = map[int32]string{
	315: "ID",
}
var SubscribeResponse_PacketID_value = map[string]int32{
	"ID": 315,
}

func (x SubscribeResponse_PacketID) Enum() *SubscribeResponse_PacketID {
	p := new(SubscribeResponse_PacketID)
	*p = x
	return p
}
func (x SubscribeResponse_PacketID) String() string {
	return proto.EnumName(SubscribeResponse_PacketID_name, int32(x))
}
func (x *SubscribeResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SubscribeResponse_PacketID_value, data, "SubscribeResponse_PacketID")
	if err != nil {
		return err
	}
	*x = SubscribeResponse_PacketID(value)
	return nil
}

type TavernBrawlInfo_PacketID int32

const (
	TavernBrawlInfo_ID TavernBrawlInfo_PacketID = 316
)

var TavernBrawlInfo_PacketID_name = map[int32]string{
	316: "ID",
}
var TavernBrawlInfo_PacketID_value = map[string]int32{
	"ID": 316,
}

func (x TavernBrawlInfo_PacketID) Enum() *TavernBrawlInfo_PacketID {
	p := new(TavernBrawlInfo_PacketID)
	*p = x
	return p
}
func (x TavernBrawlInfo_PacketID) String() string {
	return proto.EnumName(TavernBrawlInfo_PacketID_name, int32(x))
}
func (x *TavernBrawlInfo_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TavernBrawlInfo_PacketID_value, data, "TavernBrawlInfo_PacketID")
	if err != nil {
		return err
	}
	*x = TavernBrawlInfo_PacketID(value)
	return nil
}

type TavernBrawlPlayerRecordResponse_PacketID int32

const (
	TavernBrawlPlayerRecordResponse_ID TavernBrawlPlayerRecordResponse_PacketID = 317
)

var TavernBrawlPlayerRecordResponse_PacketID_name = map[int32]string{
	317: "ID",
}
var TavernBrawlPlayerRecordResponse_PacketID_value = map[string]int32{
	"ID": 317,
}

func (x TavernBrawlPlayerRecordResponse_PacketID) Enum() *TavernBrawlPlayerRecordResponse_PacketID {
	p := new(TavernBrawlPlayerRecordResponse_PacketID)
	*p = x
	return p
}
func (x TavernBrawlPlayerRecordResponse_PacketID) String() string {
	return proto.EnumName(TavernBrawlPlayerRecordResponse_PacketID_name, int32(x))
}
func (x *TavernBrawlPlayerRecordResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TavernBrawlPlayerRecordResponse_PacketID_value, data, "TavernBrawlPlayerRecordResponse_PacketID")
	if err != nil {
		return err
	}
	*x = TavernBrawlPlayerRecordResponse_PacketID(value)
	return nil
}

type FavoriteHeroesResponse_PacketID int32

const (
	FavoriteHeroesResponse_ID FavoriteHeroesResponse_PacketID = 318
)

var FavoriteHeroesResponse_PacketID_name = map[int32]string{
	318: "ID",
}
var FavoriteHeroesResponse_PacketID_value = map[string]int32{
	"ID": 318,
}

func (x FavoriteHeroesResponse_PacketID) Enum() *FavoriteHeroesResponse_PacketID {
	p := new(FavoriteHeroesResponse_PacketID)
	*p = x
	return p
}
func (x FavoriteHeroesResponse_PacketID) String() string {
	return proto.EnumName(FavoriteHeroesResponse_PacketID_name, int32(x))
}
func (x *FavoriteHeroesResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FavoriteHeroesResponse_PacketID_value, data, "FavoriteHeroesResponse_PacketID")
	if err != nil {
		return err
	}
	*x = FavoriteHeroesResponse_PacketID(value)
	return nil
}

type SetFavoriteHeroResponse_PacketID int32

const (
	SetFavoriteHeroResponse_ID SetFavoriteHeroResponse_PacketID = 320
)

var SetFavoriteHeroResponse_PacketID_name = map[int32]string{
	320: "ID",
}
var SetFavoriteHeroResponse_PacketID_value = map[string]int32{
	"ID": 320,
}

func (x SetFavoriteHeroResponse_PacketID) Enum() *SetFavoriteHeroResponse_PacketID {
	p := new(SetFavoriteHeroResponse_PacketID)
	*p = x
	return p
}
func (x SetFavoriteHeroResponse_PacketID) String() string {
	return proto.EnumName(SetFavoriteHeroResponse_PacketID_name, int32(x))
}
func (x *SetFavoriteHeroResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SetFavoriteHeroResponse_PacketID_value, data, "SetFavoriteHeroResponse_PacketID")
	if err != nil {
		return err
	}
	*x = SetFavoriteHeroResponse_PacketID(value)
	return nil
}

type GetAssetResponse_PacketID int32

const (
	GetAssetResponse_ID GetAssetResponse_PacketID = 322
)

var GetAssetResponse_PacketID_name = map[int32]string{
	322: "ID",
}
var GetAssetResponse_PacketID_value = map[string]int32{
	"ID": 322,
}

func (x GetAssetResponse_PacketID) Enum() *GetAssetResponse_PacketID {
	p := new(GetAssetResponse_PacketID)
	*p = x
	return p
}
func (x GetAssetResponse_PacketID) String() string {
	return proto.EnumName(GetAssetResponse_PacketID_name, int32(x))
}
func (x *GetAssetResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetAssetResponse_PacketID_value, data, "GetAssetResponse_PacketID")
	if err != nil {
		return err
	}
	*x = GetAssetResponse_PacketID(value)
	return nil
}

type DebugCommandResponse_PacketID int32

const (
	DebugCommandResponse_ID DebugCommandResponse_PacketID = 324
)

var DebugCommandResponse_PacketID_name = map[int32]string{
	324: "ID",
}
var DebugCommandResponse_PacketID_value = map[string]int32{
	"ID": 324,
}

func (x DebugCommandResponse_PacketID) Enum() *DebugCommandResponse_PacketID {
	p := new(DebugCommandResponse_PacketID)
	*p = x
	return p
}
func (x DebugCommandResponse_PacketID) String() string {
	return proto.EnumName(DebugCommandResponse_PacketID_name, int32(x))
}
func (x *DebugCommandResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DebugCommandResponse_PacketID_value, data, "DebugCommandResponse_PacketID")
	if err != nil {
		return err
	}
	*x = DebugCommandResponse_PacketID(value)
	return nil
}

type AccountLicensesInfoResponse_PacketID int32

const (
	AccountLicensesInfoResponse_ID AccountLicensesInfoResponse_PacketID = 325
)

var AccountLicensesInfoResponse_PacketID_name = map[int32]string{
	325: "ID",
}
var AccountLicensesInfoResponse_PacketID_value = map[string]int32{
	"ID": 325,
}

func (x AccountLicensesInfoResponse_PacketID) Enum() *AccountLicensesInfoResponse_PacketID {
	p := new(AccountLicensesInfoResponse_PacketID)
	*p = x
	return p
}
func (x AccountLicensesInfoResponse_PacketID) String() string {
	return proto.EnumName(AccountLicensesInfoResponse_PacketID_name, int32(x))
}
func (x *AccountLicensesInfoResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountLicensesInfoResponse_PacketID_value, data, "AccountLicensesInfoResponse_PacketID")
	if err != nil {
		return err
	}
	*x = AccountLicensesInfoResponse_PacketID(value)
	return nil
}

type GenericResponse_Result int32

const (
	GenericResponse_RESULT_OK                   GenericResponse_Result = 0
	GenericResponse_RESULT_REQUEST_IN_PROCESS   GenericResponse_Result = 1
	GenericResponse_RESULT_REQUEST_COMPLETE     GenericResponse_Result = 2
	GenericResponse_RESULT_UNKNOWN_ERROR        GenericResponse_Result = 100
	GenericResponse_RESULT_INTERNAL_ERROR       GenericResponse_Result = 101
	GenericResponse_RESULT_DB_ERROR             GenericResponse_Result = 102
	GenericResponse_RESULT_INVALID_REQUEST      GenericResponse_Result = 103
	GenericResponse_RESULT_LOGIN_LOAD           GenericResponse_Result = 104
	GenericResponse_RESULT_DATA_MIGRATION_ERROR GenericResponse_Result = 105
)

var GenericResponse_Result_name = map[int32]string{
	0:   "RESULT_OK",
	1:   "RESULT_REQUEST_IN_PROCESS",
	2:   "RESULT_REQUEST_COMPLETE",
	100: "RESULT_UNKNOWN_ERROR",
	101: "RESULT_INTERNAL_ERROR",
	102: "RESULT_DB_ERROR",
	103: "RESULT_INVALID_REQUEST",
	104: "RESULT_LOGIN_LOAD",
	105: "RESULT_DATA_MIGRATION_ERROR",
}
var GenericResponse_Result_value = map[string]int32{
	"RESULT_OK":                   0,
	"RESULT_REQUEST_IN_PROCESS":   1,
	"RESULT_REQUEST_COMPLETE":     2,
	"RESULT_UNKNOWN_ERROR":        100,
	"RESULT_INTERNAL_ERROR":       101,
	"RESULT_DB_ERROR":             102,
	"RESULT_INVALID_REQUEST":      103,
	"RESULT_LOGIN_LOAD":           104,
	"RESULT_DATA_MIGRATION_ERROR": 105,
}

func (x GenericResponse_Result) Enum() *GenericResponse_Result {
	p := new(GenericResponse_Result)
	*p = x
	return p
}
func (x GenericResponse_Result) String() string {
	return proto.EnumName(GenericResponse_Result_name, int32(x))
}
func (x *GenericResponse_Result) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GenericResponse_Result_value, data, "GenericResponse_Result")
	if err != nil {
		return err
	}
	*x = GenericResponse_Result(value)
	return nil
}

type GenericResponse_PacketID int32

const (
	GenericResponse_ID GenericResponse_PacketID = 326
)

var GenericResponse_PacketID_name = map[int32]string{
	326: "ID",
}
var GenericResponse_PacketID_value = map[string]int32{
	"ID": 326,
}

func (x GenericResponse_PacketID) Enum() *GenericResponse_PacketID {
	p := new(GenericResponse_PacketID)
	*p = x
	return p
}
func (x GenericResponse_PacketID) String() string {
	return proto.EnumName(GenericResponse_PacketID_name, int32(x))
}
func (x *GenericResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GenericResponse_PacketID_value, data, "GenericResponse_PacketID")
	if err != nil {
		return err
	}
	*x = GenericResponse_PacketID(value)
	return nil
}

type GenericRequestList_PacketID int32

const (
	GenericRequestList_ID     GenericRequestList_PacketID = 327
	GenericRequestList_System GenericRequestList_PacketID = 0
)

var GenericRequestList_PacketID_name = map[int32]string{
	327: "ID",
	0:   "System",
}
var GenericRequestList_PacketID_value = map[string]int32{
	"ID":     327,
	"System": 0,
}

func (x GenericRequestList_PacketID) Enum() *GenericRequestList_PacketID {
	p := new(GenericRequestList_PacketID)
	*p = x
	return p
}
func (x GenericRequestList_PacketID) String() string {
	return proto.EnumName(GenericRequestList_PacketID_name, int32(x))
}
func (x *GenericRequestList_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GenericRequestList_PacketID_value, data, "GenericRequestList_PacketID")
	if err != nil {
		return err
	}
	*x = GenericRequestList_PacketID(value)
	return nil
}

type ClientRequestResponse_ClientRequestResponseFlags int32

const (
	ClientRequestResponse_CRRF_SERVICE_NONE        ClientRequestResponse_ClientRequestResponseFlags = 0
	ClientRequestResponse_CRRF_SERVICE_UNAVAILABLE ClientRequestResponse_ClientRequestResponseFlags = 1
)

var ClientRequestResponse_ClientRequestResponseFlags_name = map[int32]string{
	0: "CRRF_SERVICE_NONE",
	1: "CRRF_SERVICE_UNAVAILABLE",
}
var ClientRequestResponse_ClientRequestResponseFlags_value = map[string]int32{
	"CRRF_SERVICE_NONE":        0,
	"CRRF_SERVICE_UNAVAILABLE": 1,
}

func (x ClientRequestResponse_ClientRequestResponseFlags) Enum() *ClientRequestResponse_ClientRequestResponseFlags {
	p := new(ClientRequestResponse_ClientRequestResponseFlags)
	*p = x
	return p
}
func (x ClientRequestResponse_ClientRequestResponseFlags) String() string {
	return proto.EnumName(ClientRequestResponse_ClientRequestResponseFlags_name, int32(x))
}
func (x *ClientRequestResponse_ClientRequestResponseFlags) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientRequestResponse_ClientRequestResponseFlags_value, data, "ClientRequestResponse_ClientRequestResponseFlags")
	if err != nil {
		return err
	}
	*x = ClientRequestResponse_ClientRequestResponseFlags(value)
	return nil
}

type ClientRequestResponse_PacketID int32

const (
	ClientRequestResponse_ID ClientRequestResponse_PacketID = 328
)

var ClientRequestResponse_PacketID_name = map[int32]string{
	328: "ID",
}
var ClientRequestResponse_PacketID_value = map[string]int32{
	"ID": 328,
}

func (x ClientRequestResponse_PacketID) Enum() *ClientRequestResponse_PacketID {
	p := new(ClientRequestResponse_PacketID)
	*p = x
	return p
}
func (x ClientRequestResponse_PacketID) String() string {
	return proto.EnumName(ClientRequestResponse_PacketID_name, int32(x))
}
func (x *ClientRequestResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientRequestResponse_PacketID_value, data, "ClientRequestResponse_PacketID")
	if err != nil {
		return err
	}
	*x = ClientRequestResponse_PacketID(value)
	return nil
}

type CheckAccountLicensesResponse_PacketID int32

const (
	CheckAccountLicensesResponse_ID CheckAccountLicensesResponse_PacketID = 330
)

var CheckAccountLicensesResponse_PacketID_name = map[int32]string{
	330: "ID",
}
var CheckAccountLicensesResponse_PacketID_value = map[string]int32{
	"ID": 330,
}

func (x CheckAccountLicensesResponse_PacketID) Enum() *CheckAccountLicensesResponse_PacketID {
	p := new(CheckAccountLicensesResponse_PacketID)
	*p = x
	return p
}
func (x CheckAccountLicensesResponse_PacketID) String() string {
	return proto.EnumName(CheckAccountLicensesResponse_PacketID_name, int32(x))
}
func (x *CheckAccountLicensesResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckAccountLicensesResponse_PacketID_value, data, "CheckAccountLicensesResponse_PacketID")
	if err != nil {
		return err
	}
	*x = CheckAccountLicensesResponse_PacketID(value)
	return nil
}

type CheckGameLicensesResponse_PacketID int32

const (
	CheckGameLicensesResponse_ID CheckGameLicensesResponse_PacketID = 331
)

var CheckGameLicensesResponse_PacketID_name = map[int32]string{
	331: "ID",
}
var CheckGameLicensesResponse_PacketID_value = map[string]int32{
	"ID": 331,
}

func (x CheckGameLicensesResponse_PacketID) Enum() *CheckGameLicensesResponse_PacketID {
	p := new(CheckGameLicensesResponse_PacketID)
	*p = x
	return p
}
func (x CheckGameLicensesResponse_PacketID) String() string {
	return proto.EnumName(CheckGameLicensesResponse_PacketID_name, int32(x))
}
func (x *CheckGameLicensesResponse_PacketID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CheckGameLicensesResponse_PacketID_value, data, "CheckGameLicensesResponse_PacketID")
	if err != nil {
		return err
	}
	*x = CheckGameLicensesResponse_PacketID(value)
	return nil
}

type ClientOption struct {
	Index            *int32   `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	AsBool           *bool    `protobuf:"varint,2,opt,name=as_bool" json:"as_bool,omitempty"`
	AsInt32          *int32   `protobuf:"varint,3,opt,name=as_int32" json:"as_int32,omitempty"`
	AsInt64          *int64   `protobuf:"varint,4,opt,name=as_int64" json:"as_int64,omitempty"`
	AsFloat          *float32 `protobuf:"fixed32,5,opt,name=as_float" json:"as_float,omitempty"`
	AsUint64         *uint64  `protobuf:"varint,6,opt,name=as_uint64" json:"as_uint64,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ClientOption) Reset()         { *m = ClientOption{} }
func (m *ClientOption) String() string { return proto.CompactTextString(m) }
func (*ClientOption) ProtoMessage()    {}

func (m *ClientOption) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ClientOption) GetAsBool() bool {
	if m != nil && m.AsBool != nil {
		return *m.AsBool
	}
	return false
}

func (m *ClientOption) GetAsInt32() int32 {
	if m != nil && m.AsInt32 != nil {
		return *m.AsInt32
	}
	return 0
}

func (m *ClientOption) GetAsInt64() int64 {
	if m != nil && m.AsInt64 != nil {
		return *m.AsInt64
	}
	return 0
}

func (m *ClientOption) GetAsFloat() float32 {
	if m != nil && m.AsFloat != nil {
		return *m.AsFloat
	}
	return 0
}

func (m *ClientOption) GetAsUint64() uint64 {
	if m != nil && m.AsUint64 != nil {
		return *m.AsUint64
	}
	return 0
}

type PurchaseError struct {
	Error              *PurchaseError_Error `protobuf:"varint,1,req,name=error,enum=util.PurchaseError_Error" json:"error,omitempty"`
	PurchaseInProgress *string              `protobuf:"bytes,2,opt,name=purchase_in_progress" json:"purchase_in_progress,omitempty"`
	ErrorCode          *string              `protobuf:"bytes,3,opt,name=error_code" json:"error_code,omitempty"`
	XXX_unrecognized   []byte               `json:"-"`
}

func (m *PurchaseError) Reset()         { *m = PurchaseError{} }
func (m *PurchaseError) String() string { return proto.CompactTextString(m) }
func (*PurchaseError) ProtoMessage()    {}

func (m *PurchaseError) GetError() PurchaseError_Error {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return PurchaseError_E_UNKNOWN
}

func (m *PurchaseError) GetPurchaseInProgress() string {
	if m != nil && m.PurchaseInProgress != nil {
		return *m.PurchaseInProgress
	}
	return ""
}

func (m *PurchaseError) GetErrorCode() string {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return ""
}

type NearbyPlayer struct {
	BnetIdHi         *uint64 `protobuf:"varint,1,req,name=bnet_id_hi" json:"bnet_id_hi,omitempty"`
	BnetIdLo         *uint64 `protobuf:"varint,2,req,name=bnet_id_lo" json:"bnet_id_lo,omitempty"`
	SessionStartTime *uint64 `protobuf:"varint,3,req,name=session_start_time" json:"session_start_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NearbyPlayer) Reset()         { *m = NearbyPlayer{} }
func (m *NearbyPlayer) String() string { return proto.CompactTextString(m) }
func (*NearbyPlayer) ProtoMessage()    {}

func (m *NearbyPlayer) GetBnetIdHi() uint64 {
	if m != nil && m.BnetIdHi != nil {
		return *m.BnetIdHi
	}
	return 0
}

func (m *NearbyPlayer) GetBnetIdLo() uint64 {
	if m != nil && m.BnetIdLo != nil {
		return *m.BnetIdLo
	}
	return 0
}

func (m *NearbyPlayer) GetSessionStartTime() uint64 {
	if m != nil && m.SessionStartTime != nil {
		return *m.SessionStartTime
	}
	return 0
}

type SpecialEventTiming struct {
	Event            *string `protobuf:"bytes,1,req,name=event" json:"event,omitempty"`
	Start            *uint64 `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	End              *uint64 `protobuf:"varint,3,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SpecialEventTiming) Reset()         { *m = SpecialEventTiming{} }
func (m *SpecialEventTiming) String() string { return proto.CompactTextString(m) }
func (*SpecialEventTiming) ProtoMessage()    {}

func (m *SpecialEventTiming) GetEvent() string {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ""
}

func (m *SpecialEventTiming) GetStart() uint64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *SpecialEventTiming) GetEnd() uint64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

type CardValue struct {
	Card             *shared.CardDef `protobuf:"bytes,1,req,name=card" json:"card,omitempty"`
	Buy              *int32          `protobuf:"varint,2,req,name=buy" json:"buy,omitempty"`
	Sell             *int32          `protobuf:"varint,3,req,name=sell" json:"sell,omitempty"`
	Nerfed           *bool           `protobuf:"varint,4,req,name=nerfed" json:"nerfed,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CardValue) Reset()         { *m = CardValue{} }
func (m *CardValue) String() string { return proto.CompactTextString(m) }
func (*CardValue) ProtoMessage()    {}

func (m *CardValue) GetCard() *shared.CardDef {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *CardValue) GetBuy() int32 {
	if m != nil && m.Buy != nil {
		return *m.Buy
	}
	return 0
}

func (m *CardValue) GetSell() int32 {
	if m != nil && m.Sell != nil {
		return *m.Sell
	}
	return 0
}

func (m *CardValue) GetNerfed() bool {
	if m != nil && m.Nerfed != nil {
		return *m.Nerfed
	}
	return false
}

type Achieve struct {
	Id               *int32       `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Progress         *int32       `protobuf:"varint,2,req,name=progress" json:"progress,omitempty"`
	AckProgress      *int32       `protobuf:"varint,3,req,name=ack_progress" json:"ack_progress,omitempty"`
	CompletionCount  *int32       `protobuf:"varint,4,opt,name=completion_count" json:"completion_count,omitempty"`
	Active           *bool        `protobuf:"varint,5,opt,name=active" json:"active,omitempty"`
	StartedCount     *int32       `protobuf:"varint,6,opt,name=started_count" json:"started_count,omitempty"`
	DateGiven        *shared.Date `protobuf:"bytes,7,opt,name=date_given" json:"date_given,omitempty"`
	DateCompleted    *shared.Date `protobuf:"bytes,8,opt,name=date_completed" json:"date_completed,omitempty"`
	DoNotAck         *bool        `protobuf:"varint,9,opt,name=do_not_ack" json:"do_not_ack,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Achieve) Reset()         { *m = Achieve{} }
func (m *Achieve) String() string { return proto.CompactTextString(m) }
func (*Achieve) ProtoMessage()    {}

func (m *Achieve) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Achieve) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *Achieve) GetAckProgress() int32 {
	if m != nil && m.AckProgress != nil {
		return *m.AckProgress
	}
	return 0
}

func (m *Achieve) GetCompletionCount() int32 {
	if m != nil && m.CompletionCount != nil {
		return *m.CompletionCount
	}
	return 0
}

func (m *Achieve) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

func (m *Achieve) GetStartedCount() int32 {
	if m != nil && m.StartedCount != nil {
		return *m.StartedCount
	}
	return 0
}

func (m *Achieve) GetDateGiven() *shared.Date {
	if m != nil {
		return m.DateGiven
	}
	return nil
}

func (m *Achieve) GetDateCompleted() *shared.Date {
	if m != nil {
		return m.DateCompleted
	}
	return nil
}

func (m *Achieve) GetDoNotAck() bool {
	if m != nil && m.DoNotAck != nil {
		return *m.DoNotAck
	}
	return false
}

type AdventureOptions struct {
	AdventureId      *int32  `protobuf:"varint,1,req,name=adventure_id" json:"adventure_id,omitempty"`
	Options          *uint64 `protobuf:"varint,2,req,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AdventureOptions) Reset()         { *m = AdventureOptions{} }
func (m *AdventureOptions) String() string { return proto.CompactTextString(m) }
func (*AdventureOptions) ProtoMessage()    {}

func (m *AdventureOptions) GetAdventureId() int32 {
	if m != nil && m.AdventureId != nil {
		return *m.AdventureId
	}
	return 0
}

func (m *AdventureOptions) GetOptions() uint64 {
	if m != nil && m.Options != nil {
		return *m.Options
	}
	return 0
}

type ProfileNotice struct {
	Entry             *int64                                      `protobuf:"varint,1,req,name=entry" json:"entry,omitempty"`
	Medal             *shared.ProfileNoticeMedal                  `protobuf:"bytes,2,opt,name=medal" json:"medal,omitempty"`
	RewardBooster     *shared.ProfileNoticeRewardBooster          `protobuf:"bytes,3,opt,name=reward_booster" json:"reward_booster,omitempty"`
	RewardCard        *shared.ProfileNoticeRewardCard             `protobuf:"bytes,4,opt,name=reward_card" json:"reward_card,omitempty"`
	PreconDeck        *shared.ProfileNoticePreconDeck             `protobuf:"bytes,6,opt,name=precon_deck" json:"precon_deck,omitempty"`
	RewardDust        *shared.ProfileNoticeRewardDust             `protobuf:"bytes,7,opt,name=reward_dust" json:"reward_dust,omitempty"`
	RewardGold        *shared.ProfileNoticeRewardGold             `protobuf:"bytes,8,opt,name=reward_gold" json:"reward_gold,omitempty"`
	RewardMount       *shared.ProfileNoticeRewardMount            `protobuf:"bytes,9,opt,name=reward_mount" json:"reward_mount,omitempty"`
	RewardForge       *shared.ProfileNoticeRewardForge            `protobuf:"bytes,10,opt,name=reward_forge" json:"reward_forge,omitempty"`
	Origin            *int32                                      `protobuf:"varint,11,req,name=origin" json:"origin,omitempty"`
	OriginData        *int64                                      `protobuf:"varint,12,opt,name=origin_data" json:"origin_data,omitempty"`
	When              *shared.Date                                `protobuf:"bytes,13,req,name=when" json:"when,omitempty"`
	Purchase          *shared.ProfileNoticePurchase               `protobuf:"bytes,14,opt,name=purchase" json:"purchase,omitempty"`
	RewardCardBack    *shared.ProfileNoticeCardBack               `protobuf:"bytes,15,opt,name=reward_card_back" json:"reward_card_back,omitempty"`
	DcGameResult      *shared.ProfileNoticeDisconnectedGameResult `protobuf:"bytes,16,opt,name=dc_game_result" json:"dc_game_result,omitempty"`
	BonusStars        *shared.ProfileNoticeBonusStars             `protobuf:"bytes,17,opt,name=bonus_stars" json:"bonus_stars,omitempty"`
	AdventureProgress *shared.ProfileNoticeAdventureProgress      `protobuf:"bytes,18,opt,name=adventure_progress" json:"adventure_progress,omitempty"`
	LevelUp           *shared.ProfileNoticeLevelUp                `protobuf:"bytes,19,opt,name=level_up" json:"level_up,omitempty"`
	AccountLicense    *shared.ProfileNoticeAccountLicense         `protobuf:"bytes,20,opt,name=account_license" json:"account_license,omitempty"`
	XXX_unrecognized  []byte                                      `json:"-"`
}

func (m *ProfileNotice) Reset()         { *m = ProfileNotice{} }
func (m *ProfileNotice) String() string { return proto.CompactTextString(m) }
func (*ProfileNotice) ProtoMessage()    {}

func (m *ProfileNotice) GetEntry() int64 {
	if m != nil && m.Entry != nil {
		return *m.Entry
	}
	return 0
}

func (m *ProfileNotice) GetMedal() *shared.ProfileNoticeMedal {
	if m != nil {
		return m.Medal
	}
	return nil
}

func (m *ProfileNotice) GetRewardBooster() *shared.ProfileNoticeRewardBooster {
	if m != nil {
		return m.RewardBooster
	}
	return nil
}

func (m *ProfileNotice) GetRewardCard() *shared.ProfileNoticeRewardCard {
	if m != nil {
		return m.RewardCard
	}
	return nil
}

func (m *ProfileNotice) GetPreconDeck() *shared.ProfileNoticePreconDeck {
	if m != nil {
		return m.PreconDeck
	}
	return nil
}

func (m *ProfileNotice) GetRewardDust() *shared.ProfileNoticeRewardDust {
	if m != nil {
		return m.RewardDust
	}
	return nil
}

func (m *ProfileNotice) GetRewardGold() *shared.ProfileNoticeRewardGold {
	if m != nil {
		return m.RewardGold
	}
	return nil
}

func (m *ProfileNotice) GetRewardMount() *shared.ProfileNoticeRewardMount {
	if m != nil {
		return m.RewardMount
	}
	return nil
}

func (m *ProfileNotice) GetRewardForge() *shared.ProfileNoticeRewardForge {
	if m != nil {
		return m.RewardForge
	}
	return nil
}

func (m *ProfileNotice) GetOrigin() int32 {
	if m != nil && m.Origin != nil {
		return *m.Origin
	}
	return 0
}

func (m *ProfileNotice) GetOriginData() int64 {
	if m != nil && m.OriginData != nil {
		return *m.OriginData
	}
	return 0
}

func (m *ProfileNotice) GetWhen() *shared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *ProfileNotice) GetPurchase() *shared.ProfileNoticePurchase {
	if m != nil {
		return m.Purchase
	}
	return nil
}

func (m *ProfileNotice) GetRewardCardBack() *shared.ProfileNoticeCardBack {
	if m != nil {
		return m.RewardCardBack
	}
	return nil
}

func (m *ProfileNotice) GetDcGameResult() *shared.ProfileNoticeDisconnectedGameResult {
	if m != nil {
		return m.DcGameResult
	}
	return nil
}

func (m *ProfileNotice) GetBonusStars() *shared.ProfileNoticeBonusStars {
	if m != nil {
		return m.BonusStars
	}
	return nil
}

func (m *ProfileNotice) GetAdventureProgress() *shared.ProfileNoticeAdventureProgress {
	if m != nil {
		return m.AdventureProgress
	}
	return nil
}

func (m *ProfileNotice) GetLevelUp() *shared.ProfileNoticeLevelUp {
	if m != nil {
		return m.LevelUp
	}
	return nil
}

func (m *ProfileNotice) GetAccountLicense() *shared.ProfileNoticeAccountLicense {
	if m != nil {
		return m.AccountLicense
	}
	return nil
}

type BoosterTally struct {
	IsOpen           *bool  `protobuf:"varint,1,req,name=is_open" json:"is_open,omitempty"`
	TypeId           *int32 `protobuf:"varint,2,req,name=type_id" json:"type_id,omitempty"`
	IsBought         *bool  `protobuf:"varint,3,req,name=is_bought" json:"is_bought,omitempty"`
	SourceId         *int32 `protobuf:"varint,4,req,name=source_id" json:"source_id,omitempty"`
	Count            *int32 `protobuf:"varint,5,req,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BoosterTally) Reset()         { *m = BoosterTally{} }
func (m *BoosterTally) String() string { return proto.CompactTextString(m) }
func (*BoosterTally) ProtoMessage()    {}

func (m *BoosterTally) GetIsOpen() bool {
	if m != nil && m.IsOpen != nil {
		return *m.IsOpen
	}
	return false
}

func (m *BoosterTally) GetTypeId() int32 {
	if m != nil && m.TypeId != nil {
		return *m.TypeId
	}
	return 0
}

func (m *BoosterTally) GetIsBought() bool {
	if m != nil && m.IsBought != nil {
		return *m.IsBought
	}
	return false
}

func (m *BoosterTally) GetSourceId() int32 {
	if m != nil && m.SourceId != nil {
		return *m.SourceId
	}
	return 0
}

func (m *BoosterTally) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type BoosterCard struct {
	CardDef          *shared.CardDef `protobuf:"bytes,1,req,name=card_def" json:"card_def,omitempty"`
	InsertDate       *shared.Date    `protobuf:"bytes,2,req,name=insert_date" json:"insert_date,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *BoosterCard) Reset()         { *m = BoosterCard{} }
func (m *BoosterCard) String() string { return proto.CompactTextString(m) }
func (*BoosterCard) ProtoMessage()    {}

func (m *BoosterCard) GetCardDef() *shared.CardDef {
	if m != nil {
		return m.CardDef
	}
	return nil
}

func (m *BoosterCard) GetInsertDate() *shared.Date {
	if m != nil {
		return m.InsertDate
	}
	return nil
}

type MedalHistoryInfo struct {
	Season           *int32       `protobuf:"varint,1,req,name=season" json:"season,omitempty"`
	When             *shared.Date `protobuf:"bytes,2,req,name=when" json:"when,omitempty"`
	Stars            *int32       `protobuf:"varint,3,req,name=stars" json:"stars,omitempty"`
	StarLevel        *int32       `protobuf:"varint,4,req,name=star_level" json:"star_level,omitempty"`
	LevelStart       *int32       `protobuf:"varint,5,req,name=level_start" json:"level_start,omitempty"`
	LevelEnd         *int32       `protobuf:"varint,6,req,name=level_end" json:"level_end,omitempty"`
	LegendRank       *int32       `protobuf:"varint,7,opt,name=legend_rank" json:"legend_rank,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *MedalHistoryInfo) Reset()         { *m = MedalHistoryInfo{} }
func (m *MedalHistoryInfo) String() string { return proto.CompactTextString(m) }
func (*MedalHistoryInfo) ProtoMessage()    {}

func (m *MedalHistoryInfo) GetSeason() int32 {
	if m != nil && m.Season != nil {
		return *m.Season
	}
	return 0
}

func (m *MedalHistoryInfo) GetWhen() *shared.Date {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *MedalHistoryInfo) GetStars() int32 {
	if m != nil && m.Stars != nil {
		return *m.Stars
	}
	return 0
}

func (m *MedalHistoryInfo) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *MedalHistoryInfo) GetLevelStart() int32 {
	if m != nil && m.LevelStart != nil {
		return *m.LevelStart
	}
	return 0
}

func (m *MedalHistoryInfo) GetLevelEnd() int32 {
	if m != nil && m.LevelEnd != nil {
		return *m.LevelEnd
	}
	return 0
}

func (m *MedalHistoryInfo) GetLegendRank() int32 {
	if m != nil && m.LegendRank != nil {
		return *m.LegendRank
	}
	return 0
}

type CardUseCount struct {
	Asset            *int32 `protobuf:"varint,1,req,name=asset" json:"asset,omitempty"`
	Count            *int32 `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardUseCount) Reset()         { *m = CardUseCount{} }
func (m *CardUseCount) String() string { return proto.CompactTextString(m) }
func (*CardUseCount) ProtoMessage()    {}

func (m *CardUseCount) GetAsset() int32 {
	if m != nil && m.Asset != nil {
		return *m.Asset
	}
	return 0
}

func (m *CardUseCount) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type BundleItem struct {
	ProductType      *ProductType `protobuf:"varint,1,req,name=product_type,enum=util.ProductType" json:"product_type,omitempty"`
	Data             *int32       `protobuf:"varint,2,req,name=data" json:"data,omitempty"`
	Quantity         *int32       `protobuf:"varint,3,req,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *BundleItem) Reset()         { *m = BundleItem{} }
func (m *BundleItem) String() string { return proto.CompactTextString(m) }
func (*BundleItem) ProtoMessage()    {}

func (m *BundleItem) GetProductType() ProductType {
	if m != nil && m.ProductType != nil {
		return *m.ProductType
	}
	return ProductType_PRODUCT_TYPE_UNKNOWN
}

func (m *BundleItem) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *BundleItem) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

type Bundle struct {
	Id               *string       `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Cost             *float64      `protobuf:"fixed64,2,req,name=cost" json:"cost,omitempty"`
	AppleId          *string       `protobuf:"bytes,3,opt,name=apple_id" json:"apple_id,omitempty"`
	GooglePlayId     *string       `protobuf:"bytes,4,opt,name=google_play_id" json:"google_play_id,omitempty"`
	Items            []*BundleItem `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
	GoldCost         *int64        `protobuf:"varint,6,opt,name=gold_cost" json:"gold_cost,omitempty"`
	AmazonId         *string       `protobuf:"bytes,7,opt,name=amazon_id" json:"amazon_id,omitempty"`
	ProductEventName *string       `protobuf:"bytes,9,opt,name=product_event_name" json:"product_event_name,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}

func (m *Bundle) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Bundle) GetCost() float64 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

func (m *Bundle) GetAppleId() string {
	if m != nil && m.AppleId != nil {
		return *m.AppleId
	}
	return ""
}

func (m *Bundle) GetGooglePlayId() string {
	if m != nil && m.GooglePlayId != nil {
		return *m.GooglePlayId
	}
	return ""
}

func (m *Bundle) GetItems() []*BundleItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Bundle) GetGoldCost() int64 {
	if m != nil && m.GoldCost != nil {
		return *m.GoldCost
	}
	return 0
}

func (m *Bundle) GetAmazonId() string {
	if m != nil && m.AmazonId != nil {
		return *m.AmazonId
	}
	return ""
}

func (m *Bundle) GetProductEventName() string {
	if m != nil && m.ProductEventName != nil {
		return *m.ProductEventName
	}
	return ""
}

type GoldCostBooster struct {
	Cost             *int64 `protobuf:"varint,1,req,name=cost" json:"cost,omitempty"`
	PackType         *int32 `protobuf:"varint,2,req,name=pack_type" json:"pack_type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GoldCostBooster) Reset()         { *m = GoldCostBooster{} }
func (m *GoldCostBooster) String() string { return proto.CompactTextString(m) }
func (*GoldCostBooster) ProtoMessage()    {}

func (m *GoldCostBooster) GetCost() int64 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

func (m *GoldCostBooster) GetPackType() int32 {
	if m != nil && m.PackType != nil {
		return *m.PackType
	}
	return 0
}

type PlayerRecord struct {
	Type             *shared.GameType `protobuf:"varint,1,req,name=type,enum=shared.GameType" json:"type,omitempty"`
	Data             *int32           `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
	Wins             *int32           `protobuf:"varint,3,req,name=wins" json:"wins,omitempty"`
	Losses           *int32           `protobuf:"varint,4,req,name=losses" json:"losses,omitempty"`
	Ties             *int32           `protobuf:"varint,5,opt,name=ties" json:"ties,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *PlayerRecord) Reset()         { *m = PlayerRecord{} }
func (m *PlayerRecord) String() string { return proto.CompactTextString(m) }
func (*PlayerRecord) ProtoMessage()    {}

func (m *PlayerRecord) GetType() shared.GameType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return shared.GameType_GT_UNKNOWN
}

func (m *PlayerRecord) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

func (m *PlayerRecord) GetWins() int32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *PlayerRecord) GetLosses() int32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *PlayerRecord) GetTies() int32 {
	if m != nil && m.Ties != nil {
		return *m.Ties
	}
	return 0
}

type NextHeroLevelReward struct {
	Level            *int32                             `protobuf:"varint,1,req,name=level" json:"level,omitempty"`
	RewardBooster    *shared.ProfileNoticeRewardBooster `protobuf:"bytes,2,opt,name=reward_booster" json:"reward_booster,omitempty"`
	RewardCard       *shared.ProfileNoticeRewardCard    `protobuf:"bytes,3,opt,name=reward_card" json:"reward_card,omitempty"`
	RewardDust       *shared.ProfileNoticeRewardDust    `protobuf:"bytes,4,opt,name=reward_dust" json:"reward_dust,omitempty"`
	RewardGold       *shared.ProfileNoticeRewardGold    `protobuf:"bytes,5,opt,name=reward_gold" json:"reward_gold,omitempty"`
	RewardMount      *shared.ProfileNoticeRewardMount   `protobuf:"bytes,6,opt,name=reward_mount" json:"reward_mount,omitempty"`
	RewardForge      *shared.ProfileNoticeRewardForge   `protobuf:"bytes,7,opt,name=reward_forge" json:"reward_forge,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *NextHeroLevelReward) Reset()         { *m = NextHeroLevelReward{} }
func (m *NextHeroLevelReward) String() string { return proto.CompactTextString(m) }
func (*NextHeroLevelReward) ProtoMessage()    {}

func (m *NextHeroLevelReward) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *NextHeroLevelReward) GetRewardBooster() *shared.ProfileNoticeRewardBooster {
	if m != nil {
		return m.RewardBooster
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardCard() *shared.ProfileNoticeRewardCard {
	if m != nil {
		return m.RewardCard
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardDust() *shared.ProfileNoticeRewardDust {
	if m != nil {
		return m.RewardDust
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardGold() *shared.ProfileNoticeRewardGold {
	if m != nil {
		return m.RewardGold
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardMount() *shared.ProfileNoticeRewardMount {
	if m != nil {
		return m.RewardMount
	}
	return nil
}

func (m *NextHeroLevelReward) GetRewardForge() *shared.ProfileNoticeRewardForge {
	if m != nil {
		return m.RewardForge
	}
	return nil
}

type HeroXPInfo struct {
	ClassId          *int32               `protobuf:"varint,1,req,name=class_id" json:"class_id,omitempty"`
	Level            *int32               `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	CurrXp           *int64               `protobuf:"varint,3,req,name=curr_xp" json:"curr_xp,omitempty"`
	MaxXp            *int64               `protobuf:"varint,4,req,name=max_xp" json:"max_xp,omitempty"`
	NextReward       *NextHeroLevelReward `protobuf:"bytes,5,opt,name=next_reward" json:"next_reward,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *HeroXPInfo) Reset()         { *m = HeroXPInfo{} }
func (m *HeroXPInfo) String() string { return proto.CompactTextString(m) }
func (*HeroXPInfo) ProtoMessage()    {}

func (m *HeroXPInfo) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *HeroXPInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *HeroXPInfo) GetCurrXp() int64 {
	if m != nil && m.CurrXp != nil {
		return *m.CurrXp
	}
	return 0
}

func (m *HeroXPInfo) GetMaxXp() int64 {
	if m != nil && m.MaxXp != nil {
		return *m.MaxXp
	}
	return 0
}

func (m *HeroXPInfo) GetNextReward() *NextHeroLevelReward {
	if m != nil {
		return m.NextReward
	}
	return nil
}

type AssetResponse struct {
	RequestedKey     *AssetRequestKey         `protobuf:"bytes,1,req,name=requested_key" json:"requested_key,omitempty"`
	ErrorCode        *shared.DatabaseResult   `protobuf:"varint,2,req,name=error_code,enum=shared.DatabaseResult" json:"error_code,omitempty"`
	ScenarioAsset    *shared.ScenarioDbRecord `protobuf:"bytes,100,opt,name=scenario_asset" json:"scenario_asset,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *AssetResponse) Reset()         { *m = AssetResponse{} }
func (m *AssetResponse) String() string { return proto.CompactTextString(m) }
func (*AssetResponse) ProtoMessage()    {}

func (m *AssetResponse) GetRequestedKey() *AssetRequestKey {
	if m != nil {
		return m.RequestedKey
	}
	return nil
}

func (m *AssetResponse) GetErrorCode() shared.DatabaseResult {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return shared.DatabaseResult_DB_E_SQL_EX
}

func (m *AssetResponse) GetScenarioAsset() *shared.ScenarioDbRecord {
	if m != nil {
		return m.ScenarioAsset
	}
	return nil
}

type DeckSetData struct {
	Deck             *int64                 `protobuf:"varint,1,req,name=deck" json:"deck,omitempty"`
	Cards            []*shared.DeckCardData `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	Hero             *shared.CardDef        `protobuf:"bytes,3,opt,name=hero" json:"hero,omitempty"`
	CardBack         *int32                 `protobuf:"varint,4,opt,name=card_back" json:"card_back,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *DeckSetData) Reset()         { *m = DeckSetData{} }
func (m *DeckSetData) String() string { return proto.CompactTextString(m) }
func (*DeckSetData) ProtoMessage()    {}

func (m *DeckSetData) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *DeckSetData) GetCards() []*shared.DeckCardData {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *DeckSetData) GetHero() *shared.CardDef {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *DeckSetData) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

type ValidateAchieve struct {
	Achieve          *int32 `protobuf:"varint,1,req,name=achieve" json:"achieve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ValidateAchieve) Reset()         { *m = ValidateAchieve{} }
func (m *ValidateAchieve) String() string { return proto.CompactTextString(m) }
func (*ValidateAchieve) ProtoMessage()    {}

func (m *ValidateAchieve) GetAchieve() int32 {
	if m != nil && m.Achieve != nil {
		return *m.Achieve
	}
	return 0
}

type UpdateLogin struct {
	ReplyRequired    *bool   `protobuf:"varint,1,opt,name=reply_required" json:"reply_required,omitempty"`
	Referral         *string `protobuf:"bytes,2,opt,name=referral" json:"referral,omitempty"`
	DeviceModel      *string `protobuf:"bytes,3,opt,name=device_model" json:"device_model,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UpdateLogin) Reset()         { *m = UpdateLogin{} }
func (m *UpdateLogin) String() string { return proto.CompactTextString(m) }
func (*UpdateLogin) ProtoMessage()    {}

func (m *UpdateLogin) GetReplyRequired() bool {
	if m != nil && m.ReplyRequired != nil {
		return *m.ReplyRequired
	}
	return false
}

func (m *UpdateLogin) GetReferral() string {
	if m != nil && m.Referral != nil {
		return *m.Referral
	}
	return ""
}

func (m *UpdateLogin) GetDeviceModel() string {
	if m != nil && m.DeviceModel != nil {
		return *m.DeviceModel
	}
	return ""
}

type DevBnetIdentify struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DevBnetIdentify) Reset()         { *m = DevBnetIdentify{} }
func (m *DevBnetIdentify) String() string { return proto.CompactTextString(m) }
func (*DevBnetIdentify) ProtoMessage()    {}

func (m *DevBnetIdentify) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type SetOptions struct {
	Options          []*ClientOption `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SetOptions) Reset()         { *m = SetOptions{} }
func (m *SetOptions) String() string { return proto.CompactTextString(m) }
func (*SetOptions) ProtoMessage()    {}

func (m *SetOptions) GetOptions() []*ClientOption {
	if m != nil {
		return m.Options
	}
	return nil
}

type GetOptions struct {
	Keys             []int32 `protobuf:"varint,1,rep,packed,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetOptions) Reset()         { *m = GetOptions{} }
func (m *GetOptions) String() string { return proto.CompactTextString(m) }
func (*GetOptions) ProtoMessage()    {}

func (m *GetOptions) GetKeys() []int32 {
	if m != nil {
		return m.Keys
	}
	return nil
}

type GetAccountInfo struct {
	Request          *GetAccountInfo_Request `protobuf:"varint,1,req,name=request,enum=util.GetAccountInfo_Request" json:"request,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetAccountInfo) Reset()         { *m = GetAccountInfo{} }
func (m *GetAccountInfo) String() string { return proto.CompactTextString(m) }
func (*GetAccountInfo) ProtoMessage()    {}

func (m *GetAccountInfo) GetRequest() GetAccountInfo_Request {
	if m != nil && m.Request != nil {
		return *m.Request
	}
	return GetAccountInfo_LAST_LOGIN
}

type GetDeck struct {
	Deck             *int64 `protobuf:"varint,1,req,name=deck" json:"deck,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetDeck) Reset()         { *m = GetDeck{} }
func (m *GetDeck) String() string { return proto.CompactTextString(m) }
func (*GetDeck) ProtoMessage()    {}

func (m *GetDeck) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

type CreateDeck struct {
	Name             *string          `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Hero             *int32           `protobuf:"varint,2,req,name=hero" json:"hero,omitempty"`
	HeroPremium      *int32           `protobuf:"varint,3,req,name=hero_premium" json:"hero_premium,omitempty"`
	DeckType         *shared.DeckType `protobuf:"varint,4,req,name=deck_type,enum=shared.DeckType" json:"deck_type,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CreateDeck) Reset()         { *m = CreateDeck{} }
func (m *CreateDeck) String() string { return proto.CompactTextString(m) }
func (*CreateDeck) ProtoMessage()    {}

func (m *CreateDeck) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateDeck) GetHero() int32 {
	if m != nil && m.Hero != nil {
		return *m.Hero
	}
	return 0
}

func (m *CreateDeck) GetHeroPremium() int32 {
	if m != nil && m.HeroPremium != nil {
		return *m.HeroPremium
	}
	return 0
}

func (m *CreateDeck) GetDeckType() shared.DeckType {
	if m != nil && m.DeckType != nil {
		return *m.DeckType
	}
	return shared.DeckType_NORMAL_DECK
}

type DeleteDeck struct {
	Deck             *int64 `protobuf:"varint,1,req,name=deck" json:"deck,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteDeck) Reset()         { *m = DeleteDeck{} }
func (m *DeleteDeck) String() string { return proto.CompactTextString(m) }
func (*DeleteDeck) ProtoMessage()    {}

func (m *DeleteDeck) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

type RenameDeck struct {
	Deck             *int64  `protobuf:"varint,1,req,name=deck" json:"deck,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RenameDeck) Reset()         { *m = RenameDeck{} }
func (m *RenameDeck) String() string { return proto.CompactTextString(m) }
func (*RenameDeck) ProtoMessage()    {}

func (m *RenameDeck) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *RenameDeck) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type AckNotice struct {
	Entry            *int64 `protobuf:"varint,1,req,name=entry" json:"entry,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AckNotice) Reset()         { *m = AckNotice{} }
func (m *AckNotice) String() string { return proto.CompactTextString(m) }
func (*AckNotice) ProtoMessage()    {}

func (m *AckNotice) GetEntry() int64 {
	if m != nil && m.Entry != nil {
		return *m.Entry
	}
	return 0
}

type OpenBooster struct {
	BoosterType      *int32 `protobuf:"varint,2,req,name=booster_type" json:"booster_type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OpenBooster) Reset()         { *m = OpenBooster{} }
func (m *OpenBooster) String() string { return proto.CompactTextString(m) }
func (*OpenBooster) ProtoMessage()    {}

func (m *OpenBooster) GetBoosterType() int32 {
	if m != nil && m.BoosterType != nil {
		return *m.BoosterType
	}
	return 0
}

type Subscribe struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Subscribe) Reset()         { *m = Subscribe{} }
func (m *Subscribe) String() string { return proto.CompactTextString(m) }
func (*Subscribe) ProtoMessage()    {}

type Unsubscribe struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Unsubscribe) Reset()         { *m = Unsubscribe{} }
func (m *Unsubscribe) String() string { return proto.CompactTextString(m) }
func (*Unsubscribe) ProtoMessage()    {}

type OneClientTracking struct {
	Level            *OneClientTracking_Level `protobuf:"varint,1,req,name=level,enum=util.OneClientTracking_Level" json:"level,omitempty"`
	What             *int32                   `protobuf:"varint,2,req,name=what" json:"what,omitempty"`
	Timestamp        *uint64                  `protobuf:"varint,4,req,name=timestamp" json:"timestamp,omitempty"`
	Message          *string                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *OneClientTracking) Reset()         { *m = OneClientTracking{} }
func (m *OneClientTracking) String() string { return proto.CompactTextString(m) }
func (*OneClientTracking) ProtoMessage()    {}

func (m *OneClientTracking) GetLevel() OneClientTracking_Level {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return OneClientTracking_L_INFO
}

func (m *OneClientTracking) GetWhat() int32 {
	if m != nil && m.What != nil {
		return *m.What
	}
	return 0
}

func (m *OneClientTracking) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *OneClientTracking) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type ClientTracking struct {
	Info             []*OneClientTracking `protobuf:"bytes,4,rep,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ClientTracking) Reset()         { *m = ClientTracking{} }
func (m *ClientTracking) String() string { return proto.CompactTextString(m) }
func (*ClientTracking) ProtoMessage()    {}

func (m *ClientTracking) GetInfo() []*OneClientTracking {
	if m != nil {
		return m.Info
	}
	return nil
}

type SetProgress struct {
	Value            *int64 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetProgress) Reset()         { *m = SetProgress{} }
func (m *SetProgress) String() string { return proto.CompactTextString(m) }
func (*SetProgress) ProtoMessage()    {}

func (m *SetProgress) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type AckCardSeen struct {
	CardDefs         []*shared.CardDef `protobuf:"bytes,1,rep,name=card_defs" json:"card_defs,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *AckCardSeen) Reset()         { *m = AckCardSeen{} }
func (m *AckCardSeen) String() string { return proto.CompactTextString(m) }
func (*AckCardSeen) ProtoMessage()    {}

func (m *AckCardSeen) GetCardDefs() []*shared.CardDef {
	if m != nil {
		return m.CardDefs
	}
	return nil
}

type CardBacks struct {
	DefaultCardBack  *int32  `protobuf:"varint,1,req,name=default_card_back" json:"default_card_back,omitempty"`
	CardBacks        []int32 `protobuf:"varint,2,rep,name=card_backs" json:"card_backs,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CardBacks) Reset()         { *m = CardBacks{} }
func (m *CardBacks) String() string { return proto.CompactTextString(m) }
func (*CardBacks) ProtoMessage()    {}

func (m *CardBacks) GetDefaultCardBack() int32 {
	if m != nil && m.DefaultCardBack != nil {
		return *m.DefaultCardBack
	}
	return 0
}

func (m *CardBacks) GetCardBacks() []int32 {
	if m != nil {
		return m.CardBacks
	}
	return nil
}

type DraftBegin struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftBegin) Reset()         { *m = DraftBegin{} }
func (m *DraftBegin) String() string { return proto.CompactTextString(m) }
func (*DraftBegin) ProtoMessage()    {}

type DraftRetire struct {
	DeckId           *int64 `protobuf:"varint,1,req,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32 `protobuf:"varint,2,req,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftRetire) Reset()         { *m = DraftRetire{} }
func (m *DraftRetire) String() string { return proto.CompactTextString(m) }
func (*DraftRetire) ProtoMessage()    {}

func (m *DraftRetire) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftRetire) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type DraftAckRewards struct {
	DeckId           *int64 `protobuf:"varint,1,req,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32 `protobuf:"varint,2,req,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftAckRewards) Reset()         { *m = DraftAckRewards{} }
func (m *DraftAckRewards) String() string { return proto.CompactTextString(m) }
func (*DraftAckRewards) ProtoMessage()    {}

func (m *DraftAckRewards) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftAckRewards) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type DraftGetPicksAndContents struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftGetPicksAndContents) Reset()         { *m = DraftGetPicksAndContents{} }
func (m *DraftGetPicksAndContents) String() string { return proto.CompactTextString(m) }
func (*DraftGetPicksAndContents) ProtoMessage()    {}

type DraftMakePick struct {
	DeckId           *int64 `protobuf:"varint,1,req,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32 `protobuf:"varint,2,req,name=slot" json:"slot,omitempty"`
	Index            *int32 `protobuf:"varint,3,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftMakePick) Reset()         { *m = DraftMakePick{} }
func (m *DraftMakePick) String() string { return proto.CompactTextString(m) }
func (*DraftMakePick) ProtoMessage()    {}

func (m *DraftMakePick) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftMakePick) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *DraftMakePick) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type GetAchieves struct {
	OnlyActiveOrNewComplete *bool  `protobuf:"varint,1,opt,name=only_active_or_new_complete" json:"only_active_or_new_complete,omitempty"`
	XXX_unrecognized        []byte `json:"-"`
}

func (m *GetAchieves) Reset()         { *m = GetAchieves{} }
func (m *GetAchieves) String() string { return proto.CompactTextString(m) }
func (*GetAchieves) ProtoMessage()    {}

func (m *GetAchieves) GetOnlyActiveOrNewComplete() bool {
	if m != nil && m.OnlyActiveOrNewComplete != nil {
		return *m.OnlyActiveOrNewComplete
	}
	return false
}

type AckAchieveProgress struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	AckProgress      *int32 `protobuf:"varint,2,req,name=ack_progress" json:"ack_progress,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AckAchieveProgress) Reset()         { *m = AckAchieveProgress{} }
func (m *AckAchieveProgress) String() string { return proto.CompactTextString(m) }
func (*AckAchieveProgress) ProtoMessage()    {}

func (m *AckAchieveProgress) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AckAchieveProgress) GetAckProgress() int32 {
	if m != nil && m.AckProgress != nil {
		return *m.AckProgress
	}
	return 0
}

type BuySellCard struct {
	Def              *shared.CardDef `protobuf:"bytes,1,req,name=def" json:"def,omitempty"`
	Count            *int32          `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Buying           *bool           `protobuf:"varint,3,req,name=buying" json:"buying,omitempty"`
	UnitSellPrice    *int32          `protobuf:"varint,4,opt,name=unit_sell_price" json:"unit_sell_price,omitempty"`
	UnitBuyPrice     *int32          `protobuf:"varint,5,opt,name=unit_buy_price" json:"unit_buy_price,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *BuySellCard) Reset()         { *m = BuySellCard{} }
func (m *BuySellCard) String() string { return proto.CompactTextString(m) }
func (*BuySellCard) ProtoMessage()    {}

func (m *BuySellCard) GetDef() *shared.CardDef {
	if m != nil {
		return m.Def
	}
	return nil
}

func (m *BuySellCard) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *BuySellCard) GetBuying() bool {
	if m != nil && m.Buying != nil {
		return *m.Buying
	}
	return false
}

func (m *BuySellCard) GetUnitSellPrice() int32 {
	if m != nil && m.UnitSellPrice != nil {
		return *m.UnitSellPrice
	}
	return 0
}

func (m *BuySellCard) GetUnitBuyPrice() int32 {
	if m != nil && m.UnitBuyPrice != nil {
		return *m.UnitBuyPrice
	}
	return 0
}

type GetPurchaseMethod struct {
	ProductId        *string `protobuf:"bytes,1,req,name=product_id" json:"product_id,omitempty"`
	Quantity         *int32  `protobuf:"varint,2,req,name=quantity" json:"quantity,omitempty"`
	Currency         *int32  `protobuf:"varint,3,req,name=currency" json:"currency,omitempty"`
	DeviceId         *string `protobuf:"bytes,4,req,name=device_id" json:"device_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetPurchaseMethod) Reset()         { *m = GetPurchaseMethod{} }
func (m *GetPurchaseMethod) String() string { return proto.CompactTextString(m) }
func (*GetPurchaseMethod) ProtoMessage()    {}

func (m *GetPurchaseMethod) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *GetPurchaseMethod) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *GetPurchaseMethod) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *GetPurchaseMethod) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

type DoPurchase struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DoPurchase) Reset()         { *m = DoPurchase{} }
func (m *DoPurchase) String() string { return proto.CompactTextString(m) }
func (*DoPurchase) ProtoMessage()    {}

type CancelPurchase struct {
	IsAutoCancel     *bool                                  `protobuf:"varint,1,req,name=is_auto_cancel" json:"is_auto_cancel,omitempty"`
	ThirdPartyReason *CancelPurchase_ThirdPartyCancelReason `protobuf:"varint,2,opt,name=third_party_reason,enum=util.CancelPurchase_ThirdPartyCancelReason,def=1" json:"third_party_reason,omitempty"`
	DeviceId         *string                                `protobuf:"bytes,3,req,name=device_id" json:"device_id,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *CancelPurchase) Reset()         { *m = CancelPurchase{} }
func (m *CancelPurchase) String() string { return proto.CompactTextString(m) }
func (*CancelPurchase) ProtoMessage()    {}

const Default_CancelPurchase_ThirdPartyReason CancelPurchase_ThirdPartyCancelReason = CancelPurchase_PROVIDER_REPORTED_FAILURE

func (m *CancelPurchase) GetIsAutoCancel() bool {
	if m != nil && m.IsAutoCancel != nil {
		return *m.IsAutoCancel
	}
	return false
}

func (m *CancelPurchase) GetThirdPartyReason() CancelPurchase_ThirdPartyCancelReason {
	if m != nil && m.ThirdPartyReason != nil {
		return *m.ThirdPartyReason
	}
	return Default_CancelPurchase_ThirdPartyReason
}

func (m *CancelPurchase) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

type CheckAccountLicenses struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckAccountLicenses) Reset()         { *m = CheckAccountLicenses{} }
func (m *CheckAccountLicenses) String() string { return proto.CompactTextString(m) }
func (*CheckAccountLicenses) ProtoMessage()    {}

type CheckGameLicenses struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckGameLicenses) Reset()         { *m = CheckGameLicenses{} }
func (m *CheckGameLicenses) String() string { return proto.CompactTextString(m) }
func (*CheckGameLicenses) ProtoMessage()    {}

type GetBattlePayConfig struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetBattlePayConfig) Reset()         { *m = GetBattlePayConfig{} }
func (m *GetBattlePayConfig) String() string { return proto.CompactTextString(m) }
func (*GetBattlePayConfig) ProtoMessage()    {}

type GetBattlePayStatus struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetBattlePayStatus) Reset()         { *m = GetBattlePayStatus{} }
func (m *GetBattlePayStatus) String() string { return proto.CompactTextString(m) }
func (*GetBattlePayStatus) ProtoMessage()    {}

type CancelQuest struct {
	QuestId          *int32 `protobuf:"varint,1,req,name=quest_id" json:"quest_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CancelQuest) Reset()         { *m = CancelQuest{} }
func (m *CancelQuest) String() string { return proto.CompactTextString(m) }
func (*CancelQuest) ProtoMessage()    {}

func (m *CancelQuest) GetQuestId() int32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

type MassDisenchantRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MassDisenchantRequest) Reset()         { *m = MassDisenchantRequest{} }
func (m *MassDisenchantRequest) String() string { return proto.CompactTextString(m) }
func (*MassDisenchantRequest) ProtoMessage()    {}

type PurchaseWithGold struct {
	Quantity         *int32       `protobuf:"varint,1,req,name=quantity" json:"quantity,omitempty"`
	Product          *ProductType `protobuf:"varint,2,req,name=product,enum=util.ProductType" json:"product,omitempty"`
	Data             *int32       `protobuf:"varint,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PurchaseWithGold) Reset()         { *m = PurchaseWithGold{} }
func (m *PurchaseWithGold) String() string { return proto.CompactTextString(m) }
func (*PurchaseWithGold) ProtoMessage()    {}

func (m *PurchaseWithGold) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *PurchaseWithGold) GetProduct() ProductType {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return ProductType_PRODUCT_TYPE_UNKNOWN
}

func (m *PurchaseWithGold) GetData() int32 {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return 0
}

type SetCardBack struct {
	CardBack         *int32 `protobuf:"varint,1,req,name=card_back" json:"card_back,omitempty"`
	DeckId           *int64 `protobuf:"varint,2,opt,name=deck_id" json:"deck_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetCardBack) Reset()         { *m = SetCardBack{} }
func (m *SetCardBack) String() string { return proto.CompactTextString(m) }
func (*SetCardBack) ProtoMessage()    {}

func (m *SetCardBack) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

func (m *SetCardBack) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

type ThirdPartyReceiptData struct {
	ThirdPartyId     *string `protobuf:"bytes,1,opt,name=third_party_id" json:"third_party_id,omitempty"`
	Receipt          *string `protobuf:"bytes,2,opt,name=receipt" json:"receipt,omitempty"`
	ThirdPartyUserId *string `protobuf:"bytes,3,opt,name=third_party_user_id" json:"third_party_user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThirdPartyReceiptData) Reset()         { *m = ThirdPartyReceiptData{} }
func (m *ThirdPartyReceiptData) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyReceiptData) ProtoMessage()    {}

func (m *ThirdPartyReceiptData) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *ThirdPartyReceiptData) GetReceipt() string {
	if m != nil && m.Receipt != nil {
		return *m.Receipt
	}
	return ""
}

func (m *ThirdPartyReceiptData) GetThirdPartyUserId() string {
	if m != nil && m.ThirdPartyUserId != nil {
		return *m.ThirdPartyUserId
	}
	return ""
}

type SubmitThirdPartyReceipt struct {
	ReceiptData      *ThirdPartyReceiptData `protobuf:"bytes,1,req,name=receipt_data" json:"receipt_data,omitempty"`
	TransactionId    *int64                 `protobuf:"varint,2,req,name=transaction_id" json:"transaction_id,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *SubmitThirdPartyReceipt) Reset()         { *m = SubmitThirdPartyReceipt{} }
func (m *SubmitThirdPartyReceipt) String() string { return proto.CompactTextString(m) }
func (*SubmitThirdPartyReceipt) ProtoMessage()    {}

func (m *SubmitThirdPartyReceipt) GetReceiptData() *ThirdPartyReceiptData {
	if m != nil {
		return m.ReceiptData
	}
	return nil
}

func (m *SubmitThirdPartyReceipt) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

type GetThirdPartyPurchaseStatus struct {
	ThirdPartyId     *string `protobuf:"bytes,1,req,name=third_party_id" json:"third_party_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetThirdPartyPurchaseStatus) Reset()         { *m = GetThirdPartyPurchaseStatus{} }
func (m *GetThirdPartyPurchaseStatus) String() string { return proto.CompactTextString(m) }
func (*GetThirdPartyPurchaseStatus) ProtoMessage()    {}

func (m *GetThirdPartyPurchaseStatus) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

type CheckAccountLicenseAchieve struct {
	Achieve          *int32 `protobuf:"varint,1,req,name=achieve" json:"achieve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckAccountLicenseAchieve) Reset()         { *m = CheckAccountLicenseAchieve{} }
func (m *CheckAccountLicenseAchieve) String() string { return proto.CompactTextString(m) }
func (*CheckAccountLicenseAchieve) ProtoMessage()    {}

func (m *CheckAccountLicenseAchieve) GetAchieve() int32 {
	if m != nil && m.Achieve != nil {
		return *m.Achieve
	}
	return 0
}

type TriggerLaunchDayEvent struct {
	LastPlayed       *NearbyPlayer `protobuf:"bytes,1,req,name=last_played" json:"last_played,omitempty"`
	OtherPlayer      *NearbyPlayer `protobuf:"bytes,2,req,name=other_player" json:"other_player,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *TriggerLaunchDayEvent) Reset()         { *m = TriggerLaunchDayEvent{} }
func (m *TriggerLaunchDayEvent) String() string { return proto.CompactTextString(m) }
func (*TriggerLaunchDayEvent) ProtoMessage()    {}

func (m *TriggerLaunchDayEvent) GetLastPlayed() *NearbyPlayer {
	if m != nil {
		return m.LastPlayed
	}
	return nil
}

func (m *TriggerLaunchDayEvent) GetOtherPlayer() *NearbyPlayer {
	if m != nil {
		return m.OtherPlayer
	}
	return nil
}

type GetAssetsVersion struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAssetsVersion) Reset()         { *m = GetAssetsVersion{} }
func (m *GetAssetsVersion) String() string { return proto.CompactTextString(m) }
func (*GetAssetsVersion) ProtoMessage()    {}

type GetAdventureProgress struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAdventureProgress) Reset()         { *m = GetAdventureProgress{} }
func (m *GetAdventureProgress) String() string { return proto.CompactTextString(m) }
func (*GetAdventureProgress) ProtoMessage()    {}

type SetAdventureOptions struct {
	AdventureOptions *AdventureOptions `protobuf:"bytes,1,req,name=adventure_options" json:"adventure_options,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SetAdventureOptions) Reset()         { *m = SetAdventureOptions{} }
func (m *SetAdventureOptions) String() string { return proto.CompactTextString(m) }
func (*SetAdventureOptions) ProtoMessage()    {}

func (m *SetAdventureOptions) GetAdventureOptions() *AdventureOptions {
	if m != nil {
		return m.AdventureOptions
	}
	return nil
}

type StartThirdPartyPurchase struct {
	Provider            *shared.BattlePayProvider `protobuf:"varint,1,req,name=provider,enum=shared.BattlePayProvider" json:"provider,omitempty"`
	ProductId           *string                   `protobuf:"bytes,2,req,name=product_id" json:"product_id,omitempty"`
	Quantity            *int32                    `protobuf:"varint,3,req,name=quantity" json:"quantity,omitempty"`
	DanglingReceiptData *ThirdPartyReceiptData    `protobuf:"bytes,4,opt,name=dangling_receipt_data" json:"dangling_receipt_data,omitempty"`
	DeviceId            *string                   `protobuf:"bytes,5,req,name=device_id" json:"device_id,omitempty"`
	XXX_unrecognized    []byte                    `json:"-"`
}

func (m *StartThirdPartyPurchase) Reset()         { *m = StartThirdPartyPurchase{} }
func (m *StartThirdPartyPurchase) String() string { return proto.CompactTextString(m) }
func (*StartThirdPartyPurchase) ProtoMessage()    {}

func (m *StartThirdPartyPurchase) GetProvider() shared.BattlePayProvider {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return shared.BattlePayProvider_BP_PROVIDER_BLIZZARD
}

func (m *StartThirdPartyPurchase) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *StartThirdPartyPurchase) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *StartThirdPartyPurchase) GetDanglingReceiptData() *ThirdPartyReceiptData {
	if m != nil {
		return m.DanglingReceiptData
	}
	return nil
}

func (m *StartThirdPartyPurchase) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

type SetFavoriteHero struct {
	FavoriteHero     *shared.FavoriteHero `protobuf:"bytes,1,req,name=favorite_hero" json:"favorite_hero,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SetFavoriteHero) Reset()         { *m = SetFavoriteHero{} }
func (m *SetFavoriteHero) String() string { return proto.CompactTextString(m) }
func (*SetFavoriteHero) ProtoMessage()    {}

func (m *SetFavoriteHero) GetFavoriteHero() *shared.FavoriteHero {
	if m != nil {
		return m.FavoriteHero
	}
	return nil
}

type AssetRequestKey struct {
	Type             *shared.AssetType `protobuf:"varint,1,req,name=type,enum=shared.AssetType" json:"type,omitempty"`
	AssetId          *int32            `protobuf:"varint,2,opt,name=asset_id" json:"asset_id,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *AssetRequestKey) Reset()         { *m = AssetRequestKey{} }
func (m *AssetRequestKey) String() string { return proto.CompactTextString(m) }
func (*AssetRequestKey) ProtoMessage()    {}

func (m *AssetRequestKey) GetType() shared.AssetType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return shared.AssetType_ASSET_TYPE_SCENARIO
}

func (m *AssetRequestKey) GetAssetId() int32 {
	if m != nil && m.AssetId != nil {
		return *m.AssetId
	}
	return 0
}

type GetAssetRequest struct {
	Requests         []*AssetRequestKey `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *GetAssetRequest) Reset()         { *m = GetAssetRequest{} }
func (m *GetAssetRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssetRequest) ProtoMessage()    {}

func (m *GetAssetRequest) GetRequests() []*AssetRequestKey {
	if m != nil {
		return m.Requests
	}
	return nil
}

type DebugCommandRequest struct {
	Command          *string  `protobuf:"bytes,1,req,name=command" json:"command,omitempty"`
	Args             []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DebugCommandRequest) Reset()         { *m = DebugCommandRequest{} }
func (m *DebugCommandRequest) String() string { return proto.CompactTextString(m) }
func (*DebugCommandRequest) ProtoMessage()    {}

func (m *DebugCommandRequest) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

func (m *DebugCommandRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type NotSoMassiveLoginReply struct {
	SpecialEventTiming []*SpecialEventTiming `protobuf:"bytes,10,rep,name=special_event_timing" json:"special_event_timing,omitempty"`
	TavernBrawls       *TavernBrawlInfo      `protobuf:"bytes,11,opt,name=tavern_brawls" json:"tavern_brawls,omitempty"`
	XXX_unrecognized   []byte                `json:"-"`
}

func (m *NotSoMassiveLoginReply) Reset()         { *m = NotSoMassiveLoginReply{} }
func (m *NotSoMassiveLoginReply) String() string { return proto.CompactTextString(m) }
func (*NotSoMassiveLoginReply) ProtoMessage()    {}

func (m *NotSoMassiveLoginReply) GetSpecialEventTiming() []*SpecialEventTiming {
	if m != nil {
		return m.SpecialEventTiming
	}
	return nil
}

func (m *NotSoMassiveLoginReply) GetTavernBrawls() *TavernBrawlInfo {
	if m != nil {
		return m.TavernBrawls
	}
	return nil
}

type UpdateLoginComplete struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UpdateLoginComplete) Reset()         { *m = UpdateLoginComplete{} }
func (m *UpdateLoginComplete) String() string { return proto.CompactTextString(m) }
func (*UpdateLoginComplete) ProtoMessage()    {}

type AckWingProgress struct {
	Wing             *int32 `protobuf:"varint,1,req,name=wing" json:"wing,omitempty"`
	Ack              *int32 `protobuf:"varint,2,req,name=ack" json:"ack,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AckWingProgress) Reset()         { *m = AckWingProgress{} }
func (m *AckWingProgress) String() string { return proto.CompactTextString(m) }
func (*AckWingProgress) ProtoMessage()    {}

func (m *AckWingProgress) GetWing() int32 {
	if m != nil && m.Wing != nil {
		return *m.Wing
	}
	return 0
}

func (m *AckWingProgress) GetAck() int32 {
	if m != nil && m.Ack != nil {
		return *m.Ack
	}
	return 0
}

type AcknowledgeBanner struct {
	Banner           *int32 `protobuf:"varint,1,req,name=banner" json:"banner,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AcknowledgeBanner) Reset()         { *m = AcknowledgeBanner{} }
func (m *AcknowledgeBanner) String() string { return proto.CompactTextString(m) }
func (*AcknowledgeBanner) ProtoMessage()    {}

func (m *AcknowledgeBanner) GetBanner() int32 {
	if m != nil && m.Banner != nil {
		return *m.Banner
	}
	return 0
}

type Disconnected struct {
	Address          *string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	GameHandle       *int32  `protobuf:"varint,2,opt,name=game_handle" json:"game_handle,omitempty"`
	ClientHandle     *int64  `protobuf:"varint,3,opt,name=client_handle" json:"client_handle,omitempty"`
	Port             *int32  `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	Version          *string `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	AuroraPassword   *string `protobuf:"bytes,6,opt,name=aurora_password" json:"aurora_password,omitempty"`
	Scenario         *int32  `protobuf:"varint,7,opt,name=scenario" json:"scenario,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Disconnected) Reset()         { *m = Disconnected{} }
func (m *Disconnected) String() string { return proto.CompactTextString(m) }
func (*Disconnected) ProtoMessage()    {}

func (m *Disconnected) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Disconnected) GetGameHandle() int32 {
	if m != nil && m.GameHandle != nil {
		return *m.GameHandle
	}
	return 0
}

func (m *Disconnected) GetClientHandle() int64 {
	if m != nil && m.ClientHandle != nil {
		return *m.ClientHandle
	}
	return 0
}

func (m *Disconnected) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *Disconnected) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Disconnected) GetAuroraPassword() string {
	if m != nil && m.AuroraPassword != nil {
		return *m.AuroraPassword
	}
	return ""
}

func (m *Disconnected) GetScenario() int32 {
	if m != nil && m.Scenario != nil {
		return *m.Scenario
	}
	return 0
}

type ValidateAchieveResponse struct {
	Achieve          *int32 `protobuf:"varint,1,req,name=achieve" json:"achieve,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ValidateAchieveResponse) Reset()         { *m = ValidateAchieveResponse{} }
func (m *ValidateAchieveResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateAchieveResponse) ProtoMessage()    {}

func (m *ValidateAchieveResponse) GetAchieve() int32 {
	if m != nil && m.Achieve != nil {
		return *m.Achieve
	}
	return 0
}

type PlayQueue struct {
	Queue            *shared.PlayQueueInfo `protobuf:"bytes,1,req,name=queue" json:"queue,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *PlayQueue) Reset()         { *m = PlayQueue{} }
func (m *PlayQueue) String() string { return proto.CompactTextString(m) }
func (*PlayQueue) ProtoMessage()    {}

func (m *PlayQueue) GetQueue() *shared.PlayQueueInfo {
	if m != nil {
		return m.Queue
	}
	return nil
}

type GuardianVars struct {
	Tourney          *bool  `protobuf:"varint,1,opt,name=tourney" json:"tourney,omitempty"`
	Practice         *bool  `protobuf:"varint,2,opt,name=practice" json:"practice,omitempty"`
	Casual           *bool  `protobuf:"varint,3,opt,name=casual" json:"casual,omitempty"`
	Forge            *bool  `protobuf:"varint,4,opt,name=forge" json:"forge,omitempty"`
	Friendly         *bool  `protobuf:"varint,5,opt,name=friendly" json:"friendly,omitempty"`
	Manager          *bool  `protobuf:"varint,6,opt,name=manager" json:"manager,omitempty"`
	Crafting         *bool  `protobuf:"varint,7,opt,name=crafting" json:"crafting,omitempty"`
	Hunter           *bool  `protobuf:"varint,8,opt,name=hunter" json:"hunter,omitempty"`
	Mage             *bool  `protobuf:"varint,9,opt,name=mage" json:"mage,omitempty"`
	Paladin          *bool  `protobuf:"varint,10,opt,name=paladin" json:"paladin,omitempty"`
	Priest           *bool  `protobuf:"varint,11,opt,name=priest" json:"priest,omitempty"`
	Rogue            *bool  `protobuf:"varint,12,opt,name=rogue" json:"rogue,omitempty"`
	Shaman           *bool  `protobuf:"varint,13,opt,name=shaman" json:"shaman,omitempty"`
	Warlock          *bool  `protobuf:"varint,14,opt,name=warlock" json:"warlock,omitempty"`
	Warrior          *bool  `protobuf:"varint,15,opt,name=warrior" json:"warrior,omitempty"`
	ShowUserUI       *int32 `protobuf:"varint,16,opt,name=show_user_u_i" json:"show_user_u_i,omitempty"`
	Store            *bool  `protobuf:"varint,17,opt,name=store" json:"store,omitempty"`
	BattlePay        *bool  `protobuf:"varint,18,opt,name=battle_pay" json:"battle_pay,omitempty"`
	BuyWithGold      *bool  `protobuf:"varint,19,opt,name=buy_with_gold" json:"buy_with_gold,omitempty"`
	TavernBrawl      *bool  `protobuf:"varint,20,opt,name=tavern_brawl" json:"tavern_brawl,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuardianVars) Reset()         { *m = GuardianVars{} }
func (m *GuardianVars) String() string { return proto.CompactTextString(m) }
func (*GuardianVars) ProtoMessage()    {}

func (m *GuardianVars) GetTourney() bool {
	if m != nil && m.Tourney != nil {
		return *m.Tourney
	}
	return false
}

func (m *GuardianVars) GetPractice() bool {
	if m != nil && m.Practice != nil {
		return *m.Practice
	}
	return false
}

func (m *GuardianVars) GetCasual() bool {
	if m != nil && m.Casual != nil {
		return *m.Casual
	}
	return false
}

func (m *GuardianVars) GetForge() bool {
	if m != nil && m.Forge != nil {
		return *m.Forge
	}
	return false
}

func (m *GuardianVars) GetFriendly() bool {
	if m != nil && m.Friendly != nil {
		return *m.Friendly
	}
	return false
}

func (m *GuardianVars) GetManager() bool {
	if m != nil && m.Manager != nil {
		return *m.Manager
	}
	return false
}

func (m *GuardianVars) GetCrafting() bool {
	if m != nil && m.Crafting != nil {
		return *m.Crafting
	}
	return false
}

func (m *GuardianVars) GetHunter() bool {
	if m != nil && m.Hunter != nil {
		return *m.Hunter
	}
	return false
}

func (m *GuardianVars) GetMage() bool {
	if m != nil && m.Mage != nil {
		return *m.Mage
	}
	return false
}

func (m *GuardianVars) GetPaladin() bool {
	if m != nil && m.Paladin != nil {
		return *m.Paladin
	}
	return false
}

func (m *GuardianVars) GetPriest() bool {
	if m != nil && m.Priest != nil {
		return *m.Priest
	}
	return false
}

func (m *GuardianVars) GetRogue() bool {
	if m != nil && m.Rogue != nil {
		return *m.Rogue
	}
	return false
}

func (m *GuardianVars) GetShaman() bool {
	if m != nil && m.Shaman != nil {
		return *m.Shaman
	}
	return false
}

func (m *GuardianVars) GetWarlock() bool {
	if m != nil && m.Warlock != nil {
		return *m.Warlock
	}
	return false
}

func (m *GuardianVars) GetWarrior() bool {
	if m != nil && m.Warrior != nil {
		return *m.Warrior
	}
	return false
}

func (m *GuardianVars) GetShowUserUI() int32 {
	if m != nil && m.ShowUserUI != nil {
		return *m.ShowUserUI
	}
	return 0
}

func (m *GuardianVars) GetStore() bool {
	if m != nil && m.Store != nil {
		return *m.Store
	}
	return false
}

func (m *GuardianVars) GetBattlePay() bool {
	if m != nil && m.BattlePay != nil {
		return *m.BattlePay
	}
	return false
}

func (m *GuardianVars) GetBuyWithGold() bool {
	if m != nil && m.BuyWithGold != nil {
		return *m.BuyWithGold
	}
	return false
}

func (m *GuardianVars) GetTavernBrawl() bool {
	if m != nil && m.TavernBrawl != nil {
		return *m.TavernBrawl
	}
	return false
}

type ArcaneDustBalance struct {
	Balance          *int64 `protobuf:"varint,1,req,name=balance" json:"balance,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArcaneDustBalance) Reset()         { *m = ArcaneDustBalance{} }
func (m *ArcaneDustBalance) String() string { return proto.CompactTextString(m) }
func (*ArcaneDustBalance) ProtoMessage()    {}

func (m *ArcaneDustBalance) GetBalance() int64 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

type GoldBalance struct {
	CappedBalance    *int64 `protobuf:"varint,1,req,name=capped_balance" json:"capped_balance,omitempty"`
	BonusBalance     *int64 `protobuf:"varint,2,req,name=bonus_balance" json:"bonus_balance,omitempty"`
	Cap              *int64 `protobuf:"varint,3,req,name=cap" json:"cap,omitempty"`
	CapWarning       *int64 `protobuf:"varint,4,req,name=cap_warning" json:"cap_warning,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GoldBalance) Reset()         { *m = GoldBalance{} }
func (m *GoldBalance) String() string { return proto.CompactTextString(m) }
func (*GoldBalance) ProtoMessage()    {}

func (m *GoldBalance) GetCappedBalance() int64 {
	if m != nil && m.CappedBalance != nil {
		return *m.CappedBalance
	}
	return 0
}

func (m *GoldBalance) GetBonusBalance() int64 {
	if m != nil && m.BonusBalance != nil {
		return *m.BonusBalance
	}
	return 0
}

func (m *GoldBalance) GetCap() int64 {
	if m != nil && m.Cap != nil {
		return *m.Cap
	}
	return 0
}

func (m *GoldBalance) GetCapWarning() int64 {
	if m != nil && m.CapWarning != nil {
		return *m.CapWarning
	}
	return 0
}

type CardValues struct {
	Cards            []*CardValue `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
	CardNerfIndex    *int32       `protobuf:"varint,2,req,name=card_nerf_index" json:"card_nerf_index,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CardValues) Reset()         { *m = CardValues{} }
func (m *CardValues) String() string { return proto.CompactTextString(m) }
func (*CardValues) ProtoMessage()    {}

func (m *CardValues) GetCards() []*CardValue {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *CardValues) GetCardNerfIndex() int32 {
	if m != nil && m.CardNerfIndex != nil {
		return *m.CardNerfIndex
	}
	return 0
}

type BoughtSoldCard struct {
	Def              *shared.CardDef        `protobuf:"bytes,1,req,name=def" json:"def,omitempty"`
	Amount           *int32                 `protobuf:"varint,2,req,name=amount" json:"amount,omitempty"`
	Result           *BoughtSoldCard_Result `protobuf:"varint,3,req,name=result,enum=util.BoughtSoldCard_Result" json:"result,omitempty"`
	Count            *int32                 `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Nerfed           *bool                  `protobuf:"varint,5,opt,name=nerfed" json:"nerfed,omitempty"`
	UnitSellPrice    *int32                 `protobuf:"varint,6,opt,name=unit_sell_price" json:"unit_sell_price,omitempty"`
	UnitBuyPrice     *int32                 `protobuf:"varint,7,opt,name=unit_buy_price" json:"unit_buy_price,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *BoughtSoldCard) Reset()         { *m = BoughtSoldCard{} }
func (m *BoughtSoldCard) String() string { return proto.CompactTextString(m) }
func (*BoughtSoldCard) ProtoMessage()    {}

func (m *BoughtSoldCard) GetDef() *shared.CardDef {
	if m != nil {
		return m.Def
	}
	return nil
}

func (m *BoughtSoldCard) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *BoughtSoldCard) GetResult() BoughtSoldCard_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return BoughtSoldCard_GENERIC_FAILURE
}

func (m *BoughtSoldCard) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *BoughtSoldCard) GetNerfed() bool {
	if m != nil && m.Nerfed != nil {
		return *m.Nerfed
	}
	return false
}

func (m *BoughtSoldCard) GetUnitSellPrice() int32 {
	if m != nil && m.UnitSellPrice != nil {
		return *m.UnitSellPrice
	}
	return 0
}

func (m *BoughtSoldCard) GetUnitBuyPrice() int32 {
	if m != nil && m.UnitBuyPrice != nil {
		return *m.UnitBuyPrice
	}
	return 0
}

type NOP struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *NOP) Reset()         { *m = NOP{} }
func (m *NOP) String() string { return proto.CompactTextString(m) }
func (*NOP) ProtoMessage()    {}

type Achieves struct {
	List             []*Achieve `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Achieves) Reset()         { *m = Achieves{} }
func (m *Achieves) String() string { return proto.CompactTextString(m) }
func (*Achieves) ProtoMessage()    {}

func (m *Achieves) GetList() []*Achieve {
	if m != nil {
		return m.List
	}
	return nil
}

type DraftError struct {
	ErrorCode        *DraftError_ErrorCode `protobuf:"varint,1,req,name=error_code,enum=util.DraftError_ErrorCode" json:"error_code,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *DraftError) Reset()         { *m = DraftError{} }
func (m *DraftError) String() string { return proto.CompactTextString(m) }
func (*DraftError) ProtoMessage()    {}

func (m *DraftError) GetErrorCode() DraftError_ErrorCode {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return DraftError_DE_UNKNOWN
}

type DraftBeginning struct {
	DeckId           *int64            `protobuf:"varint,1,req,name=deck_id" json:"deck_id,omitempty"`
	ChoiceList       []*shared.CardDef `protobuf:"bytes,3,rep,name=choice_list" json:"choice_list,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DraftBeginning) Reset()         { *m = DraftBeginning{} }
func (m *DraftBeginning) String() string { return proto.CompactTextString(m) }
func (*DraftBeginning) ProtoMessage()    {}

func (m *DraftBeginning) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftBeginning) GetChoiceList() []*shared.CardDef {
	if m != nil {
		return m.ChoiceList
	}
	return nil
}

type DraftRetired struct {
	DeckId           *int64              `protobuf:"varint,1,req,name=deck_id" json:"deck_id,omitempty"`
	Chest            *shared.RewardChest `protobuf:"bytes,2,req,name=chest" json:"chest,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *DraftRetired) Reset()         { *m = DraftRetired{} }
func (m *DraftRetired) String() string { return proto.CompactTextString(m) }
func (*DraftRetired) ProtoMessage()    {}

func (m *DraftRetired) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftRetired) GetChest() *shared.RewardChest {
	if m != nil {
		return m.Chest
	}
	return nil
}

type DraftRewardsAcked struct {
	DeckId           *int64 `protobuf:"varint,1,req,name=deck_id" json:"deck_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DraftRewardsAcked) Reset()         { *m = DraftRewardsAcked{} }
func (m *DraftRewardsAcked) String() string { return proto.CompactTextString(m) }
func (*DraftRewardsAcked) ProtoMessage()    {}

func (m *DraftRewardsAcked) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

type DraftChoicesAndContents struct {
	DeckId           *int64                 `protobuf:"varint,1,req,name=deck_id" json:"deck_id,omitempty"`
	Slot             *int32                 `protobuf:"varint,2,req,name=slot" json:"slot,omitempty"`
	Cards            []*shared.DeckCardData `protobuf:"bytes,5,rep,name=cards" json:"cards,omitempty"`
	Wins             *int32                 `protobuf:"varint,6,req,name=wins" json:"wins,omitempty"`
	Losses           *int32                 `protobuf:"varint,7,req,name=losses" json:"losses,omitempty"`
	Chest            *shared.RewardChest    `protobuf:"bytes,8,opt,name=chest" json:"chest,omitempty"`
	ChoiceList       []*shared.CardDef      `protobuf:"bytes,9,rep,name=choice_list" json:"choice_list,omitempty"`
	HeroDef          *shared.CardDef        `protobuf:"bytes,10,req,name=hero_def" json:"hero_def,omitempty"`
	MaxWins          *int32                 `protobuf:"varint,11,opt,name=max_wins" json:"max_wins,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *DraftChoicesAndContents) Reset()         { *m = DraftChoicesAndContents{} }
func (m *DraftChoicesAndContents) String() string { return proto.CompactTextString(m) }
func (*DraftChoicesAndContents) ProtoMessage()    {}

func (m *DraftChoicesAndContents) GetDeckId() int64 {
	if m != nil && m.DeckId != nil {
		return *m.DeckId
	}
	return 0
}

func (m *DraftChoicesAndContents) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *DraftChoicesAndContents) GetCards() []*shared.DeckCardData {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *DraftChoicesAndContents) GetWins() int32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *DraftChoicesAndContents) GetLosses() int32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *DraftChoicesAndContents) GetChest() *shared.RewardChest {
	if m != nil {
		return m.Chest
	}
	return nil
}

func (m *DraftChoicesAndContents) GetChoiceList() []*shared.CardDef {
	if m != nil {
		return m.ChoiceList
	}
	return nil
}

func (m *DraftChoicesAndContents) GetHeroDef() *shared.CardDef {
	if m != nil {
		return m.HeroDef
	}
	return nil
}

func (m *DraftChoicesAndContents) GetMaxWins() int32 {
	if m != nil && m.MaxWins != nil {
		return *m.MaxWins
	}
	return 0
}

type DraftChosen struct {
	Chosen           *shared.CardDef   `protobuf:"bytes,3,req,name=chosen" json:"chosen,omitempty"`
	NextChoiceList   []*shared.CardDef `protobuf:"bytes,4,rep,name=next_choice_list" json:"next_choice_list,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DraftChosen) Reset()         { *m = DraftChosen{} }
func (m *DraftChosen) String() string { return proto.CompactTextString(m) }
func (*DraftChosen) ProtoMessage()    {}

func (m *DraftChosen) GetChosen() *shared.CardDef {
	if m != nil {
		return m.Chosen
	}
	return nil
}

func (m *DraftChosen) GetNextChoiceList() []*shared.CardDef {
	if m != nil {
		return m.NextChoiceList
	}
	return nil
}

type ClientOptions struct {
	Options          []*ClientOption `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
	Failed           *bool           `protobuf:"varint,2,opt,name=failed" json:"failed,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ClientOptions) Reset()         { *m = ClientOptions{} }
func (m *ClientOptions) String() string { return proto.CompactTextString(m) }
func (*ClientOptions) ProtoMessage()    {}

func (m *ClientOptions) GetOptions() []*ClientOption {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ClientOptions) GetFailed() bool {
	if m != nil && m.Failed != nil {
		return *m.Failed
	}
	return false
}

type ProfileDeckLimit struct {
	DeckLimit        *int32 `protobuf:"varint,1,req,name=deck_limit" json:"deck_limit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ProfileDeckLimit) Reset()         { *m = ProfileDeckLimit{} }
func (m *ProfileDeckLimit) String() string { return proto.CompactTextString(m) }
func (*ProfileDeckLimit) ProtoMessage()    {}

func (m *ProfileDeckLimit) GetDeckLimit() int32 {
	if m != nil && m.DeckLimit != nil {
		return *m.DeckLimit
	}
	return 0
}

type ProfileProgress struct {
	Progress         *int64              `protobuf:"varint,1,req,name=progress" json:"progress,omitempty"`
	BestForge        *int32              `protobuf:"varint,2,req,name=best_forge" json:"best_forge,omitempty"`
	LastForge        *shared.Date        `protobuf:"bytes,3,opt,name=last_forge" json:"last_forge,omitempty"`
	DisplayBanner    *int32              `protobuf:"varint,4,opt,name=display_banner,def=0" json:"display_banner,omitempty"`
	AdventureOptions []*AdventureOptions `protobuf:"bytes,5,rep,name=adventure_options" json:"adventure_options,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ProfileProgress) Reset()         { *m = ProfileProgress{} }
func (m *ProfileProgress) String() string { return proto.CompactTextString(m) }
func (*ProfileProgress) ProtoMessage()    {}

const Default_ProfileProgress_DisplayBanner int32 = 0

func (m *ProfileProgress) GetProgress() int64 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *ProfileProgress) GetBestForge() int32 {
	if m != nil && m.BestForge != nil {
		return *m.BestForge
	}
	return 0
}

func (m *ProfileProgress) GetLastForge() *shared.Date {
	if m != nil {
		return m.LastForge
	}
	return nil
}

func (m *ProfileProgress) GetDisplayBanner() int32 {
	if m != nil && m.DisplayBanner != nil {
		return *m.DisplayBanner
	}
	return Default_ProfileProgress_DisplayBanner
}

func (m *ProfileProgress) GetAdventureOptions() []*AdventureOptions {
	if m != nil {
		return m.AdventureOptions
	}
	return nil
}

type ProfileNotices struct {
	List             []*ProfileNotice `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ProfileNotices) Reset()         { *m = ProfileNotices{} }
func (m *ProfileNotices) String() string { return proto.CompactTextString(m) }
func (*ProfileNotices) ProtoMessage()    {}

func (m *ProfileNotices) GetList() []*ProfileNotice {
	if m != nil {
		return m.List
	}
	return nil
}

type DeckList struct {
	Decks            []*shared.DeckInfo `protobuf:"bytes,1,rep,name=decks" json:"decks,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *DeckList) Reset()         { *m = DeckList{} }
func (m *DeckList) String() string { return proto.CompactTextString(m) }
func (*DeckList) ProtoMessage()    {}

func (m *DeckList) GetDecks() []*shared.DeckInfo {
	if m != nil {
		return m.Decks
	}
	return nil
}

type Collection struct {
	Stacks           []*shared.CardStack `protobuf:"bytes,1,rep,name=stacks" json:"stacks,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Collection) Reset()         { *m = Collection{} }
func (m *Collection) String() string { return proto.CompactTextString(m) }
func (*Collection) ProtoMessage()    {}

func (m *Collection) GetStacks() []*shared.CardStack {
	if m != nil {
		return m.Stacks
	}
	return nil
}

type DeckContents struct {
	Deck             *int64                 `protobuf:"varint,1,req,name=deck" json:"deck,omitempty"`
	Cards            []*shared.DeckCardData `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *DeckContents) Reset()         { *m = DeckContents{} }
func (m *DeckContents) String() string { return proto.CompactTextString(m) }
func (*DeckContents) ProtoMessage()    {}

func (m *DeckContents) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *DeckContents) GetCards() []*shared.DeckCardData {
	if m != nil {
		return m.Cards
	}
	return nil
}

type DBAction struct {
	Action           *shared.DatabaseAction `protobuf:"varint,1,req,name=action,enum=shared.DatabaseAction" json:"action,omitempty"`
	Result           *shared.DatabaseResult `protobuf:"varint,2,req,name=result,enum=shared.DatabaseResult" json:"result,omitempty"`
	MetaData         *int64                 `protobuf:"varint,3,opt,name=meta_data" json:"meta_data,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *DBAction) Reset()         { *m = DBAction{} }
func (m *DBAction) String() string { return proto.CompactTextString(m) }
func (*DBAction) ProtoMessage()    {}

func (m *DBAction) GetAction() shared.DatabaseAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return shared.DatabaseAction_DB_A_UNKNOWN
}

func (m *DBAction) GetResult() shared.DatabaseResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return shared.DatabaseResult_DB_E_SQL_EX
}

func (m *DBAction) GetMetaData() int64 {
	if m != nil && m.MetaData != nil {
		return *m.MetaData
	}
	return 0
}

type DeckCreated struct {
	Info             *shared.DeckInfo `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *DeckCreated) Reset()         { *m = DeckCreated{} }
func (m *DeckCreated) String() string { return proto.CompactTextString(m) }
func (*DeckCreated) ProtoMessage()    {}

func (m *DeckCreated) GetInfo() *shared.DeckInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type DeckDeleted struct {
	Deck             *int64 `protobuf:"varint,1,req,name=deck" json:"deck,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeckDeleted) Reset()         { *m = DeckDeleted{} }
func (m *DeckDeleted) String() string { return proto.CompactTextString(m) }
func (*DeckDeleted) ProtoMessage()    {}

func (m *DeckDeleted) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

type DeckRenamed struct {
	Deck             *int64  `protobuf:"varint,1,req,name=deck" json:"deck,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeckRenamed) Reset()         { *m = DeckRenamed{} }
func (m *DeckRenamed) String() string { return proto.CompactTextString(m) }
func (*DeckRenamed) ProtoMessage()    {}

func (m *DeckRenamed) GetDeck() int64 {
	if m != nil && m.Deck != nil {
		return *m.Deck
	}
	return 0
}

func (m *DeckRenamed) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type BoosterList struct {
	List             []*shared.BoosterInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *BoosterList) Reset()         { *m = BoosterList{} }
func (m *BoosterList) String() string { return proto.CompactTextString(m) }
func (*BoosterList) ProtoMessage()    {}

func (m *BoosterList) GetList() []*shared.BoosterInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type BoosterTallyList struct {
	List             []*BoosterTally `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *BoosterTallyList) Reset()         { *m = BoosterTallyList{} }
func (m *BoosterTallyList) String() string { return proto.CompactTextString(m) }
func (*BoosterTallyList) ProtoMessage()    {}

func (m *BoosterTallyList) GetList() []*BoosterTally {
	if m != nil {
		return m.List
	}
	return nil
}

type BoosterContent struct {
	List             []*BoosterCard `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BoosterContent) Reset()         { *m = BoosterContent{} }
func (m *BoosterContent) String() string { return proto.CompactTextString(m) }
func (*BoosterContent) ProtoMessage()    {}

func (m *BoosterContent) GetList() []*BoosterCard {
	if m != nil {
		return m.List
	}
	return nil
}

type MedalInfo struct {
	SeasonWins       *int32 `protobuf:"varint,3,req,name=season_wins" json:"season_wins,omitempty"`
	Stars            *int32 `protobuf:"varint,6,req,name=stars" json:"stars,omitempty"`
	Streak           *int32 `protobuf:"varint,7,req,name=streak" json:"streak,omitempty"`
	StarLevel        *int32 `protobuf:"varint,8,req,name=star_level" json:"star_level,omitempty"`
	LevelStart       *int32 `protobuf:"varint,9,req,name=level_start" json:"level_start,omitempty"`
	LevelEnd         *int32 `protobuf:"varint,10,req,name=level_end" json:"level_end,omitempty"`
	CanLoseLevel     *bool  `protobuf:"varint,11,req,name=can_lose_level" json:"can_lose_level,omitempty"`
	LegendRank       *int32 `protobuf:"varint,13,opt,name=legend_rank" json:"legend_rank,omitempty"`
	BestStarLevel    *int32 `protobuf:"varint,14,opt,name=best_star_level" json:"best_star_level,omitempty"`
	CanLoseStars     *bool  `protobuf:"varint,15,opt,name=can_lose_stars" json:"can_lose_stars,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MedalInfo) Reset()         { *m = MedalInfo{} }
func (m *MedalInfo) String() string { return proto.CompactTextString(m) }
func (*MedalInfo) ProtoMessage()    {}

func (m *MedalInfo) GetSeasonWins() int32 {
	if m != nil && m.SeasonWins != nil {
		return *m.SeasonWins
	}
	return 0
}

func (m *MedalInfo) GetStars() int32 {
	if m != nil && m.Stars != nil {
		return *m.Stars
	}
	return 0
}

func (m *MedalInfo) GetStreak() int32 {
	if m != nil && m.Streak != nil {
		return *m.Streak
	}
	return 0
}

func (m *MedalInfo) GetStarLevel() int32 {
	if m != nil && m.StarLevel != nil {
		return *m.StarLevel
	}
	return 0
}

func (m *MedalInfo) GetLevelStart() int32 {
	if m != nil && m.LevelStart != nil {
		return *m.LevelStart
	}
	return 0
}

func (m *MedalInfo) GetLevelEnd() int32 {
	if m != nil && m.LevelEnd != nil {
		return *m.LevelEnd
	}
	return 0
}

func (m *MedalInfo) GetCanLoseLevel() bool {
	if m != nil && m.CanLoseLevel != nil {
		return *m.CanLoseLevel
	}
	return false
}

func (m *MedalInfo) GetLegendRank() int32 {
	if m != nil && m.LegendRank != nil {
		return *m.LegendRank
	}
	return 0
}

func (m *MedalInfo) GetBestStarLevel() int32 {
	if m != nil && m.BestStarLevel != nil {
		return *m.BestStarLevel
	}
	return 0
}

func (m *MedalInfo) GetCanLoseStars() bool {
	if m != nil && m.CanLoseStars != nil {
		return *m.CanLoseStars
	}
	return false
}

type MedalHistory struct {
	Medals           []*MedalHistoryInfo `protobuf:"bytes,1,rep,name=medals" json:"medals,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *MedalHistory) Reset()         { *m = MedalHistory{} }
func (m *MedalHistory) String() string { return proto.CompactTextString(m) }
func (*MedalHistory) ProtoMessage()    {}

func (m *MedalHistory) GetMedals() []*MedalHistoryInfo {
	if m != nil {
		return m.Medals
	}
	return nil
}

type GamesInfo struct {
	GamesStarted       *int32 `protobuf:"varint,1,req,name=games_started" json:"games_started,omitempty"`
	GamesWon           *int32 `protobuf:"varint,2,req,name=games_won" json:"games_won,omitempty"`
	GamesLost          *int32 `protobuf:"varint,3,req,name=games_lost" json:"games_lost,omitempty"`
	FreeRewardProgress *int32 `protobuf:"varint,4,req,name=free_reward_progress" json:"free_reward_progress,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *GamesInfo) Reset()         { *m = GamesInfo{} }
func (m *GamesInfo) String() string { return proto.CompactTextString(m) }
func (*GamesInfo) ProtoMessage()    {}

func (m *GamesInfo) GetGamesStarted() int32 {
	if m != nil && m.GamesStarted != nil {
		return *m.GamesStarted
	}
	return 0
}

func (m *GamesInfo) GetGamesWon() int32 {
	if m != nil && m.GamesWon != nil {
		return *m.GamesWon
	}
	return 0
}

func (m *GamesInfo) GetGamesLost() int32 {
	if m != nil && m.GamesLost != nil {
		return *m.GamesLost
	}
	return 0
}

func (m *GamesInfo) GetFreeRewardProgress() int32 {
	if m != nil && m.FreeRewardProgress != nil {
		return *m.FreeRewardProgress
	}
	return 0
}

type PurchaseMethod struct {
	ProductId         *string        `protobuf:"bytes,1,opt,name=product_id" json:"product_id,omitempty"`
	Quantity          *int32         `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	Currency          *int32         `protobuf:"varint,3,opt,name=currency" json:"currency,omitempty"`
	WalletName        *string        `protobuf:"bytes,4,opt,name=wallet_name" json:"wallet_name,omitempty"`
	UseEbalance       *bool          `protobuf:"varint,5,opt,name=use_ebalance" json:"use_ebalance,omitempty"`
	Error             *PurchaseError `protobuf:"bytes,6,opt,name=error" json:"error,omitempty"`
	TransactionId     *int64         `protobuf:"varint,7,opt,name=transaction_id" json:"transaction_id,omitempty"`
	IsZeroCostLicense *bool          `protobuf:"varint,8,opt,name=is_zero_cost_license" json:"is_zero_cost_license,omitempty"`
	XXX_unrecognized  []byte         `json:"-"`
}

func (m *PurchaseMethod) Reset()         { *m = PurchaseMethod{} }
func (m *PurchaseMethod) String() string { return proto.CompactTextString(m) }
func (*PurchaseMethod) ProtoMessage()    {}

func (m *PurchaseMethod) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *PurchaseMethod) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

func (m *PurchaseMethod) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *PurchaseMethod) GetWalletName() string {
	if m != nil && m.WalletName != nil {
		return *m.WalletName
	}
	return ""
}

func (m *PurchaseMethod) GetUseEbalance() bool {
	if m != nil && m.UseEbalance != nil {
		return *m.UseEbalance
	}
	return false
}

func (m *PurchaseMethod) GetError() *PurchaseError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PurchaseMethod) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

func (m *PurchaseMethod) GetIsZeroCostLicense() bool {
	if m != nil && m.IsZeroCostLicense != nil {
		return *m.IsZeroCostLicense
	}
	return false
}

type PurchaseResponse struct {
	Error             *PurchaseError `protobuf:"bytes,1,req,name=error" json:"error,omitempty"`
	TransactionId     *int64         `protobuf:"varint,2,opt,name=transaction_id" json:"transaction_id,omitempty"`
	ProductId         *string        `protobuf:"bytes,3,opt,name=product_id" json:"product_id,omitempty"`
	ThirdPartyId      *string        `protobuf:"bytes,4,opt,name=third_party_id" json:"third_party_id,omitempty"`
	Currency          *int32         `protobuf:"varint,5,opt,name=currency" json:"currency,omitempty"`
	IsZeroCostLicense *bool          `protobuf:"varint,6,opt,name=is_zero_cost_license" json:"is_zero_cost_license,omitempty"`
	ChallengeId       *string        `protobuf:"bytes,7,opt,name=challenge_id" json:"challenge_id,omitempty"`
	ChallengeUrl      *string        `protobuf:"bytes,8,opt,name=challenge_url" json:"challenge_url,omitempty"`
	XXX_unrecognized  []byte         `json:"-"`
}

func (m *PurchaseResponse) Reset()         { *m = PurchaseResponse{} }
func (m *PurchaseResponse) String() string { return proto.CompactTextString(m) }
func (*PurchaseResponse) ProtoMessage()    {}

func (m *PurchaseResponse) GetError() *PurchaseError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PurchaseResponse) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

func (m *PurchaseResponse) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *PurchaseResponse) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *PurchaseResponse) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *PurchaseResponse) GetIsZeroCostLicense() bool {
	if m != nil && m.IsZeroCostLicense != nil {
		return *m.IsZeroCostLicense
	}
	return false
}

func (m *PurchaseResponse) GetChallengeId() string {
	if m != nil && m.ChallengeId != nil {
		return *m.ChallengeId
	}
	return ""
}

func (m *PurchaseResponse) GetChallengeUrl() string {
	if m != nil && m.ChallengeUrl != nil {
		return *m.ChallengeUrl
	}
	return ""
}

type BattlePayConfigResponse struct {
	Bundles              []*Bundle          `protobuf:"bytes,1,rep,name=bundles" json:"bundles,omitempty"`
	Currency             *int32             `protobuf:"varint,2,opt,name=currency" json:"currency,omitempty"`
	Unavailable          *bool              `protobuf:"varint,4,opt,name=unavailable" json:"unavailable,omitempty"`
	SecsBeforeAutoCancel *int32             `protobuf:"varint,5,opt,name=secs_before_auto_cancel" json:"secs_before_auto_cancel,omitempty"`
	GoldCostBoosters     []*GoldCostBooster `protobuf:"bytes,6,rep,name=gold_cost_boosters" json:"gold_cost_boosters,omitempty"`
	GoldCostArena        *int64             `protobuf:"varint,7,opt,name=gold_cost_arena" json:"gold_cost_arena,omitempty"`
	XXX_unrecognized     []byte             `json:"-"`
}

func (m *BattlePayConfigResponse) Reset()         { *m = BattlePayConfigResponse{} }
func (m *BattlePayConfigResponse) String() string { return proto.CompactTextString(m) }
func (*BattlePayConfigResponse) ProtoMessage()    {}

func (m *BattlePayConfigResponse) GetBundles() []*Bundle {
	if m != nil {
		return m.Bundles
	}
	return nil
}

func (m *BattlePayConfigResponse) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *BattlePayConfigResponse) GetUnavailable() bool {
	if m != nil && m.Unavailable != nil {
		return *m.Unavailable
	}
	return false
}

func (m *BattlePayConfigResponse) GetSecsBeforeAutoCancel() int32 {
	if m != nil && m.SecsBeforeAutoCancel != nil {
		return *m.SecsBeforeAutoCancel
	}
	return 0
}

func (m *BattlePayConfigResponse) GetGoldCostBoosters() []*GoldCostBooster {
	if m != nil {
		return m.GoldCostBoosters
	}
	return nil
}

func (m *BattlePayConfigResponse) GetGoldCostArena() int64 {
	if m != nil && m.GoldCostArena != nil {
		return *m.GoldCostArena
	}
	return 0
}

type BattlePayStatusResponse struct {
	Status             *BattlePayStatusResponse_PurchaseState `protobuf:"varint,1,req,name=status,enum=util.BattlePayStatusResponse_PurchaseState" json:"status,omitempty"`
	ProductId          *string                                `protobuf:"bytes,2,opt,name=product_id" json:"product_id,omitempty"`
	PurchaseError      *PurchaseError                         `protobuf:"bytes,3,opt,name=purchase_error" json:"purchase_error,omitempty"`
	BattlePayAvailable *bool                                  `protobuf:"varint,4,req,name=battle_pay_available" json:"battle_pay_available,omitempty"`
	TransactionId      *int64                                 `protobuf:"varint,5,opt,name=transaction_id" json:"transaction_id,omitempty"`
	ThirdPartyId       *string                                `protobuf:"bytes,6,opt,name=third_party_id" json:"third_party_id,omitempty"`
	Currency           *int32                                 `protobuf:"varint,7,opt,name=currency" json:"currency,omitempty"`
	Provider           *shared.BattlePayProvider              `protobuf:"varint,8,opt,name=provider,enum=shared.BattlePayProvider,def=1" json:"provider,omitempty"`
	XXX_unrecognized   []byte                                 `json:"-"`
}

func (m *BattlePayStatusResponse) Reset()         { *m = BattlePayStatusResponse{} }
func (m *BattlePayStatusResponse) String() string { return proto.CompactTextString(m) }
func (*BattlePayStatusResponse) ProtoMessage()    {}

const Default_BattlePayStatusResponse_Provider shared.BattlePayProvider = shared.BattlePayProvider_BP_PROVIDER_BLIZZARD

func (m *BattlePayStatusResponse) GetStatus() BattlePayStatusResponse_PurchaseState {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return BattlePayStatusResponse_PS_READY
}

func (m *BattlePayStatusResponse) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *BattlePayStatusResponse) GetPurchaseError() *PurchaseError {
	if m != nil {
		return m.PurchaseError
	}
	return nil
}

func (m *BattlePayStatusResponse) GetBattlePayAvailable() bool {
	if m != nil && m.BattlePayAvailable != nil {
		return *m.BattlePayAvailable
	}
	return false
}

func (m *BattlePayStatusResponse) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

func (m *BattlePayStatusResponse) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *BattlePayStatusResponse) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *BattlePayStatusResponse) GetProvider() shared.BattlePayProvider {
	if m != nil && m.Provider != nil {
		return *m.Provider
	}
	return Default_BattlePayStatusResponse_Provider
}

type MassDisenchantResponse struct {
	Amount           *int32 `protobuf:"varint,1,req,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MassDisenchantResponse) Reset()         { *m = MassDisenchantResponse{} }
func (m *MassDisenchantResponse) String() string { return proto.CompactTextString(m) }
func (*MassDisenchantResponse) ProtoMessage()    {}

func (m *MassDisenchantResponse) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type PlayerRecords struct {
	Records          []*PlayerRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *PlayerRecords) Reset()         { *m = PlayerRecords{} }
func (m *PlayerRecords) String() string { return proto.CompactTextString(m) }
func (*PlayerRecords) ProtoMessage()    {}

func (m *PlayerRecords) GetRecords() []*PlayerRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type RewardProgress struct {
	SeasonEnd        *shared.Date `protobuf:"bytes,1,req,name=season_end" json:"season_end,omitempty"`
	WinsPerGold      *int32       `protobuf:"varint,2,req,name=wins_per_gold" json:"wins_per_gold,omitempty"`
	GoldPerReward    *int32       `protobuf:"varint,3,req,name=gold_per_reward" json:"gold_per_reward,omitempty"`
	MaxGoldPerDay    *int32       `protobuf:"varint,4,req,name=max_gold_per_day" json:"max_gold_per_day,omitempty"`
	SeasonNumber     *int32       `protobuf:"varint,5,req,name=season_number" json:"season_number,omitempty"`
	PackId           *int32       `protobuf:"varint,8,opt,name=pack_id" json:"pack_id,omitempty"`
	XpSoloLimit      *int32       `protobuf:"varint,9,req,name=xp_solo_limit" json:"xp_solo_limit,omitempty"`
	MaxHeroLevel     *int32       `protobuf:"varint,10,req,name=max_hero_level" json:"max_hero_level,omitempty"`
	NextQuestCancel  *shared.Date `protobuf:"bytes,11,req,name=next_quest_cancel" json:"next_quest_cancel,omitempty"`
	EventTimingMod   *float32     `protobuf:"fixed32,12,req,name=event_timing_mod" json:"event_timing_mod,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RewardProgress) Reset()         { *m = RewardProgress{} }
func (m *RewardProgress) String() string { return proto.CompactTextString(m) }
func (*RewardProgress) ProtoMessage()    {}

func (m *RewardProgress) GetSeasonEnd() *shared.Date {
	if m != nil {
		return m.SeasonEnd
	}
	return nil
}

func (m *RewardProgress) GetWinsPerGold() int32 {
	if m != nil && m.WinsPerGold != nil {
		return *m.WinsPerGold
	}
	return 0
}

func (m *RewardProgress) GetGoldPerReward() int32 {
	if m != nil && m.GoldPerReward != nil {
		return *m.GoldPerReward
	}
	return 0
}

func (m *RewardProgress) GetMaxGoldPerDay() int32 {
	if m != nil && m.MaxGoldPerDay != nil {
		return *m.MaxGoldPerDay
	}
	return 0
}

func (m *RewardProgress) GetSeasonNumber() int32 {
	if m != nil && m.SeasonNumber != nil {
		return *m.SeasonNumber
	}
	return 0
}

func (m *RewardProgress) GetPackId() int32 {
	if m != nil && m.PackId != nil {
		return *m.PackId
	}
	return 0
}

func (m *RewardProgress) GetXpSoloLimit() int32 {
	if m != nil && m.XpSoloLimit != nil {
		return *m.XpSoloLimit
	}
	return 0
}

func (m *RewardProgress) GetMaxHeroLevel() int32 {
	if m != nil && m.MaxHeroLevel != nil {
		return *m.MaxHeroLevel
	}
	return 0
}

func (m *RewardProgress) GetNextQuestCancel() *shared.Date {
	if m != nil {
		return m.NextQuestCancel
	}
	return nil
}

func (m *RewardProgress) GetEventTimingMod() float32 {
	if m != nil && m.EventTimingMod != nil {
		return *m.EventTimingMod
	}
	return 0
}

type CancelPurchaseResponse struct {
	Result           *CancelPurchaseResponse_CancelResult `protobuf:"varint,1,req,name=result,enum=util.CancelPurchaseResponse_CancelResult" json:"result,omitempty"`
	TransactionId    *int64                               `protobuf:"varint,2,opt,name=transaction_id" json:"transaction_id,omitempty"`
	ProductId        *string                              `protobuf:"bytes,3,opt,name=product_id" json:"product_id,omitempty"`
	Currency         *int32                               `protobuf:"varint,4,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CancelPurchaseResponse) Reset()         { *m = CancelPurchaseResponse{} }
func (m *CancelPurchaseResponse) String() string { return proto.CompactTextString(m) }
func (*CancelPurchaseResponse) ProtoMessage()    {}

func (m *CancelPurchaseResponse) GetResult() CancelPurchaseResponse_CancelResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return CancelPurchaseResponse_CR_SUCCESS
}

func (m *CancelPurchaseResponse) GetTransactionId() int64 {
	if m != nil && m.TransactionId != nil {
		return *m.TransactionId
	}
	return 0
}

func (m *CancelPurchaseResponse) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *CancelPurchaseResponse) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

type PurchaseWithGoldResponse struct {
	Result           *PurchaseWithGoldResponse_PurchaseResult `protobuf:"varint,1,req,name=result,enum=util.PurchaseWithGoldResponse_PurchaseResult" json:"result,omitempty"`
	GoldUsed         *int64                                   `protobuf:"varint,2,opt,name=gold_used" json:"gold_used,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *PurchaseWithGoldResponse) Reset()         { *m = PurchaseWithGoldResponse{} }
func (m *PurchaseWithGoldResponse) String() string { return proto.CompactTextString(m) }
func (*PurchaseWithGoldResponse) ProtoMessage()    {}

func (m *PurchaseWithGoldResponse) GetResult() PurchaseWithGoldResponse_PurchaseResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return PurchaseWithGoldResponse_PR_SUCCESS
}

func (m *PurchaseWithGoldResponse) GetGoldUsed() int64 {
	if m != nil && m.GoldUsed != nil {
		return *m.GoldUsed
	}
	return 0
}

type CancelQuestResponse struct {
	QuestId          *int32       `protobuf:"varint,1,req,name=quest_id" json:"quest_id,omitempty"`
	Success          *bool        `protobuf:"varint,2,req,name=success" json:"success,omitempty"`
	NextQuestCancel  *shared.Date `protobuf:"bytes,3,opt,name=next_quest_cancel" json:"next_quest_cancel,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CancelQuestResponse) Reset()         { *m = CancelQuestResponse{} }
func (m *CancelQuestResponse) String() string { return proto.CompactTextString(m) }
func (*CancelQuestResponse) ProtoMessage()    {}

func (m *CancelQuestResponse) GetQuestId() int32 {
	if m != nil && m.QuestId != nil {
		return *m.QuestId
	}
	return 0
}

func (m *CancelQuestResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CancelQuestResponse) GetNextQuestCancel() *shared.Date {
	if m != nil {
		return m.NextQuestCancel
	}
	return nil
}

type HeroXP struct {
	XpInfos          []*HeroXPInfo `protobuf:"bytes,1,rep,name=xp_infos" json:"xp_infos,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HeroXP) Reset()         { *m = HeroXP{} }
func (m *HeroXP) String() string { return proto.CompactTextString(m) }
func (*HeroXP) ProtoMessage()    {}

func (m *HeroXP) GetXpInfos() []*HeroXPInfo {
	if m != nil {
		return m.XpInfos
	}
	return nil
}

type SetCardBackResponse struct {
	Success          *bool  `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	CardBack         *int32 `protobuf:"varint,2,req,name=card_back" json:"card_back,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetCardBackResponse) Reset()         { *m = SetCardBackResponse{} }
func (m *SetCardBackResponse) String() string { return proto.CompactTextString(m) }
func (*SetCardBackResponse) ProtoMessage()    {}

func (m *SetCardBackResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *SetCardBackResponse) GetCardBack() int32 {
	if m != nil && m.CardBack != nil {
		return *m.CardBack
	}
	return 0
}

type ThirdPartyPurchaseStatusResponse struct {
	ThirdPartyId     *string                                  `protobuf:"bytes,1,req,name=third_party_id" json:"third_party_id,omitempty"`
	Status           *ThirdPartyPurchaseStatusResponse_Status `protobuf:"varint,2,req,name=status,enum=util.ThirdPartyPurchaseStatusResponse_Status" json:"status,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *ThirdPartyPurchaseStatusResponse) Reset()         { *m = ThirdPartyPurchaseStatusResponse{} }
func (m *ThirdPartyPurchaseStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyPurchaseStatusResponse) ProtoMessage()    {}

func (m *ThirdPartyPurchaseStatusResponse) GetThirdPartyId() string {
	if m != nil && m.ThirdPartyId != nil {
		return *m.ThirdPartyId
	}
	return ""
}

func (m *ThirdPartyPurchaseStatusResponse) GetStatus() ThirdPartyPurchaseStatusResponse_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ThirdPartyPurchaseStatusResponse_NOT_FOUND
}

type SetProgressResponse struct {
	Result           *SetProgressResponse_Result `protobuf:"varint,1,req,name=result,enum=util.SetProgressResponse_Result" json:"result,omitempty"`
	Progress         *int64                      `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *SetProgressResponse) Reset()         { *m = SetProgressResponse{} }
func (m *SetProgressResponse) String() string { return proto.CompactTextString(m) }
func (*SetProgressResponse) ProtoMessage()    {}

func (m *SetProgressResponse) GetResult() SetProgressResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return SetProgressResponse_SUCCESS
}

func (m *SetProgressResponse) GetProgress() int64 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

type TriggerEventResponse struct {
	EventId          *int32 `protobuf:"varint,1,req,name=event_id" json:"event_id,omitempty"`
	Success          *bool  `protobuf:"varint,2,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TriggerEventResponse) Reset()         { *m = TriggerEventResponse{} }
func (m *TriggerEventResponse) String() string { return proto.CompactTextString(m) }
func (*TriggerEventResponse) ProtoMessage()    {}

func (m *TriggerEventResponse) GetEventId() int32 {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return 0
}

func (m *TriggerEventResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type AssetsVersionResponse struct {
	Version          *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AssetsVersionResponse) Reset()         { *m = AssetsVersionResponse{} }
func (m *AssetsVersionResponse) String() string { return proto.CompactTextString(m) }
func (*AssetsVersionResponse) ProtoMessage()    {}

func (m *AssetsVersionResponse) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type AdventureProgressResponse struct {
	List             []*shared.AdventureProgress `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *AdventureProgressResponse) Reset()         { *m = AdventureProgressResponse{} }
func (m *AdventureProgressResponse) String() string { return proto.CompactTextString(m) }
func (*AdventureProgressResponse) ProtoMessage()    {}

func (m *AdventureProgressResponse) GetList() []*shared.AdventureProgress {
	if m != nil {
		return m.List
	}
	return nil
}

type AccountLicenseAchieveResponse struct {
	Achieve          *int32                                `protobuf:"varint,1,req,name=achieve" json:"achieve,omitempty"`
	Result           *AccountLicenseAchieveResponse_Result `protobuf:"varint,2,req,name=result,enum=util.AccountLicenseAchieveResponse_Result" json:"result,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *AccountLicenseAchieveResponse) Reset()         { *m = AccountLicenseAchieveResponse{} }
func (m *AccountLicenseAchieveResponse) String() string { return proto.CompactTextString(m) }
func (*AccountLicenseAchieveResponse) ProtoMessage()    {}

func (m *AccountLicenseAchieveResponse) GetAchieve() int32 {
	if m != nil && m.Achieve != nil {
		return *m.Achieve
	}
	return 0
}

func (m *AccountLicenseAchieveResponse) GetResult() AccountLicenseAchieveResponse_Result {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return AccountLicenseAchieveResponse_INVALID_ACHIEVE
}

type SubscribeResponse struct {
	Route                   *uint64                           `protobuf:"varint,1,opt,name=route" json:"route,omitempty"`
	KeepAliveSecs           *uint64                           `protobuf:"varint,3,opt,name=keep_alive_secs" json:"keep_alive_secs,omitempty"`
	MaxResubscribeAttempts  *uint64                           `protobuf:"varint,4,opt,name=max_resubscribe_attempts,def=0" json:"max_resubscribe_attempts,omitempty"`
	PendingResponseTimeout  *uint64                           `protobuf:"varint,5,opt,name=pending_response_timeout,def=0" json:"pending_response_timeout,omitempty"`
	PendingSubscribeTimeout *uint64                           `protobuf:"varint,6,opt,name=pending_subscribe_timeout,def=0" json:"pending_subscribe_timeout,omitempty"`
	Result                  *SubscribeResponse_ResponseResult `protobuf:"varint,7,opt,name=result,enum=util.SubscribeResponse_ResponseResult,def=1" json:"result,omitempty"`
	RequestMaxWaitSecs      *uint64                           `protobuf:"varint,8,opt,name=request_max_wait_secs" json:"request_max_wait_secs,omitempty"`
	XXX_unrecognized        []byte                            `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}

const Default_SubscribeResponse_MaxResubscribeAttempts uint64 = 0
const Default_SubscribeResponse_PendingResponseTimeout uint64 = 0
const Default_SubscribeResponse_PendingSubscribeTimeout uint64 = 0
const Default_SubscribeResponse_Result SubscribeResponse_ResponseResult = SubscribeResponse_SUCCESS

func (m *SubscribeResponse) GetRoute() uint64 {
	if m != nil && m.Route != nil {
		return *m.Route
	}
	return 0
}

func (m *SubscribeResponse) GetKeepAliveSecs() uint64 {
	if m != nil && m.KeepAliveSecs != nil {
		return *m.KeepAliveSecs
	}
	return 0
}

func (m *SubscribeResponse) GetMaxResubscribeAttempts() uint64 {
	if m != nil && m.MaxResubscribeAttempts != nil {
		return *m.MaxResubscribeAttempts
	}
	return Default_SubscribeResponse_MaxResubscribeAttempts
}

func (m *SubscribeResponse) GetPendingResponseTimeout() uint64 {
	if m != nil && m.PendingResponseTimeout != nil {
		return *m.PendingResponseTimeout
	}
	return Default_SubscribeResponse_PendingResponseTimeout
}

func (m *SubscribeResponse) GetPendingSubscribeTimeout() uint64 {
	if m != nil && m.PendingSubscribeTimeout != nil {
		return *m.PendingSubscribeTimeout
	}
	return Default_SubscribeResponse_PendingSubscribeTimeout
}

func (m *SubscribeResponse) GetResult() SubscribeResponse_ResponseResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_SubscribeResponse_Result
}

func (m *SubscribeResponse) GetRequestMaxWaitSecs() uint64 {
	if m != nil && m.RequestMaxWaitSecs != nil {
		return *m.RequestMaxWaitSecs
	}
	return 0
}

type TavernBrawlInfo struct {
	CurrentTavernBrawl      *shared.TavernBrawlSpec `protobuf:"bytes,1,opt,name=current_tavern_brawl" json:"current_tavern_brawl,omitempty"`
	NextStartSecondsFromNow *uint64                 `protobuf:"varint,2,opt,name=next_start_seconds_from_now" json:"next_start_seconds_from_now,omitempty"`
	XXX_unrecognized        []byte                  `json:"-"`
}

func (m *TavernBrawlInfo) Reset()         { *m = TavernBrawlInfo{} }
func (m *TavernBrawlInfo) String() string { return proto.CompactTextString(m) }
func (*TavernBrawlInfo) ProtoMessage()    {}

func (m *TavernBrawlInfo) GetCurrentTavernBrawl() *shared.TavernBrawlSpec {
	if m != nil {
		return m.CurrentTavernBrawl
	}
	return nil
}

func (m *TavernBrawlInfo) GetNextStartSecondsFromNow() uint64 {
	if m != nil && m.NextStartSecondsFromNow != nil {
		return *m.NextStartSecondsFromNow
	}
	return 0
}

type TavernBrawlPlayerRecordResponse struct {
	Record           *shared.TavernBrawlPlayerRecord `protobuf:"bytes,6,opt,name=record" json:"record,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *TavernBrawlPlayerRecordResponse) Reset()         { *m = TavernBrawlPlayerRecordResponse{} }
func (m *TavernBrawlPlayerRecordResponse) String() string { return proto.CompactTextString(m) }
func (*TavernBrawlPlayerRecordResponse) ProtoMessage()    {}

func (m *TavernBrawlPlayerRecordResponse) GetRecord() *shared.TavernBrawlPlayerRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type FavoriteHeroesResponse struct {
	FavoriteHeroes   []*shared.FavoriteHero `protobuf:"bytes,1,rep,name=favorite_heroes" json:"favorite_heroes,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *FavoriteHeroesResponse) Reset()         { *m = FavoriteHeroesResponse{} }
func (m *FavoriteHeroesResponse) String() string { return proto.CompactTextString(m) }
func (*FavoriteHeroesResponse) ProtoMessage()    {}

func (m *FavoriteHeroesResponse) GetFavoriteHeroes() []*shared.FavoriteHero {
	if m != nil {
		return m.FavoriteHeroes
	}
	return nil
}

type SetFavoriteHeroResponse struct {
	Success          *bool                `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	FavoriteHero     *shared.FavoriteHero `protobuf:"bytes,2,opt,name=favorite_hero" json:"favorite_hero,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SetFavoriteHeroResponse) Reset()         { *m = SetFavoriteHeroResponse{} }
func (m *SetFavoriteHeroResponse) String() string { return proto.CompactTextString(m) }
func (*SetFavoriteHeroResponse) ProtoMessage()    {}

func (m *SetFavoriteHeroResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *SetFavoriteHeroResponse) GetFavoriteHero() *shared.FavoriteHero {
	if m != nil {
		return m.FavoriteHero
	}
	return nil
}

type GetAssetResponse struct {
	Responses        []*AssetResponse `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GetAssetResponse) Reset()         { *m = GetAssetResponse{} }
func (m *GetAssetResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssetResponse) ProtoMessage()    {}

func (m *GetAssetResponse) GetResponses() []*AssetResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

type DebugCommandResponse struct {
	Success          *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Response         *string `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DebugCommandResponse) Reset()         { *m = DebugCommandResponse{} }
func (m *DebugCommandResponse) String() string { return proto.CompactTextString(m) }
func (*DebugCommandResponse) ProtoMessage()    {}

func (m *DebugCommandResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *DebugCommandResponse) GetResponse() string {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return ""
}

type AccountLicensesInfoResponse struct {
	List             []*shared.AccountLicenseInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *AccountLicensesInfoResponse) Reset()         { *m = AccountLicensesInfoResponse{} }
func (m *AccountLicensesInfoResponse) String() string { return proto.CompactTextString(m) }
func (*AccountLicensesInfoResponse) ProtoMessage()    {}

func (m *AccountLicensesInfoResponse) GetList() []*shared.AccountLicenseInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type GenericData struct {
	TypeId           *uint32 `protobuf:"varint,1,req,name=type_id" json:"type_id,omitempty"`
	Data             []byte  `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GenericData) Reset()         { *m = GenericData{} }
func (m *GenericData) String() string { return proto.CompactTextString(m) }
func (*GenericData) ProtoMessage()    {}

func (m *GenericData) GetTypeId() uint32 {
	if m != nil && m.TypeId != nil {
		return *m.TypeId
	}
	return 0
}

func (m *GenericData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GenericResponse struct {
	ResultCode       *GenericResponse_Result `protobuf:"varint,1,req,name=result_code,enum=util.GenericResponse_Result" json:"result_code,omitempty"`
	RequestId        *int32                  `protobuf:"varint,2,req,name=request_id" json:"request_id,omitempty"`
	RequestSubId     *int32                  `protobuf:"varint,3,opt,name=request_sub_id" json:"request_sub_id,omitempty"`
	GenericData      *GenericData            `protobuf:"bytes,4,opt,name=generic_data" json:"generic_data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GenericResponse) Reset()         { *m = GenericResponse{} }
func (m *GenericResponse) String() string { return proto.CompactTextString(m) }
func (*GenericResponse) ProtoMessage()    {}

func (m *GenericResponse) GetResultCode() GenericResponse_Result {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return GenericResponse_RESULT_OK
}

func (m *GenericResponse) GetRequestId() int32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *GenericResponse) GetRequestSubId() int32 {
	if m != nil && m.RequestSubId != nil {
		return *m.RequestSubId
	}
	return 0
}

func (m *GenericResponse) GetGenericData() *GenericData {
	if m != nil {
		return m.GenericData
	}
	return nil
}

type GenericRequest struct {
	RequestId        *int32       `protobuf:"varint,1,req,name=request_id" json:"request_id,omitempty"`
	GenericData      *GenericData `protobuf:"bytes,2,opt,name=generic_data" json:"generic_data,omitempty"`
	RequestSubId     *int32       `protobuf:"varint,3,opt,name=request_sub_id" json:"request_sub_id,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GenericRequest) Reset()         { *m = GenericRequest{} }
func (m *GenericRequest) String() string { return proto.CompactTextString(m) }
func (*GenericRequest) ProtoMessage()    {}

func (m *GenericRequest) GetRequestId() int32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *GenericRequest) GetGenericData() *GenericData {
	if m != nil {
		return m.GenericData
	}
	return nil
}

func (m *GenericRequest) GetRequestSubId() int32 {
	if m != nil && m.RequestSubId != nil {
		return *m.RequestSubId
	}
	return 0
}

type GenericRequestList struct {
	Requests         []*GenericRequest `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GenericRequestList) Reset()         { *m = GenericRequestList{} }
func (m *GenericRequestList) String() string { return proto.CompactTextString(m) }
func (*GenericRequestList) ProtoMessage()    {}

func (m *GenericRequestList) GetRequests() []*GenericRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

type ClientRequestResponse struct {
	ResponseFlags    *ClientRequestResponse_ClientRequestResponseFlags `protobuf:"varint,1,opt,name=response_flags,enum=util.ClientRequestResponse_ClientRequestResponseFlags,def=0" json:"response_flags,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *ClientRequestResponse) Reset()         { *m = ClientRequestResponse{} }
func (m *ClientRequestResponse) String() string { return proto.CompactTextString(m) }
func (*ClientRequestResponse) ProtoMessage()    {}

const Default_ClientRequestResponse_ResponseFlags ClientRequestResponse_ClientRequestResponseFlags = ClientRequestResponse_CRRF_SERVICE_NONE

func (m *ClientRequestResponse) GetResponseFlags() ClientRequestResponse_ClientRequestResponseFlags {
	if m != nil && m.ResponseFlags != nil {
		return *m.ResponseFlags
	}
	return Default_ClientRequestResponse_ResponseFlags
}

type CheckAccountLicensesResponse struct {
	Success          *bool  `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckAccountLicensesResponse) Reset()         { *m = CheckAccountLicensesResponse{} }
func (m *CheckAccountLicensesResponse) String() string { return proto.CompactTextString(m) }
func (*CheckAccountLicensesResponse) ProtoMessage()    {}

func (m *CheckAccountLicensesResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CheckGameLicensesResponse struct {
	Success          *bool  `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckGameLicensesResponse) Reset()         { *m = CheckGameLicensesResponse{} }
func (m *CheckGameLicensesResponse) String() string { return proto.CompactTextString(m) }
func (*CheckGameLicensesResponse) ProtoMessage()    {}

func (m *CheckGameLicensesResponse) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func init() {
	proto.RegisterEnum("util.ProductType", ProductType_name, ProductType_value)
	proto.RegisterEnum("util.PurchaseError_Error", PurchaseError_Error_name, PurchaseError_Error_value)
	proto.RegisterEnum("util.DeckSetData_PacketID", DeckSetData_PacketID_name, DeckSetData_PacketID_value)
	proto.RegisterEnum("util.ValidateAchieve_PacketID", ValidateAchieve_PacketID_name, ValidateAchieve_PacketID_value)
	proto.RegisterEnum("util.UpdateLogin_PacketID", UpdateLogin_PacketID_name, UpdateLogin_PacketID_value)
	proto.RegisterEnum("util.DevBnetIdentify_PacketID", DevBnetIdentify_PacketID_name, DevBnetIdentify_PacketID_value)
	proto.RegisterEnum("util.SetOptions_PacketID", SetOptions_PacketID_name, SetOptions_PacketID_value)
	proto.RegisterEnum("util.GetOptions_PacketID", GetOptions_PacketID_name, GetOptions_PacketID_value)
	proto.RegisterEnum("util.GetAccountInfo_Request", GetAccountInfo_Request_name, GetAccountInfo_Request_value)
	proto.RegisterEnum("util.GetAccountInfo_PacketID", GetAccountInfo_PacketID_name, GetAccountInfo_PacketID_value)
	proto.RegisterEnum("util.GetDeck_PacketID", GetDeck_PacketID_name, GetDeck_PacketID_value)
	proto.RegisterEnum("util.CreateDeck_PacketID", CreateDeck_PacketID_name, CreateDeck_PacketID_value)
	proto.RegisterEnum("util.DeleteDeck_PacketID", DeleteDeck_PacketID_name, DeleteDeck_PacketID_value)
	proto.RegisterEnum("util.RenameDeck_PacketID", RenameDeck_PacketID_name, RenameDeck_PacketID_value)
	proto.RegisterEnum("util.AckNotice_PacketID", AckNotice_PacketID_name, AckNotice_PacketID_value)
	proto.RegisterEnum("util.OpenBooster_PacketID", OpenBooster_PacketID_name, OpenBooster_PacketID_value)
	proto.RegisterEnum("util.Subscribe_PacketID", Subscribe_PacketID_name, Subscribe_PacketID_value)
	proto.RegisterEnum("util.Unsubscribe_PacketID", Unsubscribe_PacketID_name, Unsubscribe_PacketID_value)
	proto.RegisterEnum("util.OneClientTracking_Level", OneClientTracking_Level_name, OneClientTracking_Level_value)
	proto.RegisterEnum("util.ClientTracking_PacketID", ClientTracking_PacketID_name, ClientTracking_PacketID_value)
	proto.RegisterEnum("util.SetProgress_PacketID", SetProgress_PacketID_name, SetProgress_PacketID_value)
	proto.RegisterEnum("util.AckCardSeen_PacketID", AckCardSeen_PacketID_name, AckCardSeen_PacketID_value)
	proto.RegisterEnum("util.CardBacks_PacketID", CardBacks_PacketID_name, CardBacks_PacketID_value)
	proto.RegisterEnum("util.DraftBegin_PacketID", DraftBegin_PacketID_name, DraftBegin_PacketID_value)
	proto.RegisterEnum("util.DraftRetire_PacketID", DraftRetire_PacketID_name, DraftRetire_PacketID_value)
	proto.RegisterEnum("util.DraftAckRewards_PacketID", DraftAckRewards_PacketID_name, DraftAckRewards_PacketID_value)
	proto.RegisterEnum("util.DraftGetPicksAndContents_PacketID", DraftGetPicksAndContents_PacketID_name, DraftGetPicksAndContents_PacketID_value)
	proto.RegisterEnum("util.DraftMakePick_PacketID", DraftMakePick_PacketID_name, DraftMakePick_PacketID_value)
	proto.RegisterEnum("util.GetAchieves_PacketID", GetAchieves_PacketID_name, GetAchieves_PacketID_value)
	proto.RegisterEnum("util.AckAchieveProgress_PacketID", AckAchieveProgress_PacketID_name, AckAchieveProgress_PacketID_value)
	proto.RegisterEnum("util.BuySellCard_PacketID", BuySellCard_PacketID_name, BuySellCard_PacketID_value)
	proto.RegisterEnum("util.GetPurchaseMethod_PacketID", GetPurchaseMethod_PacketID_name, GetPurchaseMethod_PacketID_value)
	proto.RegisterEnum("util.DoPurchase_PacketID", DoPurchase_PacketID_name, DoPurchase_PacketID_value)
	proto.RegisterEnum("util.CancelPurchase_ThirdPartyCancelReason", CancelPurchase_ThirdPartyCancelReason_name, CancelPurchase_ThirdPartyCancelReason_value)
	proto.RegisterEnum("util.CancelPurchase_PacketID", CancelPurchase_PacketID_name, CancelPurchase_PacketID_value)
	proto.RegisterEnum("util.CheckAccountLicenses_PacketID", CheckAccountLicenses_PacketID_name, CheckAccountLicenses_PacketID_value)
	proto.RegisterEnum("util.CheckGameLicenses_PacketID", CheckGameLicenses_PacketID_name, CheckGameLicenses_PacketID_value)
	proto.RegisterEnum("util.GetBattlePayConfig_PacketID", GetBattlePayConfig_PacketID_name, GetBattlePayConfig_PacketID_value)
	proto.RegisterEnum("util.GetBattlePayStatus_PacketID", GetBattlePayStatus_PacketID_name, GetBattlePayStatus_PacketID_value)
	proto.RegisterEnum("util.CancelQuest_PacketID", CancelQuest_PacketID_name, CancelQuest_PacketID_value)
	proto.RegisterEnum("util.MassDisenchantRequest_PacketID", MassDisenchantRequest_PacketID_name, MassDisenchantRequest_PacketID_value)
	proto.RegisterEnum("util.PurchaseWithGold_PacketID", PurchaseWithGold_PacketID_name, PurchaseWithGold_PacketID_value)
	proto.RegisterEnum("util.SetCardBack_PacketID", SetCardBack_PacketID_name, SetCardBack_PacketID_value)
	proto.RegisterEnum("util.SubmitThirdPartyReceipt_PacketID", SubmitThirdPartyReceipt_PacketID_name, SubmitThirdPartyReceipt_PacketID_value)
	proto.RegisterEnum("util.GetThirdPartyPurchaseStatus_PacketID", GetThirdPartyPurchaseStatus_PacketID_name, GetThirdPartyPurchaseStatus_PacketID_value)
	proto.RegisterEnum("util.CheckAccountLicenseAchieve_PacketID", CheckAccountLicenseAchieve_PacketID_name, CheckAccountLicenseAchieve_PacketID_value)
	proto.RegisterEnum("util.TriggerLaunchDayEvent_PacketID", TriggerLaunchDayEvent_PacketID_name, TriggerLaunchDayEvent_PacketID_value)
	proto.RegisterEnum("util.GetAssetsVersion_PacketID", GetAssetsVersion_PacketID_name, GetAssetsVersion_PacketID_value)
	proto.RegisterEnum("util.GetAdventureProgress_PacketID", GetAdventureProgress_PacketID_name, GetAdventureProgress_PacketID_value)
	proto.RegisterEnum("util.SetAdventureOptions_PacketID", SetAdventureOptions_PacketID_name, SetAdventureOptions_PacketID_value)
	proto.RegisterEnum("util.StartThirdPartyPurchase_PacketID", StartThirdPartyPurchase_PacketID_name, StartThirdPartyPurchase_PacketID_value)
	proto.RegisterEnum("util.SetFavoriteHero_PacketID", SetFavoriteHero_PacketID_name, SetFavoriteHero_PacketID_value)
	proto.RegisterEnum("util.GetAssetRequest_PacketID", GetAssetRequest_PacketID_name, GetAssetRequest_PacketID_value)
	proto.RegisterEnum("util.DebugCommandRequest_PacketID", DebugCommandRequest_PacketID_name, DebugCommandRequest_PacketID_value)
	proto.RegisterEnum("util.NotSoMassiveLoginReply_PacketID", NotSoMassiveLoginReply_PacketID_name, NotSoMassiveLoginReply_PacketID_value)
	proto.RegisterEnum("util.UpdateLoginComplete_PacketID", UpdateLoginComplete_PacketID_name, UpdateLoginComplete_PacketID_value)
	proto.RegisterEnum("util.AckWingProgress_PacketID", AckWingProgress_PacketID_name, AckWingProgress_PacketID_value)
	proto.RegisterEnum("util.AcknowledgeBanner_PacketID", AcknowledgeBanner_PacketID_name, AcknowledgeBanner_PacketID_value)
	proto.RegisterEnum("util.Disconnected_PacketID", Disconnected_PacketID_name, Disconnected_PacketID_value)
	proto.RegisterEnum("util.ValidateAchieveResponse_PacketID", ValidateAchieveResponse_PacketID_name, ValidateAchieveResponse_PacketID_value)
	proto.RegisterEnum("util.PlayQueue_PacketID", PlayQueue_PacketID_name, PlayQueue_PacketID_value)
	proto.RegisterEnum("util.GuardianVars_PacketID", GuardianVars_PacketID_name, GuardianVars_PacketID_value)
	proto.RegisterEnum("util.ArcaneDustBalance_PacketID", ArcaneDustBalance_PacketID_name, ArcaneDustBalance_PacketID_value)
	proto.RegisterEnum("util.GoldBalance_PacketID", GoldBalance_PacketID_name, GoldBalance_PacketID_value)
	proto.RegisterEnum("util.CardValues_PacketID", CardValues_PacketID_name, CardValues_PacketID_value)
	proto.RegisterEnum("util.BoughtSoldCard_Result", BoughtSoldCard_Result_name, BoughtSoldCard_Result_value)
	proto.RegisterEnum("util.BoughtSoldCard_PacketID", BoughtSoldCard_PacketID_name, BoughtSoldCard_PacketID_value)
	proto.RegisterEnum("util.NOP_PacketID", NOP_PacketID_name, NOP_PacketID_value)
	proto.RegisterEnum("util.Achieves_PacketID", Achieves_PacketID_name, Achieves_PacketID_value)
	proto.RegisterEnum("util.DraftError_ErrorCode", DraftError_ErrorCode_name, DraftError_ErrorCode_value)
	proto.RegisterEnum("util.DraftError_PacketID", DraftError_PacketID_name, DraftError_PacketID_value)
	proto.RegisterEnum("util.DraftBeginning_PacketID", DraftBeginning_PacketID_name, DraftBeginning_PacketID_value)
	proto.RegisterEnum("util.DraftRetired_PacketID", DraftRetired_PacketID_name, DraftRetired_PacketID_value)
	proto.RegisterEnum("util.DraftRewardsAcked_PacketID", DraftRewardsAcked_PacketID_name, DraftRewardsAcked_PacketID_value)
	proto.RegisterEnum("util.DraftChoicesAndContents_PacketID", DraftChoicesAndContents_PacketID_name, DraftChoicesAndContents_PacketID_value)
	proto.RegisterEnum("util.DraftChosen_PacketID", DraftChosen_PacketID_name, DraftChosen_PacketID_value)
	proto.RegisterEnum("util.ClientOptions_PacketID", ClientOptions_PacketID_name, ClientOptions_PacketID_value)
	proto.RegisterEnum("util.ProfileDeckLimit_PacketID", ProfileDeckLimit_PacketID_name, ProfileDeckLimit_PacketID_value)
	proto.RegisterEnum("util.ProfileProgress_PacketID", ProfileProgress_PacketID_name, ProfileProgress_PacketID_value)
	proto.RegisterEnum("util.ProfileNotices_PacketID", ProfileNotices_PacketID_name, ProfileNotices_PacketID_value)
	proto.RegisterEnum("util.DeckList_PacketID", DeckList_PacketID_name, DeckList_PacketID_value)
	proto.RegisterEnum("util.Collection_PacketID", Collection_PacketID_name, Collection_PacketID_value)
	proto.RegisterEnum("util.DeckContents_PacketID", DeckContents_PacketID_name, DeckContents_PacketID_value)
	proto.RegisterEnum("util.DBAction_PacketID", DBAction_PacketID_name, DBAction_PacketID_value)
	proto.RegisterEnum("util.DeckCreated_PacketID", DeckCreated_PacketID_name, DeckCreated_PacketID_value)
	proto.RegisterEnum("util.DeckDeleted_PacketID", DeckDeleted_PacketID_name, DeckDeleted_PacketID_value)
	proto.RegisterEnum("util.DeckRenamed_PacketID", DeckRenamed_PacketID_name, DeckRenamed_PacketID_value)
	proto.RegisterEnum("util.BoosterList_PacketID", BoosterList_PacketID_name, BoosterList_PacketID_value)
	proto.RegisterEnum("util.BoosterTallyList_PacketID", BoosterTallyList_PacketID_name, BoosterTallyList_PacketID_value)
	proto.RegisterEnum("util.BoosterContent_PacketID", BoosterContent_PacketID_name, BoosterContent_PacketID_value)
	proto.RegisterEnum("util.MedalInfo_PacketID", MedalInfo_PacketID_name, MedalInfo_PacketID_value)
	proto.RegisterEnum("util.MedalHistory_PacketID", MedalHistory_PacketID_name, MedalHistory_PacketID_value)
	proto.RegisterEnum("util.GamesInfo_PacketID", GamesInfo_PacketID_name, GamesInfo_PacketID_value)
	proto.RegisterEnum("util.PurchaseMethod_PacketID", PurchaseMethod_PacketID_name, PurchaseMethod_PacketID_value)
	proto.RegisterEnum("util.PurchaseResponse_PacketID", PurchaseResponse_PacketID_name, PurchaseResponse_PacketID_value)
	proto.RegisterEnum("util.BattlePayConfigResponse_PacketID", BattlePayConfigResponse_PacketID_name, BattlePayConfigResponse_PacketID_value)
	proto.RegisterEnum("util.BattlePayStatusResponse_PurchaseState", BattlePayStatusResponse_PurchaseState_name, BattlePayStatusResponse_PurchaseState_value)
	proto.RegisterEnum("util.BattlePayStatusResponse_PacketID", BattlePayStatusResponse_PacketID_name, BattlePayStatusResponse_PacketID_value)
	proto.RegisterEnum("util.MassDisenchantResponse_PacketID", MassDisenchantResponse_PacketID_name, MassDisenchantResponse_PacketID_value)
	proto.RegisterEnum("util.PlayerRecords_PacketID", PlayerRecords_PacketID_name, PlayerRecords_PacketID_value)
	proto.RegisterEnum("util.RewardProgress_PacketID", RewardProgress_PacketID_name, RewardProgress_PacketID_value)
	proto.RegisterEnum("util.CancelPurchaseResponse_CancelResult", CancelPurchaseResponse_CancelResult_name, CancelPurchaseResponse_CancelResult_value)
	proto.RegisterEnum("util.CancelPurchaseResponse_PacketID", CancelPurchaseResponse_PacketID_name, CancelPurchaseResponse_PacketID_value)
	proto.RegisterEnum("util.PurchaseWithGoldResponse_PurchaseResult", PurchaseWithGoldResponse_PurchaseResult_name, PurchaseWithGoldResponse_PurchaseResult_value)
	proto.RegisterEnum("util.PurchaseWithGoldResponse_PacketID", PurchaseWithGoldResponse_PacketID_name, PurchaseWithGoldResponse_PacketID_value)
	proto.RegisterEnum("util.CancelQuestResponse_PacketID", CancelQuestResponse_PacketID_name, CancelQuestResponse_PacketID_value)
	proto.RegisterEnum("util.HeroXP_PacketID", HeroXP_PacketID_name, HeroXP_PacketID_value)
	proto.RegisterEnum("util.SetCardBackResponse_PacketID", SetCardBackResponse_PacketID_name, SetCardBackResponse_PacketID_value)
	proto.RegisterEnum("util.ThirdPartyPurchaseStatusResponse_Status", ThirdPartyPurchaseStatusResponse_Status_name, ThirdPartyPurchaseStatusResponse_Status_value)
	proto.RegisterEnum("util.ThirdPartyPurchaseStatusResponse_PacketID", ThirdPartyPurchaseStatusResponse_PacketID_name, ThirdPartyPurchaseStatusResponse_PacketID_value)
	proto.RegisterEnum("util.SetProgressResponse_Result", SetProgressResponse_Result_name, SetProgressResponse_Result_value)
	proto.RegisterEnum("util.SetProgressResponse_PacketID", SetProgressResponse_PacketID_name, SetProgressResponse_PacketID_value)
	proto.RegisterEnum("util.TriggerEventResponse_PacketID", TriggerEventResponse_PacketID_name, TriggerEventResponse_PacketID_value)
	proto.RegisterEnum("util.AssetsVersionResponse_PacketID", AssetsVersionResponse_PacketID_name, AssetsVersionResponse_PacketID_value)
	proto.RegisterEnum("util.AdventureProgressResponse_PacketID", AdventureProgressResponse_PacketID_name, AdventureProgressResponse_PacketID_value)
	proto.RegisterEnum("util.AccountLicenseAchieveResponse_Result", AccountLicenseAchieveResponse_Result_name, AccountLicenseAchieveResponse_Result_value)
	proto.RegisterEnum("util.AccountLicenseAchieveResponse_PacketID", AccountLicenseAchieveResponse_PacketID_name, AccountLicenseAchieveResponse_PacketID_value)
	proto.RegisterEnum("util.SubscribeResponse_ResponseResult", SubscribeResponse_ResponseResult_name, SubscribeResponse_ResponseResult_value)
	proto.RegisterEnum("util.SubscribeResponse_PacketID", SubscribeResponse_PacketID_name, SubscribeResponse_PacketID_value)
	proto.RegisterEnum("util.TavernBrawlInfo_PacketID", TavernBrawlInfo_PacketID_name, TavernBrawlInfo_PacketID_value)
	proto.RegisterEnum("util.TavernBrawlPlayerRecordResponse_PacketID", TavernBrawlPlayerRecordResponse_PacketID_name, TavernBrawlPlayerRecordResponse_PacketID_value)
	proto.RegisterEnum("util.FavoriteHeroesResponse_PacketID", FavoriteHeroesResponse_PacketID_name, FavoriteHeroesResponse_PacketID_value)
	proto.RegisterEnum("util.SetFavoriteHeroResponse_PacketID", SetFavoriteHeroResponse_PacketID_name, SetFavoriteHeroResponse_PacketID_value)
	proto.RegisterEnum("util.GetAssetResponse_PacketID", GetAssetResponse_PacketID_name, GetAssetResponse_PacketID_value)
	proto.RegisterEnum("util.DebugCommandResponse_PacketID", DebugCommandResponse_PacketID_name, DebugCommandResponse_PacketID_value)
	proto.RegisterEnum("util.AccountLicensesInfoResponse_PacketID", AccountLicensesInfoResponse_PacketID_name, AccountLicensesInfoResponse_PacketID_value)
	proto.RegisterEnum("util.GenericResponse_Result", GenericResponse_Result_name, GenericResponse_Result_value)
	proto.RegisterEnum("util.GenericResponse_PacketID", GenericResponse_PacketID_name, GenericResponse_PacketID_value)
	proto.RegisterEnum("util.GenericRequestList_PacketID", GenericRequestList_PacketID_name, GenericRequestList_PacketID_value)
	proto.RegisterEnum("util.ClientRequestResponse_ClientRequestResponseFlags", ClientRequestResponse_ClientRequestResponseFlags_name, ClientRequestResponse_ClientRequestResponseFlags_value)
	proto.RegisterEnum("util.ClientRequestResponse_PacketID", ClientRequestResponse_PacketID_name, ClientRequestResponse_PacketID_value)
	proto.RegisterEnum("util.CheckAccountLicensesResponse_PacketID", CheckAccountLicensesResponse_PacketID_name, CheckAccountLicensesResponse_PacketID_value)
	proto.RegisterEnum("util.CheckGameLicensesResponse_PacketID", CheckGameLicensesResponse_PacketID_name, CheckGameLicensesResponse_PacketID_value)
}
