// Code generated by protoc-gen-go.
// source: github.com/vjurenka/hs-proto-go/bnet/game_factory/game_factory.proto
// DO NOT EDIT!

/*
Package game_factory is a generated protocol buffer package.

It is generated from these files:
	github.com/vjurenka/hs-proto-go/bnet/game_factory/game_factory.proto

It has these top-level messages:
	GameProperties
*/
package game_factory

import proto "github.com/golang/protobuf/proto"
import math "math"
import attribute "github.com/vjurenka/hs-proto-go/bnet/attribute"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type GameProperties struct {
	CreationAttributes []*attribute.Attribute     `protobuf:"bytes,1,rep,name=creation_attributes" json:"creation_attributes,omitempty"`
	Filter             *attribute.AttributeFilter `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	Create             *bool                      `protobuf:"varint,3,opt,name=create,def=0" json:"create,omitempty"`
	Open               *bool                      `protobuf:"varint,4,opt,name=open,def=1" json:"open,omitempty"`
	ProgramId          *uint32                    `protobuf:"fixed32,5,opt,name=program_id" json:"program_id,omitempty"`
	XXX_unrecognized   []byte                     `json:"-"`
}

func (m *GameProperties) Reset()         { *m = GameProperties{} }
func (m *GameProperties) String() string { return proto.CompactTextString(m) }
func (*GameProperties) ProtoMessage()    {}

const Default_GameProperties_Create bool = false
const Default_GameProperties_Open bool = true

func (m *GameProperties) GetCreationAttributes() []*attribute.Attribute {
	if m != nil {
		return m.CreationAttributes
	}
	return nil
}

func (m *GameProperties) GetFilter() *attribute.AttributeFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *GameProperties) GetCreate() bool {
	if m != nil && m.Create != nil {
		return *m.Create
	}
	return Default_GameProperties_Create
}

func (m *GameProperties) GetOpen() bool {
	if m != nil && m.Open != nil {
		return *m.Open
	}
	return Default_GameProperties_Open
}

func (m *GameProperties) GetProgramId() uint32 {
	if m != nil && m.ProgramId != nil {
		return *m.ProgramId
	}
	return 0
}
