// Code generated by protoc-gen-go.
// source: github.com/vjurenka/hs-proto-go/bnet/challenge_service/challenge_service.proto
// DO NOT EDIT!

/*
Package challenge_service is a generated protocol buffer package.

It is generated from these files:
	github.com/vjurenka/hs-proto-go/bnet/challenge_service/challenge_service.proto

It has these top-level messages:
	Challenge
	ChallengePickedRequest
	ChallengePickedResponse
	ChallengeAnsweredRequest
	ChallengeAnsweredResponse
	ChallengeCancelledRequest
	SendChallengeToUserRequest
	SendChallengeToUserResponse
	ChallengeUserRequest
	ChallengeResultRequest
	ChallengeExternalRequest
	ChallengeExternalResult
*/
package challenge_service

import proto "github.com/golang/protobuf/proto"
import math "math"
import attribute "github.com/vjurenka/hs-proto-go/bnet/attribute"
import entity "github.com/vjurenka/hs-proto-go/bnet/entity"
import rpc "github.com/vjurenka/hs-proto-go/bnet/rpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Challenge struct {
	Type             *uint32 `protobuf:"fixed32,1,req,name=type" json:"type,omitempty"`
	Info             *string `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	Answer           *string `protobuf:"bytes,3,opt,name=answer" json:"answer,omitempty"`
	Retries          *uint32 `protobuf:"varint,4,opt,name=retries" json:"retries,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Challenge) Reset()         { *m = Challenge{} }
func (m *Challenge) String() string { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()    {}

func (m *Challenge) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Challenge) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *Challenge) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

func (m *Challenge) GetRetries() uint32 {
	if m != nil && m.Retries != nil {
		return *m.Retries
	}
	return 0
}

type ChallengePickedRequest struct {
	Challenge            *uint32 `protobuf:"fixed32,1,req,name=challenge" json:"challenge,omitempty"`
	Id                   *uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	NewChallengeProtocol *bool   `protobuf:"varint,3,opt,name=new_challenge_protocol,def=0" json:"new_challenge_protocol,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *ChallengePickedRequest) Reset()         { *m = ChallengePickedRequest{} }
func (m *ChallengePickedRequest) String() string { return proto.CompactTextString(m) }
func (*ChallengePickedRequest) ProtoMessage()    {}

const Default_ChallengePickedRequest_NewChallengeProtocol bool = false

func (m *ChallengePickedRequest) GetChallenge() uint32 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func (m *ChallengePickedRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChallengePickedRequest) GetNewChallengeProtocol() bool {
	if m != nil && m.NewChallengeProtocol != nil {
		return *m.NewChallengeProtocol
	}
	return Default_ChallengePickedRequest_NewChallengeProtocol
}

type ChallengePickedResponse struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChallengePickedResponse) Reset()         { *m = ChallengePickedResponse{} }
func (m *ChallengePickedResponse) String() string { return proto.CompactTextString(m) }
func (*ChallengePickedResponse) ProtoMessage()    {}

func (m *ChallengePickedResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ChallengeAnsweredRequest struct {
	Answer           *string `protobuf:"bytes,1,req,name=answer" json:"answer,omitempty"`
	Data             []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Id               *uint32 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeAnsweredRequest) Reset()         { *m = ChallengeAnsweredRequest{} }
func (m *ChallengeAnsweredRequest) String() string { return proto.CompactTextString(m) }
func (*ChallengeAnsweredRequest) ProtoMessage()    {}

func (m *ChallengeAnsweredRequest) GetAnswer() string {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return ""
}

func (m *ChallengeAnsweredRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ChallengeAnsweredRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type ChallengeAnsweredResponse struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	DoRetry          *bool  `protobuf:"varint,2,opt,name=do_retry" json:"do_retry,omitempty"`
	RecordNotFound   *bool  `protobuf:"varint,3,opt,name=record_not_found" json:"record_not_found,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChallengeAnsweredResponse) Reset()         { *m = ChallengeAnsweredResponse{} }
func (m *ChallengeAnsweredResponse) String() string { return proto.CompactTextString(m) }
func (*ChallengeAnsweredResponse) ProtoMessage()    {}

func (m *ChallengeAnsweredResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ChallengeAnsweredResponse) GetDoRetry() bool {
	if m != nil && m.DoRetry != nil {
		return *m.DoRetry
	}
	return false
}

func (m *ChallengeAnsweredResponse) GetRecordNotFound() bool {
	if m != nil && m.RecordNotFound != nil {
		return *m.RecordNotFound
	}
	return false
}

type ChallengeCancelledRequest struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeCancelledRequest) Reset()         { *m = ChallengeCancelledRequest{} }
func (m *ChallengeCancelledRequest) String() string { return proto.CompactTextString(m) }
func (*ChallengeCancelledRequest) ProtoMessage()    {}

func (m *ChallengeCancelledRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type SendChallengeToUserRequest struct {
	PeerId           *rpc.ProcessId         `protobuf:"bytes,1,opt,name=peer_id" json:"peer_id,omitempty"`
	GameAccountId    *entity.EntityId       `protobuf:"bytes,2,opt,name=game_account_id" json:"game_account_id,omitempty"`
	Challenges       []*Challenge           `protobuf:"bytes,3,rep,name=challenges" json:"challenges,omitempty"`
	Context          *uint32                `protobuf:"fixed32,4,req,name=context" json:"context,omitempty"`
	Timeout          *uint64                `protobuf:"varint,5,opt,name=timeout" json:"timeout,omitempty"`
	Attributes       []*attribute.Attribute `protobuf:"bytes,6,rep,name=attributes" json:"attributes,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *SendChallengeToUserRequest) Reset()         { *m = SendChallengeToUserRequest{} }
func (m *SendChallengeToUserRequest) String() string { return proto.CompactTextString(m) }
func (*SendChallengeToUserRequest) ProtoMessage()    {}

func (m *SendChallengeToUserRequest) GetPeerId() *rpc.ProcessId {
	if m != nil {
		return m.PeerId
	}
	return nil
}

func (m *SendChallengeToUserRequest) GetGameAccountId() *entity.EntityId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

func (m *SendChallengeToUserRequest) GetChallenges() []*Challenge {
	if m != nil {
		return m.Challenges
	}
	return nil
}

func (m *SendChallengeToUserRequest) GetContext() uint32 {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return 0
}

func (m *SendChallengeToUserRequest) GetTimeout() uint64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

func (m *SendChallengeToUserRequest) GetAttributes() []*attribute.Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type SendChallengeToUserResponse struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SendChallengeToUserResponse) Reset()         { *m = SendChallengeToUserResponse{} }
func (m *SendChallengeToUserResponse) String() string { return proto.CompactTextString(m) }
func (*SendChallengeToUserResponse) ProtoMessage()    {}

func (m *SendChallengeToUserResponse) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type ChallengeUserRequest struct {
	Challenges       []*Challenge           `protobuf:"bytes,1,rep,name=challenges" json:"challenges,omitempty"`
	Context          *uint32                `protobuf:"fixed32,2,req,name=context" json:"context,omitempty"`
	Id               *uint32                `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Deadline         *uint64                `protobuf:"varint,4,opt,name=deadline" json:"deadline,omitempty"`
	Attributes       []*attribute.Attribute `protobuf:"bytes,5,rep,name=attributes" json:"attributes,omitempty"`
	GameAccountId    *entity.EntityId       `protobuf:"bytes,6,opt,name=game_account_id" json:"game_account_id,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ChallengeUserRequest) Reset()         { *m = ChallengeUserRequest{} }
func (m *ChallengeUserRequest) String() string { return proto.CompactTextString(m) }
func (*ChallengeUserRequest) ProtoMessage()    {}

func (m *ChallengeUserRequest) GetChallenges() []*Challenge {
	if m != nil {
		return m.Challenges
	}
	return nil
}

func (m *ChallengeUserRequest) GetContext() uint32 {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return 0
}

func (m *ChallengeUserRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChallengeUserRequest) GetDeadline() uint64 {
	if m != nil && m.Deadline != nil {
		return *m.Deadline
	}
	return 0
}

func (m *ChallengeUserRequest) GetAttributes() []*attribute.Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ChallengeUserRequest) GetGameAccountId() *entity.EntityId {
	if m != nil {
		return m.GameAccountId
	}
	return nil
}

type ChallengeResultRequest struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type             *uint32 `protobuf:"fixed32,2,opt,name=type" json:"type,omitempty"`
	ErrorId          *uint32 `protobuf:"varint,3,opt,name=error_id" json:"error_id,omitempty"`
	Answer           []byte  `protobuf:"bytes,4,opt,name=answer" json:"answer,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeResultRequest) Reset()         { *m = ChallengeResultRequest{} }
func (m *ChallengeResultRequest) String() string { return proto.CompactTextString(m) }
func (*ChallengeResultRequest) ProtoMessage()    {}

func (m *ChallengeResultRequest) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChallengeResultRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ChallengeResultRequest) GetErrorId() uint32 {
	if m != nil && m.ErrorId != nil {
		return *m.ErrorId
	}
	return 0
}

func (m *ChallengeResultRequest) GetAnswer() []byte {
	if m != nil {
		return m.Answer
	}
	return nil
}

type ChallengeExternalRequest struct {
	RequestToken     *string `protobuf:"bytes,1,opt,name=request_token" json:"request_token,omitempty"`
	PayloadType      *string `protobuf:"bytes,2,opt,name=payload_type" json:"payload_type,omitempty"`
	Payload          []byte  `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeExternalRequest) Reset()         { *m = ChallengeExternalRequest{} }
func (m *ChallengeExternalRequest) String() string { return proto.CompactTextString(m) }
func (*ChallengeExternalRequest) ProtoMessage()    {}

func (m *ChallengeExternalRequest) GetRequestToken() string {
	if m != nil && m.RequestToken != nil {
		return *m.RequestToken
	}
	return ""
}

func (m *ChallengeExternalRequest) GetPayloadType() string {
	if m != nil && m.PayloadType != nil {
		return *m.PayloadType
	}
	return ""
}

func (m *ChallengeExternalRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type ChallengeExternalResult struct {
	RequestToken     *string `protobuf:"bytes,1,opt,name=request_token" json:"request_token,omitempty"`
	Passed           *bool   `protobuf:"varint,2,opt,name=passed,def=1" json:"passed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChallengeExternalResult) Reset()         { *m = ChallengeExternalResult{} }
func (m *ChallengeExternalResult) String() string { return proto.CompactTextString(m) }
func (*ChallengeExternalResult) ProtoMessage()    {}

const Default_ChallengeExternalResult_Passed bool = true

func (m *ChallengeExternalResult) GetRequestToken() string {
	if m != nil && m.RequestToken != nil {
		return *m.RequestToken
	}
	return ""
}

func (m *ChallengeExternalResult) GetPassed() bool {
	if m != nil && m.Passed != nil {
		return *m.Passed
	}
	return Default_ChallengeExternalResult_Passed
}
