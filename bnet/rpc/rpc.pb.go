// Code generated by protoc-gen-go.
// source: github.com/vjurenka/hs-proto-go/bnet/rpc/rpc.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	github.com/vjurenka/hs-proto-go/bnet/rpc/rpc.proto

It has these top-level messages:
	NORESPONSE
	Address
	ProcessId
	ObjectAddress
	NoData
	ErrorInfo
	Header
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type NORESPONSE struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *NORESPONSE) Reset()         { *m = NORESPONSE{} }
func (m *NORESPONSE) String() string { return proto.CompactTextString(m) }
func (*NORESPONSE) ProtoMessage()    {}

type Address struct {
	Address          *string `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	Port             *uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}

func (m *Address) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Address) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type ProcessId struct {
	Label            *uint32 `protobuf:"varint,1,req,name=label" json:"label,omitempty"`
	Epoch            *uint32 `protobuf:"varint,2,req,name=epoch" json:"epoch,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProcessId) Reset()         { *m = ProcessId{} }
func (m *ProcessId) String() string { return proto.CompactTextString(m) }
func (*ProcessId) ProtoMessage()    {}

func (m *ProcessId) GetLabel() uint32 {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return 0
}

func (m *ProcessId) GetEpoch() uint32 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

type ObjectAddress struct {
	Host             *ProcessId `protobuf:"bytes,1,req,name=host" json:"host,omitempty"`
	ObjectId         *uint64    `protobuf:"varint,2,opt,name=object_id,def=0" json:"object_id,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ObjectAddress) Reset()         { *m = ObjectAddress{} }
func (m *ObjectAddress) String() string { return proto.CompactTextString(m) }
func (*ObjectAddress) ProtoMessage()    {}

const Default_ObjectAddress_ObjectId uint64 = 0

func (m *ObjectAddress) GetHost() *ProcessId {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *ObjectAddress) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return Default_ObjectAddress_ObjectId
}

type NoData struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *NoData) Reset()         { *m = NoData{} }
func (m *NoData) String() string { return proto.CompactTextString(m) }
func (*NoData) ProtoMessage()    {}

type ErrorInfo struct {
	ObjectAddress    *ObjectAddress `protobuf:"bytes,1,req,name=object_address" json:"object_address,omitempty"`
	Status           *uint32        `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	ServiceHash      *uint32        `protobuf:"varint,3,req,name=service_hash" json:"service_hash,omitempty"`
	MethodId         *uint32        `protobuf:"varint,4,req,name=method_id" json:"method_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ErrorInfo) Reset()         { *m = ErrorInfo{} }
func (m *ErrorInfo) String() string { return proto.CompactTextString(m) }
func (*ErrorInfo) ProtoMessage()    {}

func (m *ErrorInfo) GetObjectAddress() *ObjectAddress {
	if m != nil {
		return m.ObjectAddress
	}
	return nil
}

func (m *ErrorInfo) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *ErrorInfo) GetServiceHash() uint32 {
	if m != nil && m.ServiceHash != nil {
		return *m.ServiceHash
	}
	return 0
}

func (m *ErrorInfo) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

type Header struct {
	ServiceId        *uint32      `protobuf:"varint,1,req,name=service_id" json:"service_id,omitempty"`
	MethodId         *uint32      `protobuf:"varint,2,opt,name=method_id" json:"method_id,omitempty"`
	Token            *uint32      `protobuf:"varint,3,req,name=token" json:"token,omitempty"`
	ObjectId         *uint64      `protobuf:"varint,4,opt,name=object_id,def=0" json:"object_id,omitempty"`
	Size             *uint32      `protobuf:"varint,5,opt,name=size,def=0" json:"size,omitempty"`
	Status           *uint32      `protobuf:"varint,6,opt,name=status,def=0" json:"status,omitempty"`
	Error            []*ErrorInfo `protobuf:"bytes,7,rep,name=error" json:"error,omitempty"`
	Timeout          *uint64      `protobuf:"varint,8,opt,name=timeout" json:"timeout,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}

const Default_Header_ObjectId uint64 = 0
const Default_Header_Size uint32 = 0
const Default_Header_Status uint32 = 0

func (m *Header) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *Header) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

func (m *Header) GetToken() uint32 {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return 0
}

func (m *Header) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return Default_Header_ObjectId
}

func (m *Header) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return Default_Header_Size
}

func (m *Header) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_Header_Status
}

func (m *Header) GetError() []*ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Header) GetTimeout() uint64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}
